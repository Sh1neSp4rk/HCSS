{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Safety.CustomerApi",
    "description": "A safety management system. Operations require the \"safetyapi:read\", \"safetyapi:write\", \"safetyapi:permissions:read\", \"safetyapi:permissions:write\", \"incidents:read\", \"incidents:write\", or \"meetings:read\" scope.",
    "termsOfService": "https://support.hcss.com.",
    "contact": {
      "name": "Heavy Construction Systems Specialists, Inc. (HCSS)",
      "url": "https://support.hcss.com/",
      "email": "support@hcss.com"
    },
    "license": {
      "name": "EULA",
      "url": "https://support.hcss.com."
    }
  },
  "host": "api.hcssapps.com",
  "basePath": "/safety",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "bearer": [
        "safetyapi:read",
        "safetyapi:write",
        "safetyapi:permissions:read",
        "safetyapi:permissions:write",
        "incidents:read",
        "incidents:write",
        "meetings:read"
      ]
    }
  ],
  "paths": {
    "/v1/accessGroups": {
      "get": {
        "tags": [
          "AccessGroups"
        ],
        "summary": "Gets a list of access groups",
        "description": "Gets a list of access groups\r\n\r\nFor help with authorization, please visit https://developer.hcssapps.com/getting-started/request-tokens",
        "operationId": "AccessGroups_GetAccessGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.isDeleted",
            "in": "query",
            "description": "If true, returns deleted access groups.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.limit",
            "in": "query",
            "description": "The maximum number of results that should be returned. Default to 1000. Cannot be more than 1000.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1
          },
          {
            "name": "request.cursor",
            "in": "query",
            "description": "When there are additional results, the metadata nextCursor field should be passed to retrieve the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Access groups queried successfully",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse+ApiAccessGroup"
            },
            "examples": {
              "application/json": {
                "results": [
                  {
                    "id": "e1f3049f-1a2d-4793-89c5-e42c89146339",
                    "name": "Name",
                    "description": "Description",
                    "lastChangedById": "18d4b9cb-8547-45a2-bcf7-0fdc7e45181f",
                    "isDeleted": false
                  }
                ],
                "metadata": {
                  "nextCursor": "KySw1rGEukCz8ne2PqxXxg"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. This typically means one or more request validation errors occurred.\nCheck the response body for details.\nFor more help troubleshooting, please see https://dev-developer.hcssapps.com/getting-started/troubleshoot-bad-request"
          }
        }
      }
    },
    "/v1/alert": {
      "get": {
        "tags": [
          "Alert"
        ],
        "summary": "Gets a list of alerts",
        "description": "Gets a list of alerts based on the provided parameters\r\n\r\nFor help with authorization, please visit https://developer.hcssapps.com/getting-started/request-tokens",
        "operationId": "Alert_GetAllAlerts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.limit",
            "in": "query",
            "description": "The maximum number of results that should be returned. Default to 1000",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1
          },
          {
            "name": "request.businessUnitID",
            "in": "query",
            "description": "The business unit id to filter the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.cursor",
            "in": "query",
            "description": "The metadata nextCursor field should be passed to retrieve the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Alert queried successfully",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse+ApiAlert"
            },
            "examples": {
              "application/json": {
                "results": [
                  {
                    "id": "a35bfadd-2150-4861-8621-2c9589bef77d",
                    "email": "example@example.com",
                    "phoneNumber": "+1234567890",
                    "firstName": "John",
                    "lastName": "Doe",
                    "providerID": "b5f3ff3a-0ea1-44f2-86a1-712a46a06ba1",
                    "businessUnitID": "e80ac80c-acb2-4393-9ab0-a6bd715535a5",
                    "carrierAddressOverride": "12345@carrier.com",
                    "nearMiss": {
                      "receiveAlert": false
                    },
                    "incidents": {
                      "receiveAlert": true,
                      "managerCreated": false,
                      "managerUpdated": true,
                      "fieldCreated": true,
                      "fieldUpdated": false,
                      "sendAllFormTypes": true,
                      "formTypes": []
                    },
                    "inspections": {
                      "receiveAlert": true,
                      "allInspections": true,
                      "inspectionsType": []
                    },
                    "observations": {
                      "receiveAlert": true,
                      "observationAlertFlag": 1,
                      "severityThreshold": 3
                    },
                    "jobs": {
                      "isAllJobs": false,
                      "jobs": [
                        "064d9d2e-d3a9-456f-91bf-1b0007afa068"
                      ]
                    }
                  }
                ],
                "metadata": {
                  "nextCursor": "KySw1rGEukCz8ne2PqxXxg"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. This typically means one or more request validation errors occurred.\nCheck the response body for details.\nFor more help troubleshooting, please see https://dev-developer.hcssapps.com/getting-started/troubleshoot-bad-request"
          }
        }
      }
    },
    "/v1/incidents/{id}": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Gets a single incident case by ID.",
        "description": "Gets a single incident case by ID.\r\n\r\nFor help with authorization, please visit https://developer.hcssapps.com/getting-started/request-tokens",
        "operationId": "Incidents_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Incident found",
            "schema": {
              "$ref": "#/definitions/ApiIncidentDetailsV1"
            },
            "examples": {
              "application/json": {
                "EmployeeInjuries": [
                  {
                    "EmployeeCode": "employee-code-04",
                    "Address": {
                      "Address1": "456 Old Street",
                      "Address2": null,
                      "City": "Houston",
                      "State": "TX",
                      "ZipCode": "77042",
                      "Country": "US"
                    },
                    "Phone": "555-111-4444",
                    "Email": "employee04@company.com",
                    "JobTitle": "Contractor",
                    "DateOfHire": "2024-10-14T19:59:42.3393965Z",
                    "YearsWithCompanyString": "1",
                    "YearsInConstructionString": "3",
                    "DescriptionOfInjury": "Minor cut on left arm",
                    "TimeStartedWork": "2024-10-14T08:00:00Z",
                    "ActivityAtTime": "Working on XYZ",
                    "InjuryClassificationString": "illness/injury classification",
                    "NatureOfInjuryCategoryString": "nature of injury category",
                    "NatureOfInjuryTypeString": "nature of injury type",
                    "IncidentCauseCategoryString": "incident cause category",
                    "IncidentCauseTypeString": "incident cause type",
                    "InjuredBodyPartCategoryString": "Limb",
                    "InjuredBodyPartTypeString": "Arm",
                    "InjuredSideString": "Left",
                    "DrugAlcoholTest": true,
                    "DrugAlcoholTestFacility": "Test Facility, MD",
                    "FirstAidMedOnly": true,
                    "FirstAidMedOnlyProvidedBy": "employee-code-05",
                    "TreatedAwayFromWorkSite": false,
                    "TreatedAwayFromWorkSiteProvidedBy": "provider",
                    "TreatedInAnEmergencyRoom": false,
                    "HospitalizedOvernightInpatient": false,
                    "MedicalFacility": "medical facility (if treated at one)",
                    "PhysicianHealthCareProvider": "provider",
                    "IsRecordable": true,
                    "ExcludeNameFromOSHAReport": false,
                    "SummarizedDescriptionForOSHA": "summarized description",
                    "ClassificationString": "injury classification",
                    "DateOfDeath": "0001-01-01T00:00:00",
                    "DaysAwayFromWork": {
                      "FirstDay": "2024-10-15T00:00:00Z",
                      "LastDay": "2024-10-17T00:00:00Z",
                      "IncludeWeekends": true,
                      "DaysAway": 3
                    },
                    "DaysOnJobTransfer": {
                      "FirstDay": "2024-10-15T00:00:00Z",
                      "LastDay": "2024-10-17T00:00:00Z",
                      "IncludeWeekends": true,
                      "DaysAway": 3
                    },
                    "Notes": "Additional injury notes",
                    "Attachments": [
                      {
                        "AttachmentUrl": "https://attachments.hcssapps.com/injury-photo.png",
                        "Name": "injury photo",
                        "MimeType": "image/png"
                      }
                    ],
                    "RootCause": {
                      "isRootCause": true,
                      "ProbableRecurrenceString": "Low/Medium/High",
                      "PotentialExposureString": "Low/Medium/High",
                      "LossSeverityPotentialString": "Low/Medium/High",
                      "LossPotentialNotes": "additional notes",
                      "EmployeeReceivedSafetyTrainingString": "True",
                      "EmployeeNeedsSafetyTrainingString": "True",
                      "OtherEmployeeNeedSafetyTrainingString": "True",
                      "PersonResponsibleCode": "employee-code-06",
                      "TrainingNotes": "training notes",
                      "UnsafeActsDirectCause": "direct cause",
                      "UnsafeActsIndirectCause": "indirect cause",
                      "UnsafeActsManagementControl": "management control",
                      "UnsafeActsNotes": "additional notes",
                      "UnsafeConditionsDirectCause": "direct cause",
                      "UnsafeConditionsIndirectCause": "indirect cause",
                      "UnsafeConditionsManagementControl": "management control",
                      "UnsafeConditionsNotes": "additional notes",
                      "FuturePreventionString": "future prevention measures",
                      "PreventiveMeasuresNotes": "additional notes",
                      "AssigneeCode": "employee-code-07",
                      "TargetCompletionDate": "2024-10-21T00:00:00Z",
                      "CompletionDate": "2024-10-21T00:00:00Z",
                      "PreventiveAccountabilityNotes": "additional notes"
                    }
                  }
                ],
                "Attachments": [
                  {
                    "AttachmentUrl": "https://attachments.hcssapps.com/injury-photo.png",
                    "Name": "injury photo",
                    "MimeType": "image/png"
                  }
                ],
                "FieldAttachments": [
                  {
                    "AttachmentUrl": "https://attachments.hcssapps.com/injury-photo.png",
                    "Name": "injury photo",
                    "MimeType": "image/png"
                  }
                ],
                "MinersInvolved": [
                  {
                    "MinerCode": "minor-code-01",
                    "JobTitle": "Contractor",
                    "ExperienceJobTitle": "5",
                    "ExperienceJobTitleMeasure": "years",
                    "ExperienceMine": "2",
                    "ExperienceMineMeasure": "months",
                    "ExperienceTotalMining": "7",
                    "ExperienceTotalMiningMeasure": "years"
                  }
                ],
                "Address": {
                  "Address1": "123 New Streat",
                  "Address2": null,
                  "City": "Houston",
                  "State": "TX",
                  "ZipCode": "77042",
                  "Country": "US"
                },
                "CreatedDateUtc": "2024-10-14T19:59:42.2300167Z",
                "LastModifiedUtc": "2024-10-14T19:59:42.2300167Z",
                "BusinessUnitDescription": "BU-123 description",
                "ReportingStatus": "ReportedToThirdPartyCarrier",
                "InsuranceCompanyName": "Allstate",
                "InsuranceClaimTypes": [
                  "claim type 1"
                ],
                "ClaimNumber": "111111",
                "Adjuster": "FirstName LastName",
                "AdjusterEmail": "adjuster@company.com",
                "AdjusterPhone": "555-111-9999",
                "AdjusterNotes": "adjuster notes",
                "DateInvestigationBegan": "2024-10-15T19:59:42.2300167Z",
                "ID": "c32ab494-4bb2-46f1-952c-f77dc512e4d6",
                "CaseNumber": "injury-1234",
                "Description": "Employee injured on-site",
                "Notes": "Additional notes",
                "FieldNotes": "Notes from Field Employees",
                "JobCode": "construction-job-123",
                "BusinessUnitCode": "BU-123",
                "LocationDescription": "job site",
                "ReportedDateUtc": "2024-10-14T19:59:42.2300167Z",
                "RecorderCode": "employee-code-01",
                "PersonInChargeCode": "employee-code-02",
                "IncidentDateUtc": "2024-10-14T18:59:42.2300167Z",
                "Status": "Reported",
                "Latitude": 29.76,
                "Longitude": 95.37,
                "Weather": "Overcast",
                "PersonMostFamiliarCode": "employee-code-03",
                "RecordedEmail": "employee01@company.com",
                "RecordedPhoneNumber": "555-111-1111",
                "PersonInChargeEmail": "employee02@company.com",
                "PersonInChargePhoneNumber": "555-111-2222",
                "PersonMostFamiliarEmail": "employee03@company.com",
                "PersonMostFamiliarPhoneNumber": "555-111-3333",
                "EstimatedCost": 1000,
                "ActualCost": 1100,
                "IsMSHAInvestigation": true,
                "Individuals": "employee-code-01;employee-code-02;employee-code-03",
                "SiteDescription": "Work site description",
                "AccidentInjuryExplanation": "Employee injured left arm while working on XYZ",
                "StepsToPreventFutureOccurrences": "Hazard control steps will be attached to equipment"
              }
            }
          },
          "400": {
            "description": "Bad Request. This typically means one or more request validation errors occurred.\nCheck the response body for details.\nFor more help troubleshooting, please see https://dev-developer.hcssapps.com/getting-started/troubleshoot-bad-request"
          }
        }
      },
      "put": {
        "tags": [
          "Incidents"
        ],
        "summary": "Updates an existing incident case by ID",
        "description": "Updates an existing incident by ID. If the incident does not already exist,\r\nthis call will return an error. \r\n\r\nFor help with authorization, please visit https://developer.hcssapps.com/getting-started/request-tokens",
        "operationId": "Incidents_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The incident ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incident",
            "in": "body",
            "description": "The incident you want to modify",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiIncidentUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Incident saved successfully",
            "schema": {
              "$ref": "#/definitions/ApiIncidentDetailsV1"
            },
            "examples": {
              "application/json": {
                "EmployeeInjuries": [
                  {
                    "EmployeeCode": "employee-code-04",
                    "Address": {
                      "Address1": "456 Old Street",
                      "Address2": null,
                      "City": "Houston",
                      "State": "TX",
                      "ZipCode": "77042",
                      "Country": "US"
                    },
                    "Phone": "555-111-4444",
                    "Email": "employee04@company.com",
                    "JobTitle": "Contractor",
                    "DateOfHire": "2024-10-14T19:59:42.511274Z",
                    "YearsWithCompanyString": "1",
                    "YearsInConstructionString": "3",
                    "DescriptionOfInjury": "Minor cut on left arm",
                    "TimeStartedWork": "2024-10-14T08:00:00Z",
                    "ActivityAtTime": "Working on XYZ",
                    "InjuryClassificationString": "illness/injury classification",
                    "NatureOfInjuryCategoryString": "nature of injury category",
                    "NatureOfInjuryTypeString": "nature of injury type",
                    "IncidentCauseCategoryString": "incident cause category",
                    "IncidentCauseTypeString": "incident cause type",
                    "InjuredBodyPartCategoryString": "Limb",
                    "InjuredBodyPartTypeString": "Arm",
                    "InjuredSideString": "Left",
                    "DrugAlcoholTest": true,
                    "DrugAlcoholTestFacility": "Test Facility, MD",
                    "FirstAidMedOnly": true,
                    "FirstAidMedOnlyProvidedBy": "employee-code-05",
                    "TreatedAwayFromWorkSite": false,
                    "TreatedAwayFromWorkSiteProvidedBy": "provider",
                    "TreatedInAnEmergencyRoom": false,
                    "HospitalizedOvernightInpatient": false,
                    "MedicalFacility": "medical facility (if treated at one)",
                    "PhysicianHealthCareProvider": "provider",
                    "IsRecordable": true,
                    "ExcludeNameFromOSHAReport": false,
                    "SummarizedDescriptionForOSHA": "summarized description",
                    "ClassificationString": "injury classification",
                    "DateOfDeath": "0001-01-01T00:00:00",
                    "DaysAwayFromWork": {
                      "FirstDay": "2024-10-15T00:00:00Z",
                      "LastDay": "2024-10-17T00:00:00Z",
                      "IncludeWeekends": true,
                      "DaysAway": 3
                    },
                    "DaysOnJobTransfer": {
                      "FirstDay": "2024-10-15T00:00:00Z",
                      "LastDay": "2024-10-17T00:00:00Z",
                      "IncludeWeekends": true,
                      "DaysAway": 3
                    },
                    "Notes": "Additional injury notes",
                    "Attachments": [
                      {
                        "AttachmentUrl": "https://attachments.hcssapps.com/injury-photo.png",
                        "Name": "injury photo",
                        "MimeType": "image/png"
                      }
                    ],
                    "RootCause": {
                      "isRootCause": true,
                      "ProbableRecurrenceString": "Low/Medium/High",
                      "PotentialExposureString": "Low/Medium/High",
                      "LossSeverityPotentialString": "Low/Medium/High",
                      "LossPotentialNotes": "additional notes",
                      "EmployeeReceivedSafetyTrainingString": "True",
                      "EmployeeNeedsSafetyTrainingString": "True",
                      "OtherEmployeeNeedSafetyTrainingString": "True",
                      "PersonResponsibleCode": "employee-code-06",
                      "TrainingNotes": "training notes",
                      "UnsafeActsDirectCause": "direct cause",
                      "UnsafeActsIndirectCause": "indirect cause",
                      "UnsafeActsManagementControl": "management control",
                      "UnsafeActsNotes": "additional notes",
                      "UnsafeConditionsDirectCause": "direct cause",
                      "UnsafeConditionsIndirectCause": "indirect cause",
                      "UnsafeConditionsManagementControl": "management control",
                      "UnsafeConditionsNotes": "additional notes",
                      "FuturePreventionString": "future prevention measures",
                      "PreventiveMeasuresNotes": "additional notes",
                      "AssigneeCode": "employee-code-07",
                      "TargetCompletionDate": "2024-10-21T00:00:00Z",
                      "CompletionDate": "2024-10-21T00:00:00Z",
                      "PreventiveAccountabilityNotes": "additional notes"
                    }
                  }
                ],
                "Attachments": [
                  {
                    "AttachmentUrl": "https://attachments.hcssapps.com/injury-photo.png",
                    "Name": "injury photo",
                    "MimeType": "image/png"
                  }
                ],
                "FieldAttachments": [
                  {
                    "AttachmentUrl": "https://attachments.hcssapps.com/injury-photo.png",
                    "Name": "injury photo",
                    "MimeType": "image/png"
                  }
                ],
                "MinersInvolved": [
                  {
                    "MinerCode": "minor-code-01",
                    "JobTitle": "Contractor",
                    "ExperienceJobTitle": "5",
                    "ExperienceJobTitleMeasure": "years",
                    "ExperienceMine": "2",
                    "ExperienceMineMeasure": "months",
                    "ExperienceTotalMining": "7",
                    "ExperienceTotalMiningMeasure": "years"
                  }
                ],
                "Address": {
                  "Address1": "123 New Streat",
                  "Address2": null,
                  "City": "Houston",
                  "State": "TX",
                  "ZipCode": "77042",
                  "Country": "US"
                },
                "CreatedDateUtc": "2024-10-14T19:59:42.4175255Z",
                "LastModifiedUtc": "2024-10-14T19:59:42.4175255Z",
                "BusinessUnitDescription": "BU-123 description",
                "ReportingStatus": "ReportedToThirdPartyCarrier",
                "InsuranceCompanyName": "Allstate",
                "InsuranceClaimTypes": [
                  "claim type 1"
                ],
                "ClaimNumber": "111111",
                "Adjuster": "FirstName LastName",
                "AdjusterEmail": "adjuster@company.com",
                "AdjusterPhone": "555-111-9999",
                "AdjusterNotes": "adjuster notes",
                "DateInvestigationBegan": "2024-10-15T19:59:42.4175255Z",
                "ID": "bbb2f7e6-b466-49a9-987a-fdb5d8c78bc2",
                "CaseNumber": "injury-1234",
                "Description": "Employee injured on-site",
                "Notes": "Additional notes",
                "FieldNotes": "Notes from Field Employees",
                "JobCode": "construction-job-123",
                "BusinessUnitCode": "BU-123",
                "LocationDescription": "job site",
                "ReportedDateUtc": "2024-10-14T19:59:42.4175255Z",
                "RecorderCode": "employee-code-01",
                "PersonInChargeCode": "employee-code-02",
                "IncidentDateUtc": "2024-10-14T18:59:42.4175255Z",
                "Status": "Reported",
                "Latitude": 29.76,
                "Longitude": 95.37,
                "Weather": "Overcast",
                "PersonMostFamiliarCode": "employee-code-03",
                "RecordedEmail": "employee01@company.com",
                "RecordedPhoneNumber": "555-111-1111",
                "PersonInChargeEmail": "employee02@company.com",
                "PersonInChargePhoneNumber": "555-111-2222",
                "PersonMostFamiliarEmail": "employee03@company.com",
                "PersonMostFamiliarPhoneNumber": "555-111-3333",
                "EstimatedCost": 1000,
                "ActualCost": 1100,
                "IsMSHAInvestigation": true,
                "Individuals": "employee-code-01;employee-code-02;employee-code-03",
                "SiteDescription": "Work site description",
                "AccidentInjuryExplanation": "Employee injured left arm while working on XYZ",
                "StepsToPreventFutureOccurrences": "Hazard control steps will be attached to equipment"
              }
            }
          },
          "400": {
            "description": "Bad Request. This typically means one or more request validation errors occurred.\nCheck the response body for details.\nFor more help troubleshooting, please see https://dev-developer.hcssapps.com/getting-started/troubleshoot-bad-request"
          }
        }
      }
    },
    "/v1/incidents": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Gets a list of incident cases.",
        "description": "Gets a list of incident cases.\r\n\r\nA response header called \"Pagination-MorePagesAvailable\" will be sent in the response with a value of \"yes\" or \"no\", indicating whether more pages are available after\r\nthis one.  That is, if the header value is \"yes\", the client should request the next page.\r\n\r\nFor help with authorization, please visit https://developer.hcssapps.com/getting-started/request-tokens",
        "operationId": "Incidents_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "modifiedAfterUtc",
            "in": "query",
            "description": "Limits the results to incidents that have been updated or created after the specified UTC time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdAfterUtc",
            "in": "query",
            "description": "Limits the results to incidents that have been created after the specified UTC time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "incidentDateAfterUtc",
            "in": "query",
            "description": "Limits the results to incidents that have an incident date after the specified UTC time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "incidentDateBeforeUtc",
            "in": "query",
            "description": "Limits the results to incidents that have an incident date before the specified UTC time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results returned.  Default 1000.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The page offset.  The response header \"Pagination-MorePagesAvailable\" indicates whether the call should be made again with an incremented offset.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Incidents queried successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiIncident"
              }
            },
            "examples": {
              "application/json": [
                {
                  "CreatedDateUtc": "2024-10-14T19:59:42.5268985Z",
                  "LastModifiedUtc": "2024-10-14T19:59:42.5268985Z",
                  "BusinessUnitDescription": "BU-123 description",
                  "ReportingStatus": "ReportedToThirdPartyCarrier",
                  "InsuranceCompanyName": "Allstate",
                  "InsuranceClaimTypes": [
                    "claim type 1"
                  ],
                  "ClaimNumber": "111111",
                  "Adjuster": "FirstName LastName",
                  "AdjusterEmail": "adjuster@company.com",
                  "AdjusterPhone": "555-111-9999",
                  "AdjusterNotes": "adjuster notes",
                  "DateInvestigationBegan": "2024-10-15T19:59:42.5268985Z",
                  "ID": "cbcbd50f-7263-4311-9867-d01192e7d14e",
                  "CaseNumber": "injury-1234",
                  "Description": "Employee injured on-site",
                  "Notes": "Additional notes",
                  "FieldNotes": "Notes from Field Employees",
                  "JobCode": "construction-job-123",
                  "BusinessUnitCode": "BU-123",
                  "LocationDescription": "job site",
                  "ReportedDateUtc": "2024-10-14T19:59:42.5268985Z",
                  "RecorderCode": "employee-code-01",
                  "PersonInChargeCode": "employee-code-02",
                  "IncidentDateUtc": "2024-10-14T18:59:42.5268985Z",
                  "Status": "Reported",
                  "Latitude": 29.76,
                  "Longitude": 95.37,
                  "Weather": "Overcast",
                  "PersonMostFamiliarCode": "employee-code-03",
                  "RecordedEmail": "employee01@company.com",
                  "RecordedPhoneNumber": "555-111-1111",
                  "PersonInChargeEmail": "employee02@company.com",
                  "PersonInChargePhoneNumber": "555-111-2222",
                  "PersonMostFamiliarEmail": "employee03@company.com",
                  "PersonMostFamiliarPhoneNumber": "555-111-3333",
                  "EstimatedCost": 1000,
                  "ActualCost": 1100,
                  "IsMSHAInvestigation": true,
                  "Individuals": "employee-code-01;employee-code-02;employee-code-03",
                  "SiteDescription": "Work site description",
                  "AccidentInjuryExplanation": "Employee injured left arm while working on XYZ",
                  "StepsToPreventFutureOccurrences": "Hazard control steps will be attached to equipment"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request. This typically means one or more request validation errors occurred.\nCheck the response body for details.\nFor more help troubleshooting, please see https://dev-developer.hcssapps.com/getting-started/troubleshoot-bad-request"
          }
        }
      }
    },
    "/v2/incidents/{id}": {
      "get": {
        "tags": [
          "IncidentsV2"
        ],
        "summary": "Gets a single incident case by ID.",
        "description": "Gets a single incident case by ID.\r\n\r\nFor help with authorization, please visit https://developer.hcssapps.com/getting-started/request-tokens",
        "operationId": "IncidentsV_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "excludeForms",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Incident found",
            "schema": {
              "$ref": "#/definitions/ApiIncidentDetailsV2"
            },
            "examples": {
              "application/json": {
                "IncidentForms": [
                  {
                    "FormName": "Vehicle",
                    "Sections": [
                      {
                        "Section": "Owner Information",
                        "Questions": [
                          {
                            "Question": "Name",
                            "Answer": "FirstName LastName",
                            "Attachments": [],
                            "Passengers": [],
                            "Address": null,
                            "OtherVehicles": null,
                            "OtherPassengers": null,
                            "Items": null,
                            "DaysInterval": null
                          }
                        ]
                      },
                      {
                        "Section": "Attachments",
                        "Questions": [
                          {
                            "Question": "Attachments",
                            "Answer": "",
                            "Attachments": [
                              {
                                "AttachmentUrl": "https://attachments.hcssapps.com/attachment.png",
                                "Name": "attachment",
                                "MimeType": "image/png"
                              }
                            ],
                            "Passengers": [],
                            "Address": null,
                            "OtherVehicles": null,
                            "OtherPassengers": null,
                            "Items": null,
                            "DaysInterval": null
                          }
                        ]
                      },
                      {
                        "Section": "Passenger Information",
                        "Questions": [
                          {
                            "Question": "Passenger Information",
                            "Answer": "",
                            "Attachments": [],
                            "Passengers": [
                              {
                                "Name": "FirstName LastName",
                                "Address": "123 New Street",
                                "Address2": null,
                                "City": "Houston",
                                "State": "TX",
                                "ZipCode": "77042",
                                "Country": "US",
                                "MobilePhone": "555-111-4444",
                                "HomePhone": "555-111-4444"
                              }
                            ],
                            "Address": null,
                            "OtherVehicles": null,
                            "OtherPassengers": null,
                            "Items": null,
                            "DaysInterval": null
                          }
                        ]
                      },
                      {
                        "Section": "Other Vehicle Information",
                        "Questions": [
                          {
                            "Question": "Other Vehicle Information",
                            "Answer": "",
                            "Attachments": [],
                            "Passengers": [],
                            "Address": null,
                            "OtherVehicles": [
                              {
                                "DriverName": "FirstName LastName",
                                "Make": "Honda",
                                "Model": "Civic",
                                "Year": "2018",
                                "LicensePlate": "SAM123",
                                "VinNumber": "19XFC1048W9110023",
                                "State": "TX",
                                "Carrier": "Allstate",
                                "PolicyNumber": "0123456789"
                              }
                            ],
                            "OtherPassengers": null,
                            "Items": null,
                            "DaysInterval": null
                          }
                        ]
                      },
                      {
                        "Section": "Other Passenger Information",
                        "Questions": [
                          {
                            "Question": "Other Passenger Information",
                            "Answer": "",
                            "Attachments": [],
                            "Passengers": [],
                            "Address": null,
                            "OtherVehicles": null,
                            "OtherPassengers": [
                              {
                                "Vehicle": "Other Vehicle 1",
                                "Name": "FirstName LastName",
                                "MobilePhone": "555-111-4444",
                                "HomePhone": "555-111-4444",
                                "Address1": "123 Old Street",
                                "Address2": null,
                                "City": "Houston",
                                "State": "TX",
                                "Zip": "77042",
                                "Country": "US"
                              }
                            ],
                            "Items": null,
                            "DaysInterval": null
                          }
                        ]
                      },
                      {
                        "Section": "Item Information",
                        "Questions": [
                          {
                            "Question": "Item Information",
                            "Answer": "",
                            "Attachments": [],
                            "Passengers": [],
                            "Address": null,
                            "OtherVehicles": null,
                            "OtherPassengers": null,
                            "Items": [
                              {
                                "ItemDescription": "Drill",
                                "EstimatedValue": "123"
                              }
                            ],
                            "DaysInterval": null
                          }
                        ]
                      },
                      {
                        "Section": "Classification",
                        "Questions": [
                          {
                            "Question": "Days Away From Work",
                            "Answer": "",
                            "Attachments": [],
                            "Passengers": [],
                            "Address": null,
                            "OtherVehicles": null,
                            "OtherPassengers": null,
                            "Items": null,
                            "DaysInterval": {
                              "FirstDay": "1/11/24",
                              "LastDay": "1/24/24",
                              "DaysAway": 14,
                              "IncludeWeekends": true
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "Attachments": [
                  {
                    "AttachmentUrl": "https://attachments.hcssapps.com/injury-photo.png",
                    "Name": "injury photo",
                    "MimeType": "image/png"
                  }
                ],
                "FieldAttachments": [
                  {
                    "AttachmentUrl": "https://attachments.hcssapps.com/injury-photo.png",
                    "Name": "injury photo",
                    "MimeType": "image/png"
                  }
                ],
                "MinersInvolved": [
                  {
                    "MinerCode": "minor-code-01",
                    "JobTitle": "Contractor",
                    "ExperienceJobTitle": "5",
                    "ExperienceJobTitleMeasure": "years",
                    "ExperienceMine": "2",
                    "ExperienceMineMeasure": "months",
                    "ExperienceTotalMining": "7",
                    "ExperienceTotalMiningMeasure": "years"
                  }
                ],
                "Address": {
                  "Address1": "123 New Streat",
                  "Address2": null,
                  "City": "Houston",
                  "State": "TX",
                  "ZipCode": "77042",
                  "Country": "US"
                },
                "CreatedDateUtc": "2024-10-14T19:59:42.5737729Z",
                "LastModifiedUtc": "2024-10-14T19:59:42.5737729Z",
                "BusinessUnitDescription": "BU-123 description",
                "ReportingStatus": "ReportedToThirdPartyCarrier",
                "InsuranceCompanyName": "Allstate",
                "InsuranceClaimTypes": [
                  "claim type 1"
                ],
                "ClaimNumber": "111111",
                "Adjuster": "FirstName LastName",
                "AdjusterEmail": "adjuster@company.com",
                "AdjusterPhone": "555-111-9999",
                "AdjusterNotes": "adjuster notes",
                "DateInvestigationBegan": "2024-10-15T19:59:42.5737729Z",
                "ID": "8baf54d7-b0c2-41f8-91b2-ed7d56b85d81",
                "CaseNumber": "injury-1234",
                "Description": "Employee injured on-site",
                "Notes": "Additional notes",
                "FieldNotes": "Notes from Field Employees",
                "JobCode": "construction-job-123",
                "BusinessUnitCode": "BU-123",
                "LocationDescription": "job site",
                "ReportedDateUtc": "2024-10-14T19:59:42.5737729Z",
                "RecorderCode": "employee-code-01",
                "PersonInChargeCode": "employee-code-02",
                "IncidentDateUtc": "2024-10-14T18:59:42.5737729Z",
                "Status": "Reported",
                "Latitude": 29.76,
                "Longitude": 95.37,
                "Weather": "Overcast",
                "PersonMostFamiliarCode": "employee-code-03",
                "RecordedEmail": "employee01@company.com",
                "RecordedPhoneNumber": "555-111-1111",
                "PersonInChargeEmail": "employee02@company.com",
                "PersonInChargePhoneNumber": "555-111-2222",
                "PersonMostFamiliarEmail": "employee03@company.com",
                "PersonMostFamiliarPhoneNumber": "555-111-3333",
                "EstimatedCost": 1000,
                "ActualCost": 1100,
                "IsMSHAInvestigation": true,
                "Individuals": "employee-code-01;employee-code-02;employee-code-03",
                "SiteDescription": "Work site description",
                "AccidentInjuryExplanation": "Employee injured left arm while working on XYZ",
                "StepsToPreventFutureOccurrences": "Hazard control steps will be attached to equipment"
              }
            }
          },
          "400": {
            "description": "Bad Request. This typically means one or more request validation errors occurred.\nCheck the response body for details.\nFor more help troubleshooting, please see https://dev-developer.hcssapps.com/getting-started/troubleshoot-bad-request"
          }
        }
      }
    },
    "/v1/meetings": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Gets a list of recorded meetings",
        "description": "Gets a list of recorded meetings.\r\n\r\nFor help with authorization, please visit https://developer.hcssapps.com/getting-started/request-tokens",
        "operationId": "Meetings_GetMeetings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "Filters by job ID",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "recorderId",
            "in": "query",
            "description": "Filters by employee ID",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Filters by business unit ID",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Filters for meetings in which this employee is listed as an attendee",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filters for meetings occurring on or after this date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filters for meetings occurring on or before this date",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skips the first X entries",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "take",
            "in": "query",
            "description": "Limits to X entries",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Meetings queried successfully",
            "schema": {
              "$ref": "#/definitions/GetMeetingsResponse"
            },
            "examples": {
              "application/json": {
                "Meetings": [
                  {
                    "Id": "20896b84-67ae-4c57-88ae-9d97fa68d646",
                    "MeetingDate": "2024-10-14T19:59:42.6987791Z",
                    "JobId": "350a7923-e562-42f2-821c-a964a4feb6fa",
                    "JobCode": "road-construction-123",
                    "RecorderId": "c9ad2a32-a99f-4c82-81c1-2da5cbbdcb0c",
                    "RecorderCode": "EMP-123",
                    "DurationMinutes": 60,
                    "Type": "Weekly check-in",
                    "Notes": "Additional notes",
                    "Topics": [
                      {
                        "TopicName": "Projected timeline",
                        "Subtopics": [
                          "Subtopic 1",
                          "Subtopic 2"
                        ]
                      }
                    ],
                    "Attachments": [
                      "http://attachments.hcssapps.com/road-work-progress.png",
                      "http://attachments.hcssapps.com/meeting-notes.pdf"
                    ],
                    "Employees": [
                      {
                        "FirstName": "Joseph",
                        "LastName": "Joestar",
                        "EmployeeCode": "EMP-01",
                        "OnSite": true,
                        "Attended": true
                      }
                    ],
                    "Visitors": [
                      {
                        "Name": "Jotaro Kujo",
                        "Note": "Client manager",
                        "OnSite": true,
                        "Attended": true
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. This typically means one or more request validation errors occurred.\nCheck the response body for details.\nFor more help troubleshooting, please see https://dev-developer.hcssapps.com/getting-started/troubleshoot-bad-request"
          }
        }
      }
    },
    "/v1/userAccessGroups/search": {
      "post": {
        "tags": [
          "UserAccessGroups"
        ],
        "summary": "Returns list of users' access groups",
        "description": "This call returns the users access groups.\r\n\r\nFor help with authorization, please visit https://developer.hcssapps.com/getting-started/request-tokens",
        "operationId": "UserAccessGroups_SearchUserAccessGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Request object containing the user ids",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchUserAccessGroupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse+ApiUserAccessGroup"
            },
            "examples": {
              "application/json": {
                "results": [
                  {
                    "userId": "59c7ee37-2735-4251-b617-daddc9ff0204",
                    "accessGroupId": "8625e069-0785-4642-b8f5-3cde90b2414c"
                  }
                ],
                "metadata": {
                  "nextCursor": "KySw1rGEukCz8ne2PqxXxg"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. This typically means one or more request validation errors occurred.\nCheck the response body for details.\nFor more help troubleshooting, please see https://dev-developer.hcssapps.com/getting-started/troubleshoot-bad-request"
          }
        }
      }
    },
    "/v1/userAccessGroups": {
      "patch": {
        "tags": [
          "UserAccessGroups"
        ],
        "summary": "Updates access group for users",
        "description": "This call  updates the users' access group.\r\n\r\nFor help with authorization, please visit https://developer.hcssapps.com/getting-started/request-tokens",
        "operationId": "UserAccessGroups_UpdateUserAccessGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "List of items representing user access groups",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateUserAccessGroupRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateUserAccessGroupsResponse"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "c56ca7fa-ef07-4b92-875d-6471d1716970",
                  "userId": "da76216d-b7c3-4e28-be1a-df501da3c6e9",
                  "accessGroupId": "612e051b-1d1c-450c-89a5-2338989e40ff",
                  "success": true,
                  "message": ""
                },
                {
                  "id": "9b28cf9c-1f1a-486c-b092-c3a0545ea766",
                  "userId": "55d57a93-48a3-4514-affd-3c49cef0d9c5",
                  "accessGroupId": "ba229f76-5f4c-42e7-850d-94767b4c5292",
                  "success": false,
                  "message": "The userId provided does not exist"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request. This typically means one or more request validation errors occurred.\nCheck the response body for details.\nFor more help troubleshooting, please see https://dev-developer.hcssapps.com/getting-started/troubleshoot-bad-request"
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a single user by ID.",
        "description": "For help with authorization, please visit https://developer.hcssapps.com/getting-started/request-tokens",
        "operationId": "Users_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the user.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/ApiUser"
            },
            "examples": {
              "application/json": {
                "id": "a9983748-b73e-4b7f-b63d-00a2de3c08ba",
                "userName": "name66.LastName66@Dev",
                "firstName": "name66",
                "lastName": "LastName66",
                "email": "nancy.oneida@hcss.com",
                "isDeleted": false,
                "deletedBy": null,
                "deletedDate": null,
                "allowSync": false,
                "syncTimestamp": "2022-08-12T19:13:47.0938417",
                "employee": {
                  "id": "07c29992-c51d-4de6-817b-831f27bd34e7",
                  "code": "0812C",
                  "firstName": "nancy",
                  "lastName": "nancy31"
                }
              }
            }
          },
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "Bad Request. This typically means one or more request validation errors occurred.\nCheck the response body for details.\nFor more help troubleshooting, please see https://dev-developer.hcssapps.com/getting-started/troubleshoot-bad-request"
          }
        }
      }
    }
  },
  "definitions": {
    "GetAccessGroupsRequest": {
      "description": "The request body for the endpoint that gets the access groups",
      "type": "object",
      "properties": {
        "IsDeleted": {
          "description": "If true, returns deleted access groups.",
          "type": "boolean"
        },
        "Limit": {
          "format": "int32",
          "description": "The maximum number of results that should be returned. Default to 1000. Cannot be more than 1000.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer"
        },
        "Cursor": {
          "description": "When there are additional results, the metadata nextCursor field should be passed to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "PaginatedResponse+ApiAccessGroup": {
      "type": "object",
      "properties": {
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiAccessGroup"
          },
          "readOnly": true
        },
        "Metadata": {
          "$ref": "#/definitions/ResponseMetadata+ApiAccessGroup",
          "readOnly": true
        }
      }
    },
    "ApiAccessGroup": {
      "description": "The access group",
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "The role id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "description": "The role name",
          "type": "string"
        },
        "Description": {
          "description": "The role description",
          "type": "string"
        },
        "LastChangedById": {
          "format": "uuid",
          "description": "The guid of the user who last modified the role",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IsDeleted": {
          "description": "Is the role deleted",
          "type": "boolean"
        }
      }
    },
    "ResponseMetadata+ApiAccessGroup": {
      "type": "object",
      "properties": {
        "NextCursor": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GetAlertRequest": {
      "description": "The alertGetAll request",
      "type": "object",
      "properties": {
        "Limit": {
          "format": "int32",
          "description": "The maximum number of results that should be returned. Default to 1000",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer"
        },
        "BusinessUnitID": {
          "description": "The business unit id to filter the response",
          "type": "string"
        },
        "Cursor": {
          "description": "The metadata nextCursor field should be passed to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "PaginatedResponse+ApiAlert": {
      "type": "object",
      "properties": {
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiAlert"
          },
          "readOnly": true
        },
        "Metadata": {
          "$ref": "#/definitions/ResponseMetadata+ApiAlert",
          "readOnly": true
        }
      }
    },
    "ApiAlert": {
      "description": "The alert",
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "The alert id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Email": {
          "description": "The Email to send the alert to",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "The phone number to send the alert to",
          "type": "string"
        },
        "FirstName": {
          "description": "The first name of the person receiving the alert",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the person receiving the alert",
          "type": "string"
        },
        "ProviderID": {
          "format": "uuid",
          "description": "The id of provider who will send the message",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BusinessUnitID": {
          "format": "uuid",
          "description": "The business unit that the alert belongs to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CarrierAddressOverride": {
          "description": "Carrier address override if needed (SMS)",
          "type": "string"
        },
        "NearMiss": {
          "$ref": "#/definitions/NearMissSettings",
          "description": "Near Miss settings"
        },
        "Incidents": {
          "$ref": "#/definitions/IncidentSettings",
          "description": "Incidents settings"
        },
        "Inspections": {
          "$ref": "#/definitions/InspectionSettings",
          "description": "Inspections settings"
        },
        "Observations": {
          "$ref": "#/definitions/ObservationSettings",
          "description": "Observations settings"
        },
        "Jobs": {
          "$ref": "#/definitions/JobsSettings",
          "description": "Jobs settings"
        }
      }
    },
    "ResponseMetadata+ApiAlert": {
      "type": "object",
      "properties": {
        "NextCursor": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NearMissSettings": {
      "description": "Near miss settings alert property",
      "type": "object",
      "properties": {
        "ReceiveAlert": {
          "description": "The alert should trigger in near misses (isReceiveNearMisses)",
          "type": "boolean"
        }
      }
    },
    "IncidentSettings": {
      "description": "Incident settings alert property",
      "type": "object",
      "properties": {
        "ReceiveAlert": {
          "description": "The alert should trigger in incidents (isReceiveIncidents)",
          "type": "boolean"
        },
        "managerCreated": {
          "description": "The alert will be sent when manager creates an incident (sendIncidentAlertForManager)",
          "type": "boolean"
        },
        "managerUpdated": {
          "description": "The alert will be sent when manager updates an incident (sendIncidentAlertForUpdates)",
          "type": "boolean"
        },
        "fieldCreated": {
          "description": "The alert should be sent when field app creates an incident (sendIncidentAlertForCreateField)",
          "type": "boolean"
        },
        "fieldUpdated": {
          "description": "The alert should be sent to when the field app updates an incident (sendIncidentAlertForUpdateField)",
          "type": "boolean"
        },
        "SendAllFormTypes": {
          "description": "The alert should trigger for incidents of all forms types (IsAllIncidentFormTypes)",
          "type": "boolean"
        },
        "FormTypes": {
          "description": "The list of all form types that should trigger the alert (if SendAllFormTypes is true will be empty)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InspectionSettings": {
      "description": "Inspection settings alert property",
      "type": "object",
      "properties": {
        "ReceiveAlert": {
          "description": "The alert should trigger in inspections (isReceiveInspections)",
          "type": "boolean"
        },
        "AllInspections": {
          "description": "The alert should trigger for all inspections types (isAllInspectionTypes)",
          "type": "boolean"
        },
        "InspectionsType": {
          "description": "The list of all inspections type that should trigger the alert (if AllInspections is true will be empty)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ObservationSettings": {
      "description": "Observation settings alert property",
      "type": "object",
      "properties": {
        "ReceiveAlert": {
          "description": "The alert should trigger observations",
          "type": "boolean"
        },
        "ObservationAlertFlag": {
          "description": "The alert should trigger based on observation flag (observationAlertFlag)",
          "enum": [
            "None",
            "RecieveAlert",
            "PositiveOnly",
            "NegativeOnly"
          ],
          "type": "string"
        },
        "SeverityThreshold": {
          "format": "int32",
          "description": "The severity of observation that should trigger the alert (severityThreshold)",
          "type": "integer"
        }
      }
    },
    "JobsSettings": {
      "description": "Jobs settings alert property",
      "type": "object",
      "properties": {
        "IsAllJobs": {
          "description": "The alert should trigger in all Jobs (IsAllJobs)",
          "type": "boolean"
        },
        "Jobs": {
          "description": "The list of all jobs that should trigger the alert (if isAllJobs is true will be empty)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApiIncidentDetailsV1": {
      "description": "Incident details",
      "required": [
        "ID",
        "Description",
        "Notes",
        "FieldNotes",
        "JobCode",
        "LocationDescription",
        "ReportedDateUtc",
        "RecorderCode",
        "PersonInChargeCode",
        "IncidentDateUtc"
      ],
      "type": "object",
      "properties": {
        "EmployeeInjuries": {
          "description": "Detailed list of all employee injuries in this incident",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiEmployeeInjury"
          }
        },
        "Attachments": {
          "description": "List of Incident attachments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiAttachment"
          }
        },
        "FieldAttachments": {
          "description": "List of Incident Field attachments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiAttachment"
          }
        },
        "MinersInvolved": {
          "description": "Miners involved during the investigation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiMiners"
          }
        },
        "Address": {
          "$ref": "#/definitions/ApiAddress",
          "description": "The incident location address"
        },
        "CreatedDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time the incident record was created. This value cannot be changed, any edits to this field will be ignored.",
          "type": "string"
        },
        "LastModifiedUtc": {
          "format": "date-time",
          "description": "The UTC date and time of the last modification to the incident. This value is generated automatically, any edits to this field will be ignored.",
          "type": "string"
        },
        "BusinessUnitDescription": {
          "description": "The description for the business unit associated with this incident. This value cannot be changed, edits to this value will trigger a 400 Bad Request response.",
          "type": "string"
        },
        "ReportingStatus": {
          "description": "Insurance claim reporting status for this incident",
          "enum": [
            "None",
            "InHouse",
            "ReportedToCarrier",
            "ReportedToThirdPartyCarrier"
          ],
          "type": "string"
        },
        "InsuranceCompanyName": {
          "description": "Insurance claim company name for this incident",
          "type": "string"
        },
        "InsuranceClaimTypes": {
          "description": "Insurance claims for this incident",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ClaimNumber": {
          "description": "Insurance claim number for this incident",
          "type": "string"
        },
        "Adjuster": {
          "description": "Adjuster for this incident",
          "type": "string"
        },
        "AdjusterEmail": {
          "description": "Adjuster email for this incident",
          "type": "string"
        },
        "AdjusterPhone": {
          "description": "Adjuster phone for this incident",
          "type": "string"
        },
        "AdjusterNotes": {
          "description": "Adjuster notes for this incident",
          "type": "string"
        },
        "DateInvestigationBegan": {
          "format": "date-time",
          "description": "Date the MSHA Investigation Began",
          "type": "string"
        },
        "ID": {
          "format": "uuid",
          "description": "The HCSS unique identifier for the incident.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CaseNumber": {
          "description": "The user-entered unique identifier for the incident. Must be unique within each company.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description of the incident",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "Notes": {
          "description": "Notes about this incident",
          "type": "string"
        },
        "FieldNotes": {
          "description": "Field Notes about this incident",
          "type": "string"
        },
        "JobCode": {
          "description": "The code for the job where the incident occurred",
          "type": "string"
        },
        "BusinessUnitCode": {
          "description": "The code for the business unit associated with this incident. This value cannot be changed, edits to this value will trigger a 400 Bad Request response.",
          "type": "string"
        },
        "LocationDescription": {
          "description": "A description of the location where the incident occurred",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "ReportedDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time when the incident was reported",
          "type": "string"
        },
        "RecorderCode": {
          "description": "The employee code of the person who recorded the incident",
          "type": "string"
        },
        "PersonInChargeCode": {
          "description": "The employee code of the employee in charge when the incident occurred",
          "type": "string"
        },
        "IncidentDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time when the incident occurred",
          "type": "string"
        },
        "Status": {
          "description": "Incident Status for this incident. \r\nOptions: 'Open', 'Received', or 'Completed'.",
          "type": "string"
        },
        "Latitude": {
          "format": "double",
          "description": "The incident location latitude",
          "maximum": 90,
          "minimum": -90,
          "type": "number"
        },
        "Longitude": {
          "format": "double",
          "description": "The incident location longitude",
          "maximum": 180,
          "minimum": -180,
          "type": "number"
        },
        "Weather": {
          "description": "Weather conditions at the time of the incident",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "PersonMostFamiliarCode": {
          "description": "The employee code for the person most familiar with the incident",
          "type": "string"
        },
        "RecordedEmail": {
          "description": "Email of the person who recorded the incident",
          "type": "string"
        },
        "RecordedPhoneNumber": {
          "description": "Phone Number of the person who recorded the incident",
          "type": "string"
        },
        "PersonInChargeEmail": {
          "description": "Email of the person in charge when the incident occurred",
          "type": "string"
        },
        "PersonInChargePhoneNumber": {
          "description": "Phone Number of the person in charge when the incident occurred",
          "type": "string"
        },
        "PersonMostFamiliarEmail": {
          "description": "Email of the person most familiar with the incident",
          "type": "string"
        },
        "PersonMostFamiliarPhoneNumber": {
          "description": "Phone Number of the person most familiar with the incident",
          "type": "string"
        },
        "EstimatedCost": {
          "format": "double",
          "description": "Estimated cost of this incident",
          "type": "number"
        },
        "ActualCost": {
          "format": "double",
          "description": "Actual cost of this incident",
          "type": "number"
        },
        "IsMSHAInvestigation": {
          "description": "Did the incident required a MSHA Investigation",
          "type": "boolean"
        },
        "Individuals": {
          "description": "Individuals list for MSHA Investigation. Separated by semi-colon (;)",
          "type": "string"
        },
        "SiteDescription": {
          "description": "Site description",
          "type": "string"
        },
        "AccidentInjuryExplanation": {
          "description": "Accident/Injury Explanation",
          "type": "string"
        },
        "StepsToPreventFutureOccurrences": {
          "description": "Steps to Prevent Future Occurrences",
          "type": "string"
        }
      }
    },
    "ApiEmployeeInjury": {
      "description": "Employee injury form.\r\nThis is based on the Employee Injury Form Revision 10 (06-09-2019)",
      "type": "object",
      "properties": {
        "EmployeeCode": {
          "description": "The employee code for the injured employee",
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/ApiAddress",
          "description": "Address for the injured employee"
        },
        "Phone": {
          "description": "Phone for the injured employee",
          "type": "string"
        },
        "Email": {
          "description": "Email for the injured employee",
          "type": "string"
        },
        "JobTitle": {
          "description": "Job Title for the injured employee",
          "type": "string"
        },
        "DateOfHire": {
          "format": "date-time",
          "description": "Date of hire for the injured employee",
          "type": "string"
        },
        "YearsWithCompanyString": {
          "description": "Years with the company for the injured employee",
          "type": "string"
        },
        "YearsInConstructionString": {
          "description": "Years in construction for the injured employee",
          "type": "string"
        },
        "DescriptionOfInjury": {
          "description": "Description of the injury",
          "type": "string"
        },
        "TimeStartedWork": {
          "format": "date-time",
          "description": "Time the employee started to work",
          "type": "string"
        },
        "ActivityAtTime": {
          "description": "Activity at the time of the injury",
          "type": "string"
        },
        "InjuryClassificationString": {
          "description": "Injury/Illness Classification",
          "type": "string"
        },
        "NatureOfInjuryCategoryString": {
          "description": "Nature of the injury category",
          "type": "string"
        },
        "NatureOfInjuryTypeString": {
          "description": "Nature of the injury type",
          "type": "string"
        },
        "IncidentCauseCategoryString": {
          "description": "incident cause of the injury category",
          "type": "string"
        },
        "IncidentCauseTypeString": {
          "description": "incident cause of the injury type",
          "type": "string"
        },
        "InjuredBodyPartCategoryString": {
          "description": "Injured body of the employee category",
          "type": "string"
        },
        "InjuredBodyPartTypeString": {
          "description": "Injured body of the employee type",
          "type": "string"
        },
        "InjuredSideString": {
          "description": "Injured Side",
          "type": "string"
        },
        "DrugAlcoholTest": {
          "description": "Did the treatment had a drug/alcohol test",
          "type": "boolean"
        },
        "DrugAlcoholTestFacility": {
          "description": "Facility the drug/alcohol test was made",
          "type": "string"
        },
        "FirstAidMedOnly": {
          "description": "Did it required First Aid/Med Only",
          "type": "boolean"
        },
        "FirstAidMedOnlyProvidedBy": {
          "description": "Who provided First Aid/Med Only",
          "type": "string"
        },
        "TreatedAwayFromWorkSite": {
          "description": "Did it required to be treated away from work site",
          "type": "boolean"
        },
        "TreatedAwayFromWorkSiteProvidedBy": {
          "description": "Who treated the injury away from work site",
          "type": "string"
        },
        "TreatedInAnEmergencyRoom": {
          "description": "If it was treated in an emergency room",
          "type": "boolean"
        },
        "HospitalizedOvernightInpatient": {
          "description": "If it was hospitalized overnight",
          "type": "boolean"
        },
        "MedicalFacility": {
          "description": "Medical Facility",
          "type": "string"
        },
        "PhysicianHealthCareProvider": {
          "description": "Physician Health Care Provider",
          "type": "string"
        },
        "IsRecordable": {
          "description": "Is the injury recordable for OSHA",
          "type": "boolean"
        },
        "ExcludeNameFromOSHAReport": {
          "description": "Exclude Name from OSHA report",
          "type": "boolean"
        },
        "SummarizedDescriptionForOSHA": {
          "description": "Description for OSHA reports",
          "type": "string"
        },
        "ClassificationString": {
          "description": "Classification of Injury",
          "type": "string"
        },
        "DateOfDeath": {
          "format": "date-time",
          "description": "Date the employee died",
          "type": "string"
        },
        "DaysAwayFromWork": {
          "$ref": "#/definitions/ApiDaysAway",
          "description": "Days the employee was away from work"
        },
        "DaysOnJobTransfer": {
          "$ref": "#/definitions/ApiDaysAway",
          "description": "Days the employee was on job transfer"
        },
        "Notes": {
          "description": "Employee Injury notes",
          "type": "string"
        },
        "Attachments": {
          "description": "List of employee injury Attachments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiAttachment"
          }
        },
        "RootCause": {
          "$ref": "#/definitions/ApiRootCause",
          "description": "Root Cause properties for the form"
        }
      }
    },
    "ApiAttachment": {
      "description": "Attachment information",
      "required": [
        "AttachmentUrl",
        "Name",
        "MimeType"
      ],
      "type": "object",
      "properties": {
        "AttachmentUrl": {
          "description": "Url of the attachment",
          "type": "string"
        },
        "Name": {
          "description": "Display name of the attachment",
          "type": "string"
        },
        "MimeType": {
          "description": "MimeType examples: application/pdf image/png image/jpeg",
          "type": "string"
        }
      }
    },
    "ApiMiners": {
      "description": "Incident miner",
      "type": "object",
      "properties": {
        "MinerCode": {
          "description": "Employee Code for the miner",
          "type": "string"
        },
        "JobTitle": {
          "description": "Miner's Job Title",
          "type": "string"
        },
        "ExperienceJobTitle": {
          "description": "Number of years/months with this job title",
          "type": "string"
        },
        "ExperienceJobTitleMeasure": {
          "description": "Measurement in years or months for the job title",
          "type": "string"
        },
        "ExperienceMine": {
          "description": "Number of years/months with this mine",
          "type": "string"
        },
        "ExperienceMineMeasure": {
          "description": "Measurement in years or months for this mine",
          "type": "string"
        },
        "ExperienceTotalMining": {
          "description": "Number of years/months in Total Mining Expirience",
          "type": "string"
        },
        "ExperienceTotalMiningMeasure": {
          "description": "Measurement in years or months in Total Mining Expirience",
          "type": "string"
        }
      }
    },
    "ApiAddress": {
      "type": "object",
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "ZipCode": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        }
      }
    },
    "ApiDaysAway": {
      "type": "object",
      "properties": {
        "FirstDay": {
          "format": "date-time",
          "type": "string"
        },
        "LastDay": {
          "format": "date-time",
          "type": "string"
        },
        "IncludeWeekends": {
          "type": "boolean"
        },
        "DaysAway": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ApiRootCause": {
      "description": "A POCO representing root cause sections of form\r\nThis is based on the all Forms Revision 10 (06-09-2019)",
      "type": "object",
      "properties": {
        "isRootCause": {
          "description": "Is this root cause form",
          "type": "boolean"
        },
        "ProbableRecurrenceString": {
          "description": "Probable Recurrence",
          "type": "string"
        },
        "PotentialExposureString": {
          "description": "Potential Exposure",
          "type": "string"
        },
        "LossSeverityPotentialString": {
          "description": "Loss Severity Potential",
          "type": "string"
        },
        "LossPotentialNotes": {
          "description": "Loss Potential Notes",
          "type": "string"
        },
        "EmployeeReceivedSafetyTrainingString": {
          "description": "Employee received safety training for the activity before the accident?",
          "type": "string"
        },
        "EmployeeNeedsSafetyTrainingString": {
          "description": "Employee needs safety training/retraining for the activity?",
          "type": "string"
        },
        "OtherEmployeeNeedSafetyTrainingString": {
          "description": "Other employees need safety training/retraining for the activity?",
          "type": "string"
        },
        "PersonResponsibleCode": {
          "description": "Employee Code for Person Responsible",
          "type": "string"
        },
        "TrainingNotes": {
          "description": "Training Notes",
          "type": "string"
        },
        "UnsafeActsDirectCause": {
          "description": "Unsafe Acts Direct Cause",
          "type": "string"
        },
        "UnsafeActsIndirectCause": {
          "description": "Unsafe Acts Indirect Cause",
          "type": "string"
        },
        "UnsafeActsManagementControl": {
          "description": "Unsafe Acts Managment Control",
          "type": "string"
        },
        "UnsafeActsNotes": {
          "description": "Unsafe Acts Notes",
          "type": "string"
        },
        "UnsafeConditionsDirectCause": {
          "description": "Unsafe Conditions Direct Cause",
          "type": "string"
        },
        "UnsafeConditionsIndirectCause": {
          "description": "Unsafe Conditions Indirect Cause",
          "type": "string"
        },
        "UnsafeConditionsManagementControl": {
          "description": "Unsafe Conditions Managment Control",
          "type": "string"
        },
        "UnsafeConditionsNotes": {
          "description": "Unsafe Conditions Notes",
          "type": "string"
        },
        "FuturePreventionString": {
          "description": "Future prevention measures",
          "type": "string"
        },
        "PreventiveMeasuresNotes": {
          "description": "Preventive Measures Notes",
          "type": "string"
        },
        "AssigneeCode": {
          "description": "Employee Code for Preventive Accountability Assignee",
          "type": "string"
        },
        "TargetCompletionDate": {
          "format": "date-time",
          "description": "Target Completion Date",
          "type": "string"
        },
        "CompletionDate": {
          "format": "date-time",
          "description": "Completion Date",
          "type": "string"
        },
        "PreventiveAccountabilityNotes": {
          "description": "Preventive Accountability Notes",
          "type": "string"
        }
      }
    },
    "ApiIncidentUpdate": {
      "description": "Incident details",
      "required": [
        "ID",
        "Description",
        "Notes",
        "FieldNotes",
        "JobCode",
        "LocationDescription",
        "ReportedDateUtc",
        "RecorderCode",
        "PersonInChargeCode",
        "IncidentDateUtc"
      ],
      "type": "object",
      "properties": {
        "Address": {
          "$ref": "#/definitions/ApiAddress",
          "description": "The incident location address"
        },
        "ID": {
          "format": "uuid",
          "description": "The HCSS unique identifier for the incident.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CaseNumber": {
          "description": "The user-entered unique identifier for the incident. Must be unique within each company.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description of the incident",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "Notes": {
          "description": "Notes about this incident",
          "type": "string"
        },
        "FieldNotes": {
          "description": "Field Notes about this incident",
          "type": "string"
        },
        "JobCode": {
          "description": "The code for the job where the incident occurred",
          "type": "string"
        },
        "BusinessUnitCode": {
          "description": "The code for the business unit associated with this incident. This value cannot be changed, edits to this value will trigger a 400 Bad Request response.",
          "type": "string"
        },
        "LocationDescription": {
          "description": "A description of the location where the incident occurred",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "ReportedDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time when the incident was reported",
          "type": "string"
        },
        "RecorderCode": {
          "description": "The employee code of the person who recorded the incident",
          "type": "string"
        },
        "PersonInChargeCode": {
          "description": "The employee code of the employee in charge when the incident occurred",
          "type": "string"
        },
        "IncidentDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time when the incident occurred",
          "type": "string"
        },
        "Status": {
          "description": "Incident Status for this incident. \r\nOptions: 'Open', 'Received', or 'Completed'.",
          "type": "string"
        },
        "Latitude": {
          "format": "double",
          "description": "The incident location latitude",
          "maximum": 90,
          "minimum": -90,
          "type": "number"
        },
        "Longitude": {
          "format": "double",
          "description": "The incident location longitude",
          "maximum": 180,
          "minimum": -180,
          "type": "number"
        },
        "Weather": {
          "description": "Weather conditions at the time of the incident",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "PersonMostFamiliarCode": {
          "description": "The employee code for the person most familiar with the incident",
          "type": "string"
        },
        "RecordedEmail": {
          "description": "Email of the person who recorded the incident",
          "type": "string"
        },
        "RecordedPhoneNumber": {
          "description": "Phone Number of the person who recorded the incident",
          "type": "string"
        },
        "PersonInChargeEmail": {
          "description": "Email of the person in charge when the incident occurred",
          "type": "string"
        },
        "PersonInChargePhoneNumber": {
          "description": "Phone Number of the person in charge when the incident occurred",
          "type": "string"
        },
        "PersonMostFamiliarEmail": {
          "description": "Email of the person most familiar with the incident",
          "type": "string"
        },
        "PersonMostFamiliarPhoneNumber": {
          "description": "Phone Number of the person most familiar with the incident",
          "type": "string"
        },
        "EstimatedCost": {
          "format": "double",
          "description": "Estimated cost of this incident",
          "type": "number"
        },
        "ActualCost": {
          "format": "double",
          "description": "Actual cost of this incident",
          "type": "number"
        },
        "IsMSHAInvestigation": {
          "description": "Did the incident required a MSHA Investigation",
          "type": "boolean"
        },
        "Individuals": {
          "description": "Individuals list for MSHA Investigation. Separated by semi-colon (;)",
          "type": "string"
        },
        "SiteDescription": {
          "description": "Site description",
          "type": "string"
        },
        "AccidentInjuryExplanation": {
          "description": "Accident/Injury Explanation",
          "type": "string"
        },
        "StepsToPreventFutureOccurrences": {
          "description": "Steps to Prevent Future Occurrences",
          "type": "string"
        }
      }
    },
    "ApiIncident": {
      "description": "Incident details",
      "required": [
        "ID",
        "Description",
        "Notes",
        "FieldNotes",
        "JobCode",
        "LocationDescription",
        "ReportedDateUtc",
        "RecorderCode",
        "PersonInChargeCode",
        "IncidentDateUtc"
      ],
      "type": "object",
      "properties": {
        "CreatedDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time the incident record was created. This value cannot be changed, any edits to this field will be ignored.",
          "type": "string"
        },
        "LastModifiedUtc": {
          "format": "date-time",
          "description": "The UTC date and time of the last modification to the incident. This value is generated automatically, any edits to this field will be ignored.",
          "type": "string"
        },
        "BusinessUnitDescription": {
          "description": "The description for the business unit associated with this incident. This value cannot be changed, edits to this value will trigger a 400 Bad Request response.",
          "type": "string"
        },
        "ReportingStatus": {
          "description": "Insurance claim reporting status for this incident",
          "enum": [
            "None",
            "InHouse",
            "ReportedToCarrier",
            "ReportedToThirdPartyCarrier"
          ],
          "type": "string"
        },
        "InsuranceCompanyName": {
          "description": "Insurance claim company name for this incident",
          "type": "string"
        },
        "InsuranceClaimTypes": {
          "description": "Insurance claims for this incident",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ClaimNumber": {
          "description": "Insurance claim number for this incident",
          "type": "string"
        },
        "Adjuster": {
          "description": "Adjuster for this incident",
          "type": "string"
        },
        "AdjusterEmail": {
          "description": "Adjuster email for this incident",
          "type": "string"
        },
        "AdjusterPhone": {
          "description": "Adjuster phone for this incident",
          "type": "string"
        },
        "AdjusterNotes": {
          "description": "Adjuster notes for this incident",
          "type": "string"
        },
        "DateInvestigationBegan": {
          "format": "date-time",
          "description": "Date the MSHA Investigation Began",
          "type": "string"
        },
        "ID": {
          "format": "uuid",
          "description": "The HCSS unique identifier for the incident.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CaseNumber": {
          "description": "The user-entered unique identifier for the incident. Must be unique within each company.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description of the incident",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "Notes": {
          "description": "Notes about this incident",
          "type": "string"
        },
        "FieldNotes": {
          "description": "Field Notes about this incident",
          "type": "string"
        },
        "JobCode": {
          "description": "The code for the job where the incident occurred",
          "type": "string"
        },
        "BusinessUnitCode": {
          "description": "The code for the business unit associated with this incident. This value cannot be changed, edits to this value will trigger a 400 Bad Request response.",
          "type": "string"
        },
        "LocationDescription": {
          "description": "A description of the location where the incident occurred",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "ReportedDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time when the incident was reported",
          "type": "string"
        },
        "RecorderCode": {
          "description": "The employee code of the person who recorded the incident",
          "type": "string"
        },
        "PersonInChargeCode": {
          "description": "The employee code of the employee in charge when the incident occurred",
          "type": "string"
        },
        "IncidentDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time when the incident occurred",
          "type": "string"
        },
        "Status": {
          "description": "Incident Status for this incident. \r\nOptions: 'Open', 'Received', or 'Completed'.",
          "type": "string"
        },
        "Latitude": {
          "format": "double",
          "description": "The incident location latitude",
          "maximum": 90,
          "minimum": -90,
          "type": "number"
        },
        "Longitude": {
          "format": "double",
          "description": "The incident location longitude",
          "maximum": 180,
          "minimum": -180,
          "type": "number"
        },
        "Weather": {
          "description": "Weather conditions at the time of the incident",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "PersonMostFamiliarCode": {
          "description": "The employee code for the person most familiar with the incident",
          "type": "string"
        },
        "RecordedEmail": {
          "description": "Email of the person who recorded the incident",
          "type": "string"
        },
        "RecordedPhoneNumber": {
          "description": "Phone Number of the person who recorded the incident",
          "type": "string"
        },
        "PersonInChargeEmail": {
          "description": "Email of the person in charge when the incident occurred",
          "type": "string"
        },
        "PersonInChargePhoneNumber": {
          "description": "Phone Number of the person in charge when the incident occurred",
          "type": "string"
        },
        "PersonMostFamiliarEmail": {
          "description": "Email of the person most familiar with the incident",
          "type": "string"
        },
        "PersonMostFamiliarPhoneNumber": {
          "description": "Phone Number of the person most familiar with the incident",
          "type": "string"
        },
        "EstimatedCost": {
          "format": "double",
          "description": "Estimated cost of this incident",
          "type": "number"
        },
        "ActualCost": {
          "format": "double",
          "description": "Actual cost of this incident",
          "type": "number"
        },
        "IsMSHAInvestigation": {
          "description": "Did the incident required a MSHA Investigation",
          "type": "boolean"
        },
        "Individuals": {
          "description": "Individuals list for MSHA Investigation. Separated by semi-colon (;)",
          "type": "string"
        },
        "SiteDescription": {
          "description": "Site description",
          "type": "string"
        },
        "AccidentInjuryExplanation": {
          "description": "Accident/Injury Explanation",
          "type": "string"
        },
        "StepsToPreventFutureOccurrences": {
          "description": "Steps to Prevent Future Occurrences",
          "type": "string"
        }
      }
    },
    "ApiIncidentDetailsV2": {
      "description": "Incident details",
      "required": [
        "ID",
        "Description",
        "Notes",
        "FieldNotes",
        "JobCode",
        "LocationDescription",
        "ReportedDateUtc",
        "RecorderCode",
        "PersonInChargeCode",
        "IncidentDateUtc"
      ],
      "type": "object",
      "properties": {
        "IncidentForms": {
          "description": "Detailed list of all forms on this incident",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiIncidentForm"
          }
        },
        "Attachments": {
          "description": "List of Incident attachments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiAttachment"
          }
        },
        "FieldAttachments": {
          "description": "List of Incident Field attachments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiAttachment"
          }
        },
        "MinersInvolved": {
          "description": "Miners involved during the investigation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiMiners"
          }
        },
        "Address": {
          "$ref": "#/definitions/ApiAddress",
          "description": "The incident location address"
        },
        "CreatedDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time the incident record was created. This value cannot be changed, any edits to this field will be ignored.",
          "type": "string"
        },
        "LastModifiedUtc": {
          "format": "date-time",
          "description": "The UTC date and time of the last modification to the incident. This value is generated automatically, any edits to this field will be ignored.",
          "type": "string"
        },
        "BusinessUnitDescription": {
          "description": "The description for the business unit associated with this incident. This value cannot be changed, edits to this value will trigger a 400 Bad Request response.",
          "type": "string"
        },
        "ReportingStatus": {
          "description": "Insurance claim reporting status for this incident",
          "enum": [
            "None",
            "InHouse",
            "ReportedToCarrier",
            "ReportedToThirdPartyCarrier"
          ],
          "type": "string"
        },
        "InsuranceCompanyName": {
          "description": "Insurance claim company name for this incident",
          "type": "string"
        },
        "InsuranceClaimTypes": {
          "description": "Insurance claims for this incident",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ClaimNumber": {
          "description": "Insurance claim number for this incident",
          "type": "string"
        },
        "Adjuster": {
          "description": "Adjuster for this incident",
          "type": "string"
        },
        "AdjusterEmail": {
          "description": "Adjuster email for this incident",
          "type": "string"
        },
        "AdjusterPhone": {
          "description": "Adjuster phone for this incident",
          "type": "string"
        },
        "AdjusterNotes": {
          "description": "Adjuster notes for this incident",
          "type": "string"
        },
        "DateInvestigationBegan": {
          "format": "date-time",
          "description": "Date the MSHA Investigation Began",
          "type": "string"
        },
        "ID": {
          "format": "uuid",
          "description": "The HCSS unique identifier for the incident.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CaseNumber": {
          "description": "The user-entered unique identifier for the incident. Must be unique within each company.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description of the incident",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "Notes": {
          "description": "Notes about this incident",
          "type": "string"
        },
        "FieldNotes": {
          "description": "Field Notes about this incident",
          "type": "string"
        },
        "JobCode": {
          "description": "The code for the job where the incident occurred",
          "type": "string"
        },
        "BusinessUnitCode": {
          "description": "The code for the business unit associated with this incident. This value cannot be changed, edits to this value will trigger a 400 Bad Request response.",
          "type": "string"
        },
        "LocationDescription": {
          "description": "A description of the location where the incident occurred",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "ReportedDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time when the incident was reported",
          "type": "string"
        },
        "RecorderCode": {
          "description": "The employee code of the person who recorded the incident",
          "type": "string"
        },
        "PersonInChargeCode": {
          "description": "The employee code of the employee in charge when the incident occurred",
          "type": "string"
        },
        "IncidentDateUtc": {
          "format": "date-time",
          "description": "The UTC date and time when the incident occurred",
          "type": "string"
        },
        "Status": {
          "description": "Incident Status for this incident. \r\nOptions: 'Open', 'Received', or 'Completed'.",
          "type": "string"
        },
        "Latitude": {
          "format": "double",
          "description": "The incident location latitude",
          "maximum": 90,
          "minimum": -90,
          "type": "number"
        },
        "Longitude": {
          "format": "double",
          "description": "The incident location longitude",
          "maximum": 180,
          "minimum": -180,
          "type": "number"
        },
        "Weather": {
          "description": "Weather conditions at the time of the incident",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "PersonMostFamiliarCode": {
          "description": "The employee code for the person most familiar with the incident",
          "type": "string"
        },
        "RecordedEmail": {
          "description": "Email of the person who recorded the incident",
          "type": "string"
        },
        "RecordedPhoneNumber": {
          "description": "Phone Number of the person who recorded the incident",
          "type": "string"
        },
        "PersonInChargeEmail": {
          "description": "Email of the person in charge when the incident occurred",
          "type": "string"
        },
        "PersonInChargePhoneNumber": {
          "description": "Phone Number of the person in charge when the incident occurred",
          "type": "string"
        },
        "PersonMostFamiliarEmail": {
          "description": "Email of the person most familiar with the incident",
          "type": "string"
        },
        "PersonMostFamiliarPhoneNumber": {
          "description": "Phone Number of the person most familiar with the incident",
          "type": "string"
        },
        "EstimatedCost": {
          "format": "double",
          "description": "Estimated cost of this incident",
          "type": "number"
        },
        "ActualCost": {
          "format": "double",
          "description": "Actual cost of this incident",
          "type": "number"
        },
        "IsMSHAInvestigation": {
          "description": "Did the incident required a MSHA Investigation",
          "type": "boolean"
        },
        "Individuals": {
          "description": "Individuals list for MSHA Investigation. Separated by semi-colon (;)",
          "type": "string"
        },
        "SiteDescription": {
          "description": "Site description",
          "type": "string"
        },
        "AccidentInjuryExplanation": {
          "description": "Accident/Injury Explanation",
          "type": "string"
        },
        "StepsToPreventFutureOccurrences": {
          "description": "Steps to Prevent Future Occurrences",
          "type": "string"
        }
      }
    },
    "ApiIncidentForm": {
      "description": "Incident form information",
      "type": "object",
      "properties": {
        "FormName": {
          "description": "Incident form name",
          "type": "string"
        },
        "Sections": {
          "description": "Sections on the incident form",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiIncidentFormSection"
          }
        }
      }
    },
    "ApiIncidentFormSection": {
      "description": "Incident form section information",
      "type": "object",
      "properties": {
        "Section": {
          "description": "Section name",
          "type": "string"
        },
        "Questions": {
          "description": "Questions and answers on the incident form",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiIncidentFormQuestion"
          }
        }
      }
    },
    "ApiIncidentFormQuestion": {
      "description": "Information on the form question and answer",
      "type": "object",
      "properties": {
        "Question": {
          "description": "Incident form question",
          "type": "string"
        },
        "Answer": {
          "description": "Incident form answer",
          "type": "string"
        },
        "Attachments": {
          "description": "If answer has attachments, list of attachments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiAttachment"
          }
        },
        "Passengers": {
          "description": "If answer has passengers, list of passengers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiPassenger"
          }
        },
        "Address": {
          "$ref": "#/definitions/ApiAddress",
          "description": "If answer is an address, the address"
        },
        "OtherVehicles": {
          "description": "If answer has other vehicles, list of other vehicles",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiOtherVehicle"
          }
        },
        "OtherPassengers": {
          "description": "If answer has other passengers, list of other passengers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiOtherPassenger"
          }
        },
        "Items": {
          "description": "If answer has items, list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiItem"
          }
        },
        "DaysInterval": {
          "$ref": "#/definitions/ApiDaysInterval",
          "description": "If answer is interval of days, contains information on days away"
        }
      }
    },
    "ApiPassenger": {
      "description": "Passenger information",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of the passenger",
          "type": "string"
        },
        "Address": {
          "description": "Address of the passenger",
          "type": "string"
        },
        "Address2": {
          "description": "Address 2 of the passenger",
          "type": "string"
        },
        "City": {
          "description": "City of the passenger",
          "type": "string"
        },
        "State": {
          "description": "State of the passenger",
          "type": "string"
        },
        "ZipCode": {
          "description": "Zip code of the passenger",
          "type": "string"
        },
        "Country": {
          "description": "Country of the passenger",
          "type": "string"
        },
        "MobilePhone": {
          "description": "Mobile phone of the passenger",
          "type": "string"
        },
        "HomePhone": {
          "description": "Home phone of the passenger",
          "type": "string"
        }
      }
    },
    "ApiOtherVehicle": {
      "description": "Other vehicle information",
      "type": "object",
      "properties": {
        "DriverName": {
          "description": "Name of the driver",
          "type": "string"
        },
        "Make": {
          "description": "The make of the other vehicle",
          "type": "string"
        },
        "Model": {
          "description": "The model of the other vehicle",
          "type": "string"
        },
        "Year": {
          "description": "The year of the other vehicle",
          "type": "string"
        },
        "LicensePlate": {
          "description": "The license plate of the other vehicle",
          "type": "string"
        },
        "VinNumber": {
          "description": "The VIN number of the other vehicle",
          "type": "string"
        },
        "State": {
          "description": "The state/territory of the other vehicle",
          "type": "string"
        },
        "Carrier": {
          "description": "The insurance carrier for the other vehicle",
          "type": "string"
        },
        "PolicyNumber": {
          "description": "The insurance policy number for the other vehicle",
          "type": "string"
        }
      }
    },
    "ApiOtherPassenger": {
      "description": "Other passenger information",
      "type": "object",
      "properties": {
        "Vehicle": {
          "description": "The other vehicle",
          "type": "string"
        },
        "Name": {
          "description": "Name of the other vehicle passenger",
          "type": "string"
        },
        "MobilePhone": {
          "description": "Mobile phone of the other vehicle passenger",
          "type": "string"
        },
        "HomePhone": {
          "description": "Home phone of the other vehicle passenger",
          "type": "string"
        },
        "Address1": {
          "description": "Address line 1 of the other vehicle passenger",
          "type": "string"
        },
        "Address2": {
          "description": "Address line 2 of the other vehicle passenger",
          "type": "string"
        },
        "City": {
          "description": "City of the other vehicle passenger",
          "type": "string"
        },
        "State": {
          "description": "State of the other vehicle passenger",
          "type": "string"
        },
        "Zip": {
          "description": "Zip of the other vehicle passenger",
          "type": "string"
        },
        "Country": {
          "description": "Country of the other vehicle passenger",
          "type": "string"
        }
      }
    },
    "ApiItem": {
      "description": "Theft report item",
      "type": "object",
      "properties": {
        "ItemDescription": {
          "description": "Description of the reported item",
          "type": "string"
        },
        "EstimatedValue": {
          "description": "Estimated value of the reported item",
          "type": "string"
        }
      }
    },
    "ApiDaysInterval": {
      "description": "Days interval information",
      "type": "object",
      "properties": {
        "FirstDay": {
          "description": "First day away",
          "type": "string"
        },
        "LastDay": {
          "description": "Last day away",
          "type": "string"
        },
        "DaysAway": {
          "format": "int32",
          "description": "Total days away",
          "type": "integer"
        },
        "IncludeWeekends": {
          "description": "If weekends are included in calculating total days away",
          "type": "boolean"
        }
      }
    },
    "GetMeetingsResponse": {
      "type": "object",
      "properties": {
        "Meetings": {
          "description": "List of meetings matching the requested parameters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Meeting"
          }
        }
      }
    },
    "Meeting": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Unique identifier for this meeting",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "MeetingDate": {
          "format": "date-time",
          "description": "The date this meeting was held",
          "type": "string"
        },
        "JobId": {
          "format": "uuid",
          "description": "Job ID for this meeting",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "JobCode": {
          "description": "Job code for this meeting",
          "type": "string"
        },
        "RecorderId": {
          "format": "uuid",
          "description": "Recorder's employee ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RecorderCode": {
          "description": "Recorder's employee code",
          "type": "string"
        },
        "DurationMinutes": {
          "format": "int32",
          "description": "Meeting duration, in minutes",
          "type": "integer"
        },
        "Type": {
          "description": "Meeting type",
          "type": "string"
        },
        "Notes": {
          "description": "Additional notes",
          "type": "string"
        },
        "Topics": {
          "description": "List of meeting topics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Topic"
          }
        },
        "Attachments": {
          "description": "List of meeting attachments",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Employees": {
          "description": "List of employees attending this meeting",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Employee"
          }
        },
        "Visitors": {
          "description": "List of non-employee visitors attending this meeting",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Visitor"
          }
        }
      }
    },
    "Topic": {
      "type": "object",
      "properties": {
        "TopicName": {
          "description": "Topic name",
          "type": "string"
        },
        "Subtopics": {
          "description": "List of subtopics",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Employee": {
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "Employee's first name",
          "type": "string"
        },
        "LastName": {
          "description": "Employee's last name",
          "type": "string"
        },
        "EmployeeCode": {
          "description": "Employee code",
          "type": "string"
        },
        "OnSite": {
          "description": "Was this attendee on-site?",
          "type": "boolean"
        },
        "Attended": {
          "description": "Did this person attend?",
          "type": "boolean"
        }
      }
    },
    "Visitor": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of visitor",
          "type": "string"
        },
        "Note": {
          "description": "Additional notes regarding this visitor",
          "type": "string"
        },
        "OnSite": {
          "description": "Was this attendee on-site?",
          "type": "boolean"
        },
        "Attended": {
          "description": "Did this person attend?",
          "type": "boolean"
        }
      }
    },
    "SearchUserAccessGroupsRequest": {
      "description": "The request body for the endpoint that searches for user access groups",
      "type": "object",
      "properties": {
        "userIds": {
          "description": "If provided, filter user access groups belong to these user ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "limit": {
          "format": "int32",
          "description": "The maximum number of results that should be returned. Default to 1000. Cannot be more than 1000.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer"
        },
        "cursor": {
          "description": "When there are additional results, the metadata nextCursor field should be passed to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "PaginatedResponse+ApiUserAccessGroup": {
      "type": "object",
      "properties": {
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiUserAccessGroup"
          },
          "readOnly": true
        },
        "Metadata": {
          "$ref": "#/definitions/ResponseMetadata+ApiUserAccessGroup",
          "readOnly": true
        }
      }
    },
    "ApiUserAccessGroup": {
      "description": "An object with pairs of Users and Access Groups",
      "type": "object",
      "properties": {
        "UserId": {
          "format": "uuid",
          "description": "The user ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AccessGroupId": {
          "format": "uuid",
          "description": "The access group ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ResponseMetadata+ApiUserAccessGroup": {
      "type": "object",
      "properties": {
        "NextCursor": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdateUserAccessGroupRequest": {
      "description": "The request body for the endpoint that updates the user access groups",
      "type": "object",
      "properties": {
        "userId": {
          "format": "uuid",
          "description": "The user id that belongs to this access group",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "accessGroupId": {
          "format": "uuid",
          "description": "The access group id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "UpdateUserAccessGroupsResponse": {
      "description": "The response body of the endpoint that updates user access groups",
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "The id of the user - access group relation",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "UserId": {
          "format": "uuid",
          "description": "The user id belongs to this access group",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AccessGroupId": {
          "format": "uuid",
          "description": "The access group id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Success": {
          "description": "Whether or not the update was successful",
          "type": "boolean"
        },
        "Message": {
          "description": "A message status of the update",
          "type": "string"
        }
      }
    },
    "ApiUser": {
      "description": "DTO for Customer API User data (same as HJ API)",
      "type": "object",
      "properties": {
        "ID": {
          "format": "uuid",
          "description": "User ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "UserName": {
          "description": "User Name",
          "type": "string"
        },
        "FirstName": {
          "description": "User First Name",
          "type": "string"
        },
        "LastName": {
          "description": "User Last Name",
          "type": "string"
        },
        "Email": {
          "description": "User Email",
          "type": "string"
        },
        "IsDeleted": {
          "description": "User IsDeleted",
          "type": "boolean"
        },
        "DeletedBy": {
          "format": "uuid",
          "description": "User Deleted By",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DeletedDate": {
          "format": "date-time",
          "description": "User Deleted Date",
          "type": "string"
        },
        "AllowSync": {
          "description": "User Allow Sync",
          "type": "boolean"
        },
        "SyncTimestamp": {
          "format": "date-time",
          "description": "User SyncTimestamp",
          "type": "string"
        },
        "Employee": {
          "$ref": "#/definitions/ApiUserEmployee",
          "description": "Employee joined from EmployeeID (if present)"
        }
      }
    },
    "ApiUserEmployee": {
      "description": "DTO for Customer API Employee data",
      "type": "object",
      "properties": {
        "ID": {
          "format": "uuid",
          "description": "Employee ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Code": {
          "description": "Employee Code",
          "type": "string"
        },
        "FirstName": {
          "description": "Employee First Name",
          "type": "string"
        },
        "LastName": {
          "description": "Employee Last Name",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "oauth2",
      "description": "OAuth2 Client Credentials Flow",
      "flow": "application",
      "tokenUrl": "https://api.hcssapps.com/identity/connect/token",
      "scopes": {
        "safetyapi:read": "safetyapi:read",
        "safetyapi:write": "safetyapi:write",
        "safetyapi:permissions:read": "safetyapi:permissions:read",
        "safetyapi:permissions:write": "safetyapi:permissions:write",
        "incidents:read": "incidents:read",
        "incidents:write": "incidents:write",
        "meetings:read": "meetings:read"
      }
    },
    "authcode": {
      "type": "oauth2",
      "description": "OAuth2 Authorization Code",
      "flow": "accessCode",
      "tokenUrl": "https://api.hcssapps.com/identity/connect/token",
      "authorizationUrl": "https://api.hcssapps.com/identity/connect/authorize",
      "scopes": {
        "safetyapi:read": "safetyapi:read",
        "safetyapi:write": "safetyapi:write",
        "safetyapi:permissions:read": "safetyapi:permissions:read",
        "safetyapi:permissions:write": "safetyapi:permissions:write",
        "incidents:read": "incidents:read",
        "incidents:write": "incidents:write",
        "meetings:read": "meetings:read"
      }
    }
  }
}