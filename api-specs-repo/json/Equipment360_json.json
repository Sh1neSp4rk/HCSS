{
  "openapi": "3.0.1",
  "info": {
    "title": "Equipment360 API",
    "version": "v1",
    "description": "API for interacting with Equipment360. Operations require the 'e360:read' or 'e360:write' scope.",
    "termsOfService": "https://support.hcss.com.",
    "contact": {
      "name": "Heavy Construction Systems Specialists, Inc. (HCSS)",
      "url": "https://support.hcss.com/",
      "email": "support@hcss.com"
    },
    "license": {
      "name": "EULA",
      "url": "https://support.hcss.com."
    }
  },
  "servers": [
    {
      "url": "https://api.hcssapps.com/e360"
    }
  ],
  "security": [
    {
      "bearer": [
        "e360:read",
        "e360:write"
      ]
    }
  ],
  "paths": {
    "/api/v1/businessUnits": {
      "get": {
        "tags": [
          "BusinessUnit"
        ],
        "summary": "Returns a list of all business units.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiBusinessUnitRead"
                  }
                },
                "example": [
                  {
                    "id": "b31f57c2-9861-4acf-816e-7faab246cfd5",
                    "code": "Houston Central",
                    "description": "There's no place like home."
                  },
                  {
                    "id": "5b36ddb7-e570-45eb-aad4-aa4ad21ddbc4",
                    "code": "Pasadena Shop",
                    "description": "Repairs, rentals, and sublets."
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/costs/fuel": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Get total fuel cost for all jobs.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Optional. If specified, totals will reflect all costs submitted after startDate, inclusive.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, totals will reflect all costs submitted after startDate, inclusive.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Optional. If specified, totals will reflect all costs submitted prior to endDate, inclusive.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, totals will reflect all costs submitted prior to endDate, inclusive.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "jobCode",
            "in": "query",
            "description": "Optional. If specified, totals will reflect all costs submitted filtered by job code.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, totals will reflect all costs submitted filtered by job code.",
              "nullable": true
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Optional. If specified, totals will reflect all costs submitted filtered by business unit. The business unit guid.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, totals will reflect all costs submitted filtered by business unit. The business unit guid.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFuelCostRead"
                  }
                },
                "example": [
                  {
                    "jobId": "48f8ba5d-a39b-4188-9cac-500ca34a56e4",
                    "jobCode": "Pasadena Underpass",
                    "totalFuelCost": 8221.25
                  },
                  {
                    "jobId": "eacbaf91-7a2f-49b0-8643-c2f5c3ad7e2b",
                    "jobCode": "Garden Road Expansion - Phase A",
                    "totalFuelCost": 2193.73
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFuelCostRead"
                  }
                },
                "example": [
                  {
                    "jobId": "48f8ba5d-a39b-4188-9cac-500ca34a56e4",
                    "jobCode": "Pasadena Underpass",
                    "totalFuelCost": 8221.25
                  },
                  {
                    "jobId": "eacbaf91-7a2f-49b0-8643-c2f5c3ad7e2b",
                    "jobCode": "Garden Road Expansion - Phase A",
                    "totalFuelCost": 2193.73
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFuelCostRead"
                  }
                },
                "example": [
                  {
                    "jobId": "48f8ba5d-a39b-4188-9cac-500ca34a56e4",
                    "jobCode": "Pasadena Underpass",
                    "totalFuelCost": 8221.25
                  },
                  {
                    "jobId": "eacbaf91-7a2f-49b0-8643-c2f5c3ad7e2b",
                    "jobCode": "Garden Road Expansion - Phase A",
                    "totalFuelCost": 2193.73
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/costs/workOrders": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Gets work order costs for all jobs.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Required. The business unit guid.",
            "schema": {
              "type": "string",
              "description": "Required. The business unit guid.",
              "format": "uuid"
            }
          },
          {
            "name": "jobCode",
            "in": "query",
            "description": "Optional. If specified, totals will reflect all work order costs associated with the specified job code.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, totals will reflect all work order costs associated with the specified job code.",
              "nullable": true
            }
          },
          {
            "name": "equipmentId",
            "in": "query",
            "description": "Optional. If specified, totals will reflect all work order costs associated with the specified equipment id.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, totals will reflect all work order costs associated with the specified equipment id.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Optional. If specified, totals will reflect all work order costs where work orders are tagged with the specified tag.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, totals will reflect all work order costs where work orders are tagged with the specified tag.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderCostRead"
                },
                "example": {
                  "jobCode": "West Loop - Phase A",
                  "laborCost": 12352,
                  "estimatedLaborCost": 12352,
                  "partCost": 6789.63,
                  "estimatedPartCost": 6789.63,
                  "otherCost": 575,
                  "estimatedOtherCost": 575,
                  "totalCost": 19716.63,
                  "estimatedTotalCost": 19716.63
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderCostRead"
                },
                "example": {
                  "jobCode": "West Loop - Phase A",
                  "laborCost": 12352,
                  "estimatedLaborCost": 12352,
                  "partCost": 6789.63,
                  "estimatedPartCost": 6789.63,
                  "otherCost": 575,
                  "estimatedOtherCost": 575,
                  "totalCost": 19716.63,
                  "estimatedTotalCost": 19716.63
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderCostRead"
                },
                "example": {
                  "jobCode": "West Loop - Phase A",
                  "laborCost": 12352,
                  "estimatedLaborCost": 12352,
                  "partCost": 6789.63,
                  "estimatedPartCost": 6789.63,
                  "otherCost": 575,
                  "estimatedOtherCost": 575,
                  "totalCost": 19716.63,
                  "estimatedTotalCost": 19716.63
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/costs/workOrdersExtended": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Gets work order costs with extended details.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Required. The business unit guid.",
            "schema": {
              "type": "string",
              "description": "Required. The business unit guid.",
              "format": "uuid"
            }
          },
          {
            "name": "jobCode",
            "in": "query",
            "description": "Optional. If specified, totals will reflect all work order costs associated with the specified job code.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, totals will reflect all work order costs associated with the specified job code.",
              "nullable": true
            }
          },
          {
            "name": "equipmentId",
            "in": "query",
            "description": "Optional. If specified, totals will reflect all work order costs associated with the specified equipment id.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, totals will reflect all work order costs associated with the specified equipment id.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Optional. If specified, totals will reflect all work order costs where work orders are tagged with the specified tag.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, totals will reflect all work order costs where work orders are tagged with the specified tag.",
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The total number of records to return. Default: 100. Limit: 1000.",
            "schema": {
              "type": "integer",
              "description": "The total number of records to return. Default: 100. Limit: 1000.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The point at which to start pagination.",
            "schema": {
              "type": "integer",
              "description": "The point at which to start pagination.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderCostExtendedReadApiPagedResponse"
                },
                "example": {
                  "count": 2,
                  "prev": 6,
                  "next": 10,
                  "timestamp": 1590769189,
                  "data": [
                    {
                      "workOrderNumber": 25,
                      "workOrderDescription": "Oil change. The works.",
                      "workOrderCreatedDate": "2022-06-27T00:00:00Z",
                      "workOrderStatusCode": "Open",
                      "hasWorkOrderDamageTag": false,
                      "jobCode": "Hanbury Shop",
                      "laborCost": 65.3,
                      "partCost": 172.35,
                      "otherCost": 0,
                      "totalCost": 237.65,
                      "estimatedLaborCost": 65.3,
                      "estimatedPartCost": 172.35,
                      "estimatedOtherCost": 0,
                      "estimatedTotalCost": 237.65
                    },
                    {
                      "workOrderNumber": 26,
                      "workOrderDescription": "Battery theft. Requires replacement. Seat fabric also torn.",
                      "workOrderCreatedDate": "2022-05-22T00:00:00Z",
                      "workOrderStatusCode": "Closed",
                      "hasWorkOrderDamageTag": true,
                      "jobCode": "Darkwood Underpass",
                      "laborCost": 45,
                      "partCost": 112.17,
                      "otherCost": 0,
                      "totalCost": 157.17,
                      "estimatedLaborCost": 45,
                      "estimatedPartCost": 112.17,
                      "estimatedOtherCost": 0,
                      "estimatedTotalCost": 157.17
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderCostExtendedReadApiPagedResponse"
                },
                "example": {
                  "count": 2,
                  "prev": 6,
                  "next": 10,
                  "timestamp": 1590769189,
                  "data": [
                    {
                      "workOrderNumber": 25,
                      "workOrderDescription": "Oil change. The works.",
                      "workOrderCreatedDate": "2022-06-27T00:00:00Z",
                      "workOrderStatusCode": "Open",
                      "hasWorkOrderDamageTag": false,
                      "jobCode": "Hanbury Shop",
                      "laborCost": 65.3,
                      "partCost": 172.35,
                      "otherCost": 0,
                      "totalCost": 237.65,
                      "estimatedLaborCost": 65.3,
                      "estimatedPartCost": 172.35,
                      "estimatedOtherCost": 0,
                      "estimatedTotalCost": 237.65
                    },
                    {
                      "workOrderNumber": 26,
                      "workOrderDescription": "Battery theft. Requires replacement. Seat fabric also torn.",
                      "workOrderCreatedDate": "2022-05-22T00:00:00Z",
                      "workOrderStatusCode": "Closed",
                      "hasWorkOrderDamageTag": true,
                      "jobCode": "Darkwood Underpass",
                      "laborCost": 45,
                      "partCost": 112.17,
                      "otherCost": 0,
                      "totalCost": 157.17,
                      "estimatedLaborCost": 45,
                      "estimatedPartCost": 112.17,
                      "estimatedOtherCost": 0,
                      "estimatedTotalCost": 157.17
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderCostExtendedReadApiPagedResponse"
                },
                "example": {
                  "count": 2,
                  "prev": 6,
                  "next": 10,
                  "timestamp": 1590769189,
                  "data": [
                    {
                      "workOrderNumber": 25,
                      "workOrderDescription": "Oil change. The works.",
                      "workOrderCreatedDate": "2022-06-27T00:00:00Z",
                      "workOrderStatusCode": "Open",
                      "hasWorkOrderDamageTag": false,
                      "jobCode": "Hanbury Shop",
                      "laborCost": 65.3,
                      "partCost": 172.35,
                      "otherCost": 0,
                      "totalCost": 237.65,
                      "estimatedLaborCost": 65.3,
                      "estimatedPartCost": 172.35,
                      "estimatedOtherCost": 0,
                      "estimatedTotalCost": 237.65
                    },
                    {
                      "workOrderNumber": 26,
                      "workOrderDescription": "Battery theft. Requires replacement. Seat fabric also torn.",
                      "workOrderCreatedDate": "2022-05-22T00:00:00Z",
                      "workOrderStatusCode": "Closed",
                      "hasWorkOrderDamageTag": true,
                      "jobCode": "Darkwood Underpass",
                      "laborCost": 45,
                      "partCost": 112.17,
                      "otherCost": 0,
                      "totalCost": 157.17,
                      "estimatedLaborCost": 45,
                      "estimatedPartCost": 112.17,
                      "estimatedOtherCost": 0,
                      "estimatedTotalCost": 157.17
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/customField": {
      "get": {
        "tags": [
          "CustomField"
        ],
        "summary": "Returns a list of all custom fields and their details.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiCustomFieldRead"
                  }
                },
                "example": [
                  {
                    "id": "a03d2948-bfbc-4718-88b3-648fdeb2b280",
                    "customFieldType": "Equipment",
                    "customFieldName": "Division",
                    "customFieldCategoryId": 6,
                    "entityId": 105,
                    "entityGuid": "323613fa-e0ca-4dbc-83a4-7d57dea33b84",
                    "value": "Joy Division"
                  },
                  {
                    "id": "4ae7c70f-2479-40e7-8d48-f2b7a89068cf",
                    "customFieldType": "WorkOrder",
                    "customFieldName": "Time You Left the Job?",
                    "customFieldCategoryId": 10,
                    "entityId": 561,
                    "entityGuid": "8b394587-4e4f-4ea4-bd6f-989e5baf0b01",
                    "value": "2023-08-21 17:00:00"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "CustomField"
        ],
        "summary": "Create a new custom field.",
        "description": "All fields are required. EntityGUID refers to the ID associated with the item the custom field record is being attached to (e.g. Equipment ID, Parts ID, Work Request ID, etc.)\r\nFor help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiCustomFieldCreate"
              },
              "example": {
                "customFieldCategoryId": 6,
                "entityGUID": "858bbfc7-8dcd-4664-8925-ad073e0da933",
                "value": "My Division"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiCustomFieldCreate"
              },
              "example": {
                "customFieldCategoryId": 6,
                "entityGUID": "858bbfc7-8dcd-4664-8925-ad073e0da933",
                "value": "My Division"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiCustomFieldCreate"
              },
              "example": {
                "customFieldCategoryId": 6,
                "entityGUID": "858bbfc7-8dcd-4664-8925-ad073e0da933",
                "value": "My Division"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCustomFieldRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/customFieldCategories": {
      "get": {
        "tags": [
          "CustomFieldCategories"
        ],
        "summary": "Returns a list of all custom field categories and their details.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "categoryType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CustomFieldCategoryTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiCustomFieldCategoriesRead"
                  }
                },
                "example": [
                  {
                    "categoryID": 7,
                    "fieldName": "Tire Tread Depth?",
                    "entityName": "WorkOrder",
                    "dataType": "Number"
                  },
                  {
                    "categoryID": 11,
                    "fieldName": "Time you left the job?",
                    "entityName": "WorkOrder",
                    "dataType": "DateTime"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/customFieldList": {
      "get": {
        "tags": [
          "CustomFieldList"
        ],
        "summary": "Returns all options for List type custom field categories.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiCustomFieldListRead"
                  }
                },
                "example": [
                  {
                    "customFieldType": "Equipment",
                    "customFieldName": "Division",
                    "customFieldCategoryId": 23,
                    "listOptions": [
                      "Joy Division",
                      "Main Division",
                      "Secondary Division"
                    ]
                  },
                  {
                    "customFieldType": "Part",
                    "customFieldName": "Status",
                    "customFieldCategoryId": 27,
                    "listOptions": [
                      "New",
                      "Used",
                      "Refurbished"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/employees": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Returns all employees.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Optionally filter the returned list of employees by business unit",
            "schema": {
              "type": "string",
              "description": "Optionally filter the returned list of employees by business unit",
              "format": "uuid"
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Optionally filter the returned list of employees by an employee's integer ID or \"Legacy Key\"",
            "schema": {
              "type": "integer",
              "description": "Optionally filter the returned list of employees by an employee's integer ID or \"Legacy Key\"",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiEmployeeRead"
                  }
                },
                "example": [
                  {
                    "id": "12c7e9ea-6d67-4f43-9d67-bbf3117d07bd",
                    "employeeId": 1,
                    "businessUnitId": "f25e722e-3944-455b-b81a-de16fd569672",
                    "code": "LUPIN,R",
                    "firstName": "Remus",
                    "lastName": "Lupin",
                    "types": [
                      "mechanic"
                    ],
                    "payclass": "mechanic-jr",
                    "address": {
                      "line1": "13151 W. Airport Blvd.",
                      "line2": "",
                      "city": "Sugar Land",
                      "state": "TX",
                      "zip": "77498"
                    },
                    "hireDate": "2011-11-12T00:00:00Z",
                    "mobilePhone": "",
                    "homePhone": "123-456-6789",
                    "officePhone": "",
                    "homeEmail": "",
                    "officeEmail": "johndoe@gmail.com",
                    "region": "BEASLEY",
                    "division": "02-123",
                    "accountingCode": "EMP123",
                    "onLoanBusinessUnitId": "00000000-0000-0000-0000-000000000000"
                  },
                  {
                    "id": "e71683d7-44e7-41ec-9876-faff956c1ebc",
                    "employeeId": 2,
                    "businessUnitId": "f25e722e-3944-455b-b81a-de16fd569672",
                    "code": "BLACK,S",
                    "firstName": "Sirius",
                    "lastName": "Black",
                    "types": [
                      "mechanic",
                      "admin"
                    ],
                    "payclass": "mechanic-sr",
                    "address": {
                      "line1": "12 Grimmauld Place",
                      "line2": "",
                      "city": "London",
                      "state": "",
                      "zip": ""
                    },
                    "hireDate": "2011-11-12T00:00:00Z",
                    "mobilePhone": "",
                    "homePhone": "",
                    "officePhone": "",
                    "homeEmail": "",
                    "officeEmail": "johndoe@gmail.com",
                    "region": "BEASLEY",
                    "division": "02-123",
                    "accountingCode": "EMP234",
                    "onLoanBusinessUnitId": "00000000-0000-0000-0000-000000000000"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create a new employee.",
        "description": "First and Last name is required. Payclass is needed if employee is mechanic or fueler.\r\nFor help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEmployeeCreate"
              },
              "example": {
                "businessUnitId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                "code": "LUPIN,R",
                "firstName": "Remus",
                "lastName": "Lupin",
                "types": [
                  "mechanic"
                ],
                "payclass": "mechanic-jr",
                "address": {
                  "line1": "13151 W. Airport Blvd.",
                  "line2": "",
                  "city": "Sugar Land",
                  "state": "TX",
                  "zip": "77498"
                },
                "hireDate": "2011-11-12T00:00:00Z",
                "mobilePhone": "",
                "homePhone": "",
                "officePhone": "",
                "homeEmail": "",
                "officeEmail": "johndoe@gmail.com",
                "region": "BEASLEY",
                "division": "02-123",
                "accountingCode": "EMP123",
                "onLoanBusinessUnitId": "00000000-0000-0000-0000-000000000000"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEmployeeCreate"
              },
              "example": {
                "businessUnitId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                "code": "LUPIN,R",
                "firstName": "Remus",
                "lastName": "Lupin",
                "types": [
                  "mechanic"
                ],
                "payclass": "mechanic-jr",
                "address": {
                  "line1": "13151 W. Airport Blvd.",
                  "line2": "",
                  "city": "Sugar Land",
                  "state": "TX",
                  "zip": "77498"
                },
                "hireDate": "2011-11-12T00:00:00Z",
                "mobilePhone": "",
                "homePhone": "",
                "officePhone": "",
                "homeEmail": "",
                "officeEmail": "johndoe@gmail.com",
                "region": "BEASLEY",
                "division": "02-123",
                "accountingCode": "EMP123",
                "onLoanBusinessUnitId": "00000000-0000-0000-0000-000000000000"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEmployeeCreate"
              },
              "example": {
                "businessUnitId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                "code": "LUPIN,R",
                "firstName": "Remus",
                "lastName": "Lupin",
                "types": [
                  "mechanic"
                ],
                "payclass": "mechanic-jr",
                "address": {
                  "line1": "13151 W. Airport Blvd.",
                  "line2": "",
                  "city": "Sugar Land",
                  "state": "TX",
                  "zip": "77498"
                },
                "hireDate": "2011-11-12T00:00:00Z",
                "mobilePhone": "",
                "homePhone": "",
                "officePhone": "",
                "homeEmail": "",
                "officeEmail": "johndoe@gmail.com",
                "region": "BEASLEY",
                "division": "02-123",
                "accountingCode": "EMP123",
                "onLoanBusinessUnitId": "00000000-0000-0000-0000-000000000000"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEmployeeRead"
                },
                "example": {
                  "id": "12c7e9ea-6d67-4f43-9d67-bbf3117d07bd",
                  "employeeId": 1,
                  "businessUnitId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                  "code": "LUPIN,R",
                  "firstName": "Remus",
                  "lastName": "Lupin",
                  "types": [
                    "mechanic"
                  ],
                  "payclass": "mechanic-jr",
                  "address": {
                    "line1": "13151 W. Airport Blvd.",
                    "line2": "",
                    "city": "Sugar Land",
                    "state": "TX",
                    "zip": "77498"
                  },
                  "hireDate": "2011-11-12T00:00:00Z",
                  "mobilePhone": "",
                  "homePhone": "",
                  "officePhone": "",
                  "homeEmail": "",
                  "officeEmail": "johndoe@gmail.com",
                  "region": "BEASLEY",
                  "division": "02-123",
                  "accountingCode": "EMP123",
                  "onLoanBusinessUnitId": "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/employees/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Returns a single employee record, based on its Id.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the employee to return.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Id of the employee to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEmployeeRead"
                },
                "example": {
                  "id": "12c7e9ea-6d67-4f43-9d67-bbf3117d07bd",
                  "employeeId": 1,
                  "businessUnitId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                  "code": "LUPIN,R",
                  "firstName": "Remus",
                  "lastName": "Lupin",
                  "types": [
                    "mechanic"
                  ],
                  "payclass": "mechanic-jr",
                  "address": {
                    "line1": "13151 W. Airport Blvd.",
                    "line2": "",
                    "city": "Sugar Land",
                    "state": "TX",
                    "zip": "77498"
                  },
                  "hireDate": "2011-11-12T00:00:00Z",
                  "mobilePhone": "",
                  "homePhone": "",
                  "officePhone": "",
                  "homeEmail": "",
                  "officeEmail": "johndoe@gmail.com",
                  "region": "BEASLEY",
                  "division": "02-123",
                  "accountingCode": "EMP123",
                  "onLoanBusinessUnitId": "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEmployeeUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEmployeeUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEmployeeUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEmployeeRead"
                },
                "example": {
                  "id": "12c7e9ea-6d67-4f43-9d67-bbf3117d07bd",
                  "employeeId": 1,
                  "businessUnitId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                  "code": "LUPIN,R",
                  "firstName": "Remus",
                  "lastName": "Lupin",
                  "types": [
                    "mechanic"
                  ],
                  "payclass": "mechanic-jr",
                  "address": {
                    "line1": "13151 W. Airport Blvd.",
                    "line2": "",
                    "city": "Sugar Land",
                    "state": "TX",
                    "zip": "77498"
                  },
                  "hireDate": "2011-11-12T00:00:00Z",
                  "mobilePhone": "",
                  "homePhone": "",
                  "officePhone": "",
                  "homeEmail": "",
                  "officeEmail": "johndoe@gmail.com",
                  "region": "BEASLEY",
                  "division": "02-123",
                  "accountingCode": "EMP123",
                  "onLoanBusinessUnitId": "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/equipment": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "Returns all equipment.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Optionally filter the returned list of equipment by business unit",
            "schema": {
              "type": "string",
              "description": "Optionally filter the returned list of equipment by business unit",
              "format": "uuid"
            }
          },
          {
            "name": "equipmentCode",
            "in": "query",
            "description": "Optionally filter the returned list of equipment by Code",
            "schema": {
              "type": "string",
              "description": "Optionally filter the returned list of equipment by Code",
              "nullable": true
            }
          },
          {
            "name": "accountingCode",
            "in": "query",
            "description": "Optionally filter the returned list of equipment by Accounting Code",
            "schema": {
              "type": "string",
              "description": "Optionally filter the returned list of equipment by Accounting Code",
              "nullable": true
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Optionally filter the returned list of equipment by Status Code",
            "schema": {
              "type": "string",
              "description": "Optionally filter the returned list of equipment by Status Code",
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The total number of records to return. Default: 100. Limit: 1000.",
            "schema": {
              "type": "integer",
              "description": "The total number of records to return. Default: 100. Limit: 1000.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The point at which to start pagination.",
            "schema": {
              "type": "integer",
              "description": "The point at which to start pagination.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Determines if deleted equipment should appear in results. Defaults to false.",
            "schema": {
              "type": "boolean",
              "description": "Determines if deleted equipment should appear in results. Defaults to false.",
              "default": false,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEquipmentReadApiPagedResponse"
                },
                "example": {
                  "count": 2,
                  "prev": 11,
                  "next": 15,
                  "timestamp": 1594300743,
                  "data": [
                    {
                      "id": "712b78b5-b10e-4df9-a6ee-1747754abb7b",
                      "equipmentId": 13,
                      "businessUnitId": "f25e722e-3944-455b-b81a-de16fd569672",
                      "code": "DZ-101",
                      "equipmentType": "Dozer",
                      "description": "The big yellow one.",
                      "accountingCode": "HOLYMOLY",
                      "make": "Komatsu",
                      "model": "D39EXi-24",
                      "year": 2021,
                      "vin": "JF1GV7F67DG002982",
                      "serialNo": "Test",
                      "hourMeter": 3829,
                      "hourMeterDate": "2020-06-07T00:00:00",
                      "odometer": 0,
                      "imageUrl": "",
                      "region": "",
                      "division": "",
                      "weight": 0,
                      "length": 0,
                      "width": 0,
                      "height": 0,
                      "numberAxles": 0,
                      "tireSize": "",
                      "status": "Available",
                      "enabled": "Y",
                      "rentalFlag": false,
                      "ratedPowerHP": 0,
                      "ratedPowerKW": 0,
                      "defaultFuel": "",
                      "purchaseDate": "2000-01-01T00:00:00Z",
                      "purchasePrice": 100000,
                      "jobCode": "867-5309",
                      "locationName": "",
                      "onLoanBusinessUnitID": "00000000-0000-0000-0000-000000000000"
                    },
                    {
                      "id": "e71683d7-44e7-41ec-9876-faff956c1ebc",
                      "equipmentId": 14,
                      "businessUnitId": "f25e722e-3944-455b-b81a-de16fd569672",
                      "code": "DZ-102",
                      "equipmentType": "Dozer",
                      "description": "The small yellow one",
                      "accountingCode": "HOLYMOLY",
                      "make": "Komatsu",
                      "model": "D37EX-24",
                      "year": 2019,
                      "vin": "1J4RR5GT2BC512008",
                      "serialNo": "Test",
                      "hourMeter": 2011,
                      "hourMeterDate": "2021-06-07T00:00:00",
                      "odometer": 302,
                      "odometerDate": "2021-06-07T00:00:00",
                      "imageUrl": "https://datastorage-api.azurewebsites.net/api/DocumentStorage/Download/5173a497-6f02-46e9-9583-2c8d90a279be-equipmentimage.jpg/",
                      "region": "",
                      "division": "",
                      "weight": 0,
                      "length": 0,
                      "width": 0,
                      "height": 0,
                      "numberAxles": 0,
                      "tireSize": "",
                      "status": "Available",
                      "enabled": "Y",
                      "rentalFlag": false,
                      "ratedPowerHP": 0,
                      "ratedPowerKW": 0,
                      "defaultFuel": "",
                      "purchaseDate": "2000-01-01T00:00:00Z",
                      "purchasePrice": 100000,
                      "jobCode": "867-5309",
                      "locationName": "",
                      "onLoanBusinessUnitID": "00000000-0000-0000-0000-000000000000"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "Equipment"
        ],
        "summary": "Create a new equipment record.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "The details of the equipment to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEquipmentRead"
                },
                "example": {
                  "id": "712b78b5-b10e-4df9-a6ee-1747754abb7b",
                  "equipmentId": 13,
                  "businessUnitId": "f25e722e-3944-455b-b81a-de16fd569672",
                  "code": "DZ-101",
                  "equipmentType": "Dozer",
                  "description": "The big yellow one.",
                  "accountingCode": "HOLYMOLY",
                  "make": "Komatsu",
                  "model": "D39EXi-24",
                  "year": 2021,
                  "vin": "JF1GV7F67DG002982",
                  "serialNo": "Test",
                  "hourMeter": 3829,
                  "hourMeterDate": "2020-06-07T00:00:00",
                  "odometer": 0,
                  "imageUrl": "",
                  "region": "",
                  "division": "",
                  "weight": 0,
                  "length": 0,
                  "width": 0,
                  "height": 0,
                  "numberAxles": 0,
                  "tireSize": "",
                  "status": "Available",
                  "enabled": "Y",
                  "rentalFlag": false,
                  "ratedPowerHP": 0,
                  "ratedPowerKW": 0,
                  "defaultFuel": "",
                  "purchaseDate": "2000-01-01T00:00:00Z",
                  "purchasePrice": 100000,
                  "jobCode": "867-5309",
                  "locationName": "",
                  "onLoanBusinessUnitID": "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/equipment/{id}": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "Returns a single equipment record, based on its Id.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the equipment to be return.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Id of the equipment to be return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEquipmentRead"
                },
                "example": {
                  "id": "712b78b5-b10e-4df9-a6ee-1747754abb7b",
                  "equipmentId": 13,
                  "businessUnitId": "f25e722e-3944-455b-b81a-de16fd569672",
                  "code": "DZ-101",
                  "equipmentType": "Dozer",
                  "description": "The big yellow one.",
                  "accountingCode": "HOLYMOLY",
                  "make": "Komatsu",
                  "model": "D39EXi-24",
                  "year": 2021,
                  "vin": "JF1GV7F67DG002982",
                  "serialNo": "Test",
                  "hourMeter": 3829,
                  "hourMeterDate": "2020-06-07T00:00:00",
                  "odometer": 0,
                  "imageUrl": "",
                  "region": "",
                  "division": "",
                  "weight": 0,
                  "length": 0,
                  "width": 0,
                  "height": 0,
                  "numberAxles": 0,
                  "tireSize": "",
                  "status": "Available",
                  "enabled": "Y",
                  "rentalFlag": false,
                  "ratedPowerHP": 0,
                  "ratedPowerKW": 0,
                  "defaultFuel": "",
                  "purchaseDate": "2000-01-01T00:00:00Z",
                  "purchasePrice": 100000,
                  "jobCode": "867-5309",
                  "locationName": "",
                  "onLoanBusinessUnitID": "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "put": {
        "tags": [
          "Equipment"
        ],
        "summary": "Update equipment record, based on its Id.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the equipment to be updated.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Id of the equipment to be updated.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The details of the equipment to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEquipmentRead"
                },
                "example": {
                  "id": "712b78b5-b10e-4df9-a6ee-1747754abb7b",
                  "equipmentId": 13,
                  "businessUnitId": "f25e722e-3944-455b-b81a-de16fd569672",
                  "code": "DZ-101",
                  "equipmentType": "Dozer",
                  "description": "The big yellow one.",
                  "accountingCode": "HOLYMOLY",
                  "make": "Komatsu",
                  "model": "D39EXi-24",
                  "year": 2021,
                  "vin": "JF1GV7F67DG002982",
                  "serialNo": "Test",
                  "hourMeter": 3829,
                  "hourMeterDate": "2020-06-07T00:00:00",
                  "odometer": 0,
                  "imageUrl": "",
                  "region": "",
                  "division": "",
                  "weight": 0,
                  "length": 0,
                  "width": 0,
                  "height": 0,
                  "numberAxles": 0,
                  "tireSize": "",
                  "status": "Available",
                  "enabled": "Y",
                  "rentalFlag": false,
                  "ratedPowerHP": 0,
                  "ratedPowerKW": 0,
                  "defaultFuel": "",
                  "purchaseDate": "2000-01-01T00:00:00Z",
                  "purchasePrice": 100000,
                  "jobCode": "867-5309",
                  "locationName": "",
                  "onLoanBusinessUnitID": "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/equipmentTransfer": {
      "post": {
        "tags": [
          "EquipmentTransfer"
        ],
        "summary": "Transfer ownership of equipment between business units.",
        "description": "Note: Transferring ownership of equipment between business units will reset the following fields associated with the equipment: Job, Region, Division, and Default Mechanic.\r\nFor help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "The details of the equipment to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentTransferCreate"
              },
              "example": {
                "equipmentId": "60bbe69c-7611-4594-97c2-64ca166b0911",
                "currentBusinessUnitId": "3d2ab2ae-8632-444e-90db-619628ecfd62",
                "newBusinessUnitId": "728edd5d-8384-45ba-81a8-07475ff1c867"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentTransferCreate"
              },
              "example": {
                "equipmentId": "60bbe69c-7611-4594-97c2-64ca166b0911",
                "currentBusinessUnitId": "3d2ab2ae-8632-444e-90db-619628ecfd62",
                "newBusinessUnitId": "728edd5d-8384-45ba-81a8-07475ff1c867"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentTransferCreate"
              },
              "example": {
                "equipmentId": "60bbe69c-7611-4594-97c2-64ca166b0911",
                "currentBusinessUnitId": "3d2ab2ae-8632-444e-90db-619628ecfd62",
                "newBusinessUnitId": "728edd5d-8384-45ba-81a8-07475ff1c867"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEquipmentTransferRead"
                },
                "example": {
                  "equipmentId": 34,
                  "equipmentName": "01-300",
                  "oldBusinessUnit": "Site Equipment Ltd",
                  "newBusinessUnit": "Forestry",
                  "transferDateTime": "2024-03-12T00:00:00Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/equipmentType": {
      "get": {
        "tags": [
          "EquipmentType"
        ],
        "summary": "Returns a list of all equipment types.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiEquipmentTypeRead"
                  }
                },
                "example": [
                  {
                    "equipmentTypeID": 1,
                    "name": "EXC",
                    "description": "Excavator",
                    "longDescription": "EXC",
                    "budget": 250000,
                    "utilizedHoursPerYear": 1200,
                    "utilizedMilesPerYear": 500,
                    "replacementCycleYears": 5,
                    "sweetSpotK": 200000,
                    "sweetSpotEx": 300000,
                    "billingRate": 150,
                    "avgOperatingCostPerHour": 50,
                    "avgOperatingCostPerOdometer": 0.75
                  },
                  {
                    "equipmentTypeID": 2,
                    "name": "LRG",
                    "description": "Large Excavator",
                    "longDescription": "EXC:LRG",
                    "budget": 200000,
                    "utilizedHoursPerYear": 900,
                    "utilizedMilesPerYear": 300,
                    "replacementCycleYears": 7,
                    "sweetSpotK": 180000,
                    "sweetSpotEx": 220000,
                    "billingRate": 120,
                    "avgOperatingCostPerHour": 60,
                    "avgOperatingCostPerOdometer": 0.65
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "EquipmentType"
        ],
        "summary": "Create a new equipment type.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "The details of the equipment type to be created. If equipment type with same name already exists, will update the record.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentTypeCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentTypeCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiEquipmentTypeCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEquipmentTypeRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/invoice": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Gets invoice details.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "receivalDate",
            "in": "query",
            "description": "Optional. If specified, filter by invoice receival date.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, filter by invoice receival date.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "modifiedDateTime",
            "in": "query",
            "description": "Optional. If specified, filter by since modified date/time.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, filter by since modified date/time.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "invoiceStatus",
            "in": "query",
            "description": "Optional. If specified, filter by invoice status.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, filter by invoice status.",
              "nullable": true
            }
          },
          {
            "name": "invoiceNumber",
            "in": "query",
            "description": "Optional. If specified, filter by invoice number.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, filter by invoice number.",
              "nullable": true
            }
          },
          {
            "name": "referenceNumber",
            "in": "query",
            "description": "Optional. If specified, filter by reference number.",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, filter by reference number.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiInvoiceRead"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Creates a new invoice.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiInvoiceCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiInvoiceCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiInvoiceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiInvoiceRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update invoice status and add details to invoice",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "Details about the invoice to update/add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiInvoiceCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiInvoiceCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiInvoiceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiInvoiceRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Returns a list of all jobs.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Optionally filter the returned list of jobs by business unit",
            "schema": {
              "type": "string",
              "description": "Optionally filter the returned list of jobs by business unit",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiJobRead"
                  }
                },
                "example": [
                  {
                    "id": "a5dbedf2-2222-4cbf-8bd7-07cbeb2a32e6",
                    "businessUnitId": "00000000-0000-0000-0000-000000000000",
                    "code": "16-4729",
                    "altCode": "Clay",
                    "description": "Clay Job",
                    "enabled": "Y",
                    "regionCode": "",
                    "divisionCode": "",
                    "address": {
                      "line1": "",
                      "line2": "",
                      "city": "Sugar Land",
                      "state": "TX",
                      "zip": "77478"
                    },
                    "status": "Active"
                  },
                  {
                    "id": "6c18428d-9d6f-46ef-b1b2-099d828931b5",
                    "businessUnitId": "00000000-0000-0000-0000-000000000000",
                    "code": "20-5024",
                    "altCode": "",
                    "description": "Eastex Job",
                    "enabled": "Y",
                    "regionCode": "",
                    "divisionCode": "",
                    "address": {
                      "line1": "",
                      "line2": "",
                      "city": "Sugar Land",
                      "state": "TX",
                      "zip": "77478"
                    },
                    "status": "Active"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Create a new job.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiJobCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiJobCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiJobCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiJobRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/jobs/{id}": {
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Update an existing job.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The job guid.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The job guid.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiJobUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiJobUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiJobUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiJobRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/locations": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Returns a list of all locations.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Optionally filter the returned list of locations by business unit",
            "schema": {
              "type": "string",
              "description": "Optionally filter the returned list of locations by business unit",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiLocationRead"
                  }
                },
                "example": [
                  {
                    "id": "116c7656-86bb-471a-8636-0a289faafbef",
                    "businessUnitId": "00000000-0000-0000-0000-000000000000",
                    "code": "07-1960",
                    "description": "FM 1960",
                    "enabled": "Y",
                    "address": {
                      "line1": "",
                      "line2": "",
                      "city": "Sugar Land",
                      "state": "TX",
                      "zip": "77478"
                    }
                  },
                  {
                    "id": "4ff48039-6ca1-42c6-8a36-3777c4e01589",
                    "businessUnitId": "00000000-0000-0000-0000-000000000000",
                    "code": "05-29HS",
                    "description": "Hanbury Job",
                    "enabled": "Y",
                    "address": {
                      "line1": "",
                      "line2": "",
                      "city": "Sugar Land",
                      "state": "TX",
                      "zip": "77478"
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create a new location.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiLocationCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiLocationCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiLocationCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiLocationRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/locations/{id}": {
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update an existing location.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location guid.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location guid.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiLocationUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiLocationUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiLocationUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiLocationRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/maintenanceRequest": {
      "get": {
        "tags": [
          "MaintenanceRequest"
        ],
        "summary": "Gets all maintenance request or filtered by Equipment Code.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "equipmentCode",
            "in": "query",
            "description": "Optionally filter maintenance requests by Equipment Code",
            "schema": {
              "type": "string",
              "description": "Optionally filter maintenance requests by Equipment Code",
              "nullable": true
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Optionally filter maintenance requests by Business Unit Id",
            "schema": {
              "type": "string",
              "description": "Optionally filter maintenance requests by Business Unit Id",
              "format": "uuid"
            }
          },
          {
            "name": "businessUnitCode",
            "in": "query",
            "description": "Optionally filter maintenance requests by Business Unit Code",
            "schema": {
              "type": "string",
              "description": "Optionally filter maintenance requests by Business Unit Code",
              "nullable": true
            }
          },
          {
            "name": "changesSinceDate",
            "in": "query",
            "description": "Optionally filter to maintenance requests that are either new or have changed since the specified date.",
            "schema": {
              "type": "string",
              "description": "Optionally filter to maintenance requests that are either new or have changed since the specified date.",
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The total number of records to return. Default: 100. Limit: 1000.",
            "schema": {
              "type": "integer",
              "description": "The total number of records to return. Default: 100. Limit: 1000.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The point at which to start pagination. Returned as \"next\" or \"prev\" in the response. Default: 1.",
            "schema": {
              "type": "integer",
              "description": "The point at which to start pagination. Returned as \"next\" or \"prev\" in the response. Default: 1.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMaintenanceRequestReadApiPagedResponse"
                },
                "example": {
                  "count": 2,
                  "prev": 4,
                  "next": 8,
                  "timestamp": 1594300743,
                  "data": [
                    {
                      "id": "94a4f6d3-1679-40ab-ba58-94c80a32056a",
                      "requestedDate": "2019-01-21T00:00:00",
                      "priorityCode": "Low",
                      "status": "Added to work order",
                      "statusDate": "2019-01-21T00:00:00",
                      "workOrderId": 55,
                      "workOrderStatusCode": "Open",
                      "workOrderStatusChangedBy": "Will Smith",
                      "workOrderStatusDate": "2019-01-21T00:00:00",
                      "pointOfContact": "Jimmy John 281-123-4567",
                      "dismissedDescription": "",
                      "description": "It's broken",
                      "equipmentCode": "01-100",
                      "equipmentId": "69bd8de3-3d74-49a5-9965-421a2752d5e1",
                      "jobId": "9d16be7a-4dc7-47dd-9ee1-fed7a4d5b970",
                      "jobCode": "West Street",
                      "priorityId": "dc956f98-3d46-4085-ae57-090c2bb838ee",
                      "source": "Heavy Job",
                      "requestedBy": "Ricky Bobby"
                    },
                    {
                      "id": "ee0ba864-812a-4051-a000-1eed485aa727",
                      "requestedDate": "2019-01-21T00:00:00",
                      "priorityCode": "Low",
                      "status": "Added to work order",
                      "statusDate": "2019-01-21T00:00:00",
                      "workOrderId": 55,
                      "workOrderStatusCode": "Open",
                      "workOrderStatusChangedBy": "Will Smith",
                      "workOrderStatusDate": "2019-01-21T00:00:00",
                      "pointOfContact": "Jimmy John 281-123-4567",
                      "dismissedDescription": "",
                      "description": "It's busted",
                      "equipmentCode": "01-100",
                      "equipmentId": "69bd8de3-3d74-49a5-9965-421a2752d5e1",
                      "jobId": "9d16be7a-4dc7-47dd-9ee1-fed7a4d5b970",
                      "jobCode": "South Street",
                      "priorityId": "dc956f98-3d46-4085-ae57-090c2bb838ee",
                      "source": "Heavy Job",
                      "requestedBy": "Ricky Bobby"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "MaintenanceRequest"
        ],
        "summary": "Creates a new maintenance request.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiMaintenanceRequestCreate"
              },
              "example": {
                "description": "equipment won't start",
                "equipmentCode": "DZR-01",
                "equipmentId": "f0b41e63-5ce5-41ff-a934-497da0c599bc",
                "jobId": "b1277067-64cd-42d4-9283-cb316eca7e59",
                "jobCode": "SW Freeway",
                "priorityId": "3d47353b-8473-469a-9f58-822c527a29da",
                "pointOfContactName": "John Watson",
                "pointOfContactPhoneNumber": "123-456-7890",
                "source": "E360 API",
                "requestedBy": "John Watson",
                "attachments": [
                  {
                    "imageAsBase64": "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",
                    "imageFileName": "HcssLogo.jpg"
                  },
                  {
                    "imageAsBase64": "",
                    "imageFileName": "MyAvatar.jpg"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiMaintenanceRequestCreate"
              },
              "example": {
                "description": "equipment won't start",
                "equipmentCode": "DZR-01",
                "equipmentId": "f0b41e63-5ce5-41ff-a934-497da0c599bc",
                "jobId": "b1277067-64cd-42d4-9283-cb316eca7e59",
                "jobCode": "SW Freeway",
                "priorityId": "3d47353b-8473-469a-9f58-822c527a29da",
                "pointOfContactName": "John Watson",
                "pointOfContactPhoneNumber": "123-456-7890",
                "source": "E360 API",
                "requestedBy": "John Watson",
                "attachments": [
                  {
                    "imageAsBase64": "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",
                    "imageFileName": "HcssLogo.jpg"
                  },
                  {
                    "imageAsBase64": "",
                    "imageFileName": "MyAvatar.jpg"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiMaintenanceRequestCreate"
              },
              "example": {
                "description": "equipment won't start",
                "equipmentCode": "DZR-01",
                "equipmentId": "f0b41e63-5ce5-41ff-a934-497da0c599bc",
                "jobId": "b1277067-64cd-42d4-9283-cb316eca7e59",
                "jobCode": "SW Freeway",
                "priorityId": "3d47353b-8473-469a-9f58-822c527a29da",
                "pointOfContactName": "John Watson",
                "pointOfContactPhoneNumber": "123-456-7890",
                "source": "E360 API",
                "requestedBy": "John Watson",
                "attachments": [
                  {
                    "imageAsBase64": "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wgARCADIAMgDASIAAhEBAxEB/8QAHAABAAIDAQEBAAAAAAAAAAAAAAcIAwUGBAEC/8QAGwEBAAIDAQEAAAAAAAAAAAAAAAMEAQIFBgf/2gAMAwEAAhADEAAAAbUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPNGuteU0OyJjTfK1+CPnWghLq+JznJNvA73M0PajDKEPDknYYc1r14Z2AAOPrjFyrFbym11NYPb+f1yc3Yq/qDn/NLB8zLcGWPU2O8fti6Xs9vxePko+XpZt5HqWu8r1+ZG1gmViy2vUgyABAEN9VytD511duK+2Cs+pQ3MlYMyx37vD0tPxNvOIjqOLPq9/00OIPPSpyfLmmfAaVBsc5tj0Pz70PpoZ3Aa7YxrrXrP8fef82srJvNRfd97NFN/nir+XG1j5eqS9I0nWrF2NpM8vXgTqJTSdHjNxu21vwfv2MyhnYABXuwlQoOFzOTGqeL2es+yNtYjh0nN4iz3Sq1a+z6oLHpAAAAAAANTTOylaqnjm80dvtKWn7jLxlv2lWvIUfnM1TzHkh3ffhJ0QAAAAAAK7RL0WiofOfdc+v1grHqEIzd5JOnUmQLAo+b4/YTdwM5AAAAAAYspiN+79rWENpwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//EACkQAAEDBAIABgEFAAAAAAAAAAQDBQYAAQIHEBQREhMgMEAVFiIxYHD/2gAIAQEAAQUC/umeeKeDjsNS67bsRbsrkpjDd17mJReL1EyW8ux4PyLkpCpuWwQRai8hcJA8vbukyAJ2fZgpcp3iDjLjLqROFPzW2CO8cClKr43qLx1ikxMboWUs8iVSSwQS+BylzY2U0n/lG+r38tnRxVcza1uJ5ANgF5FvDeFg3BOTIE73OMam4c7XIi1BoFR2UyWU/p3NNEGQgv7YKnIPfKH27C3uUicHWscb5ZBDWDDqVGdJg4ionTYJXe4sw74/Vb5aa8v87j5LjkhKZAknGo0Xm4yYVteRfwV0so23sjOqkrgvh7tkF+c2osJ3H/jZBnkEoIa5hmONsMZLF0n/AAJjCQGbfKGqOjlbEcVaIk7qTSiyivsjwnRZPdKDO8/VrcTzn8TsztP9R0wdvdj9jrqUc+nuXwNw3cPtbwt7XEvogfzxr4T0GOizUAETirmmexFBQjMSFuxdxdarXofXbcnSUOZ0qTZG5GugNWIaGGXun5nXYuBc0GBleNiZXos1c9XgFrLcs2/XJS1BQdqDpFBMfD5djmeo4Unn6eZ7kS5r8opXXWGHxEH+hJDO8+8ssINc6kAaDe61DxO3IvoOxfQbeGpmKeV2KHhs1KqYopFkXLKrWwniv9DYJnXZOI2DZvZKmBnSj/EEE60f+hsYz1XSmwXuuNreHGyTP2BR5xcKC1wSpQYuAQn0JAZ33pNPNbOFxw1F24yEQzX+krjfNMKBNg1DBDh4/wCV/wD/xAAvEQABAwIEBAUCBwAAAAAAAAABAAIDBBEFEhNRITEyQRAUICIwM2FAQlBxkaGx/9oACAEDAQE/Afx8tRFALyOsoqqOWMzDpRxO3v0zk3VVUOMzYGvyAi91B5mNr85zAcjuo9OobcykS/dNvbj6KvEY6U5CLlUFZLWPcXcAFI8RsLz2TnF5zFVLdGgjj3tf/VLJCwNidxvyCqJY9Qx1MfDtZU8c0NM8x+254XTya3Kx7A3c3HprJNWoe5YRHlp826xSTTpiN+CiAc8B3JVWJUrmmO2ZNqtE5oW2/tPq55Op5XNNGY2CY3I0NHbxqJNKJz9vATQ0MDWSHsq6u83YAWATWlxs0KLC6mTmLfuo8FjH1HXTMOpWfkTYIm9LR/Cyjb0YvJlp8u/gyOWpf7Rcp7DG4sPZYLHZjpPhxmTNMGbKgpBVyWdyCyx0sRyCwCJublYfHp0zB8NXJrTud91hELo4i5wtdVUJniMYNrqLCIGdfFAWFh8McEUXQ236n//EACURAAICAQMEAQUAAAAAAAAAAAECABEhAxASEyAwMUEiQFBRYf/aAAgBAgEBPwH78sB7gYEXOp/IzZq4OQuCj857WcLEYsYcbNhAISBiMRdMIthTUP19rGzNIYmoaWCNqL6nKvU5E7jG7Ghe1hBmO/LYabGDS/c6aziO3VONgC22kPnw6pzEXkZhRsgpfCxszSFCMLFQaQ8QUD1+T//EAEIQAAIBAgMDBgoHBgcAAAAAAAECAwQRABIhEBMxIkFRYXGBBRQgMkBSU5GhwSMwQmKx0fEVJDRDcvBgY3CCg5Lh/9oACAEBAAY/Av8AGhZjlUC5JwY/B1MHA4PJc5u7Cx18CCMmxeO4K92HndvokXOT1Yl8UdoKdPsq+VR29OImedxm1FnzI2KeoAtvUDW6PrTJNIsSD7Tm2CtMrVb9Pmrh94VjpY0LbtBpfmw9RLrzKnrHDSpIUgB05WSMdXXhVlkbpyFsySDEk0V8swTX7pIw0U53FQzXMhXzh24jqoqtRZcpaGzZsT0kHLk3YC9dsSw7hXRmuyPoQcRQVlNkkvyBMMy37cLHGoRFFgo5vqSGn30nqQ8rEVVu91vNQt76bCToBiWaV2e7HKCfNHQNlVUe0cL7v1xBRIdI1Gn3m/sYhpoxZY1t24jNXBvcnm8oj8MLQVckccW7CiJ9eTwxelnkpz0NyhiCmEn0glRDkOjA2xAvi2/3oJ8/Lb4YgqJaeKYSIDqM2XqvhaTwYbhsosDfK9+H4fUCZFV5XbIobFp6lsns15K4AGpPNiCBeEaBdlY97FkyDv020aWsSmc9+uJJXHJzxv3WGPGd+ni9r7zNpjxajji8TzXLspzZBz8cQ1dMhmKLkaNePbhaYQM7gZQWgJfH7V8K6SXzKr8Sek9GBHPXQU8qG6OXGmCieGaDdnonP5Y37+E6eoquYlwAvZgPG6yIeDKbjy6Wm9RC57/02UaWuA+c92u2lpR/MYue79dkEC8ZHC4AGgGFfPualBYPzEdBxlqvC1JGOcJd292GioKaaokPnSyWXNi0UcMHXa5xy66X/Ycv4Y5bs/8AUb+RRw9EYJ7TqfLrJL3UPkHYNNlVUezQJ7/02yKDdYVEfz+eyGpqc27iu1lFyTzYIo6ZYh68pzH3YPjFVI6n7F7L7vqKaD2kir8fLqKj2SFtu9trNIWv1DTYZaiVYkHOxxPUNxlcv5OSKNpX9VBc4/htyvrSm2P3msROqJc35Y+lkmmPbYY0olP9TMfnjkUNOv8AxDH8PF/0GAywRqw5wo8vdg2Mzhe7j8ttMtTIsCxRAEnptrgx+Do7D20nyGN7UStM/Sx25aanebrA09+A1XOlOPVXlNjWI1LdMxv8MZIo1jQfZQWH11NTj+UmY9p/TYrcbG+uDLUytK3XwHZ5CRr5zsFGI4U0VFCj0GslvcbwqvYNPIWSb90pzzuOUewYlpae5jisuZjqTbXZSAi6od4e7h8beg1NRe27jJHbzbd3TR5vWc+auFkYeM1PtGHDsGHkbRVFziaY8ZHL+/ZWVJHBRGD8T+A9BEI4zyBe4a/ltpIgAGyBm7TrsqiPOcbsd/8A5fbG3PM5k+Xy9BgpwdIo7kdZ/sbKaC195IFPZfbR0gOtzIR8B88fQUkjD1mGUe84BqqlIh6qDMcQ08fmRqFHoNZNzGSw7BoPwwFRS7HmUXOI6uopmhijBtvNDfhw2idoY2mAsJCvKA7fQ2VWyMRYN0YvKHqm/wAxrD4YywQxwj7i2/0s/8QAKxABAAEDAQgBBAMBAQAAAAAAAREAITFBEFFhcYGRofCxIEDB0TDh8WBw/9oACAEBAAE/If8AtCXrJQAZadZ0DTiDEd6LA4DxVSz4ozwkO4TV0jRJK4EXftqKGJVYORHnqa1GU83DH8uZjQQd6tL2xy82/ip2xkeRiTly8LVdils3XB+eRTWJF3gUZcb0hrMO5H3iVeRXDRTzjrUzpEyaBDEbqXkWgNyWdKmsArDat1isekW4zOnUoEdkHI0P2Co17lgG4/gWKjEM3zq4OrTrRlTMSQvxzsNQAlXSiyjkkRtuDZNOTeRn8+1SaMhtN+qFCEtIlq9W9CgZRWUxORuKZwZHCbPjxUk83j6ej5aOBqSPY8xoFneWgjinNWi8GSS+pbFJ9csGmB4flRY+sGLcNhVY3RUuq/8AEM9ZoE1UA1aLqD/QjYGkk8z/AHT02hbjT5n+6lXQDxH60oUxVdgjzq152DMksF0tqVEWNkxmQGuWipGsSfLzKZslZXCmg0PiKfaK5bURcP4KgNJdMPMKGoMjfvwXPGsNYCTqfXGeOenHvjsa3DnxH9W13mi9xg9bthQSb6sUAYKANCjXiTnIg9zQGWLknSVlkq5fO6HCKBROgZ92PFCoUdP0dKq45V+gWreiDK/XAM4XTcu2yacGc3PvjttKnbpy8+Gxi7IsgQd3xXPEQDkgPNLa2R4238FjFGY3IGgACAwH1E+TDm9CxSqVZXV2Arhx0sPh77N0U7S7je1Y4ZG6WY+kOqYS3Qop0Dj0z4qJeJCXV/Co13OT4ifNLyx7s0zjbyXvFR+94q/ggCT65O1f1hd8O+wJae3DudIaszYpku8Ry8/29qQpu/dt20QqxhOeB1oJg5/zvmrz7zhB4oPgYEOh/MTpheY/od9iCgihgxSJzifRGA5fR59wFgorejAPsWzRIxjeDbE1EuwcR9Lvmm9lSRDKeqnTYUyHwIr9iBe8Bn5RSyy3dk/kNwDi+tGDDfCfi55pUZd9wEtWA3RxU7GsJzifQ3/Yq5uDuPJ3bUwiLM3nzHTYq+DdbDtJtyr4eD9jch4YP+jYuSEE3rvFAACA0NhlwPTG+l/9aECpzNlXcsfNSIXaygRL9jv9XqGBWEP0w6Uo7tGRkLr67tsbg03Igy1fs5LAwJlGaPMuynYh5mrDZiC+P/ln/9oADAMBAAIAAwAAABDzzzzzzzzzzzzzzzzzzzzzzzjzzzzzzzzLt2Dx7zzyrvzxYYsUlXzzxXSi8+9x/wBc88s6yd5++see888r+Q2U88888888u7K8188888888x+7/e88888889c88888888888888888888888888888888888888888888888888//EACoRAQABAwIFAgYDAAAAAAAAAAERACExUZFBcYGhwWGxECAw0eHwQFDx/9oACAEDAQE/EP58QHu6GWkIQTdtY4/t6ECFMffH5owcgcX0Cbfu8Fik2psbW6VGIDxIDOC0YxfO1AEcsX5/JJxDMGOr/tEcCIDV9eQ6cqwCBdiaarK0+MFuSu9DqCJBM6W0NavfmJhlNJE7U4spDCQ9ZsKWvzqfAElktmIvfqe9CJJ8mnMwcix7VeuWvQt4ajbLPJ7FLdCSXQm9Ssl6G7fYqdG9WUdW3as8OsGxBSqlaUczahwoBt8fQ8vXh3rNQqUFjK8bc9bU7uqjV50GYrwL1GoH1eCXeKvC8lvv4rCh5y+9qwa5A8UDgfJHHLDoX94oUZKfDNl8q+azEJGNSpG4obE+fowng938BThIKWOPp6UpwCux3aRsjWpiTvf6KD3lRyLHYpVyfEiwW92sHYlzaZauyX6sGxfvQEEB9BJIo2C5C++f7P8A/8QAIBEBAAICAgMAAwAAAAAAAAAAAQARITFBURAgMEBQYf/aAAgBAgEBPxD8/Yoo4zvau4yTQ7lSzfUo2wLrPo5W2Or1FRYttsEwIWblhgcQOYXq4sBA/vrcsov3MR3AKDEGFwss1HafAXiCgebPwDRTo4gLgnAVB5QDiA6JR6UV78IYyxKaZifiuJ1MM6lLo14qPjYsVF5j1IHeYFY+Ohfs/wD/xAAoEAEBAAEDBQABBAIDAAAAAAABESEAMUEQUWFxgSAwQJGhYLFw0fD/2gAIAQEAAT8Q/wA0ick0aouwAt0ovoYDdNDeVKShtoQG70GM1nIKl3cLbFWEoSd6GO+NCCJDGubEK4TDAIaZe5vmX0cDAMobk9zZGNfhU+fqlKW/YZBqVSwKHYlXyPOnA0oIAlrRMvLDGhaVAo25vGFPCOdl+SRQ9i0B4I5SmiIIacKQWzZLDxXM8Tlo5gTgIu+Ogru1MkgURuha2rqaDDGWxbqTvxxoleSqbR5DA7s0aZCC+Cm6gBEkJM1pV2auT7KgUDjNxo8FDwpADYP0ACqAbrq5skjfsLbwD4024HQhhAFARMWZnRs5EoAKq6V7LtKgdgQA7dOH5b39fUtHLjFR3D/fxXQ+L7iBnO9F5XTUnUk4m6vJdsbupSNggjkVmIrbVudWMRBDOBUfbou0Qvt9PA8JhzwOsFaTKpndesx30cDjKyjIFKpGjg0ymabUOWoFNVFC4gIFWG7z+af0HZUCQoNgmUzpQgErh7Mz3p50G1RlUYB7dEAARzOvsvS7rjqJzHyD9F1H7hhE675AnoNJyO6XPIc5+R1GyYoPmmfN7jfRykEGENATgOCSMdc8vKn31mSGTDEsKloAxCm2DdF5um2IbqiBsBmwiGABpdU/YABoBQRqcR2svYPlBZxX3oTWVqhNwqpTtsGbdybFVRiI5E+fm8LcjmWPkK6T2IwUGu+0ntOsrcaswA+Fb76UaEo8dei26Kao6AEA+auit2cbgMqomSsO2jSehfm+fe1S99LiAWArMINxHd5VVf1YycZs1v1ajLeMMPGk65UBe7V/ARAHJsfn2GdSXAD6Nvm3npw/pe/r4M6hdiAOEMfNB+OOkPBxKcChsNUNDK+QRwiUPtOijdSl/h/r+g8Wl76h8FdAmNAQDt+XuYVbfogfdO2dVKr3eisagMwF6F/rpj0khPBTc4DOgA9iD/gs+fj/AFhJMAXWRrSjfa3+OiYab/6838tJ8pG35rBPesV+Mf1oQgP/AEB0GAMNg0m5BXh3EKfmx8sjdZzxQf8At0QAFXAHOoFKVwDuFLQVuDVBiytNuEdxvyNFaOLmHYbDwQ6pkLS7+SfYaSElPA7KIXyI96ON/cGeIx9p86/pHJCAB+shYPjiDE7ir0A/unUQxO2NMBZ4gth+IB+BfCZu039iaIaMgDAL7ZX9i+iSRUlzwi/XqJACrgDQiEDQ/PClOyZoaGqrjShAEkAGPldOrU53Kfgff2NbxAbtAHlY+6RkUaq1ehI4xya54/RVwOpAjjT9ynuuGEs15wfaifwOgrVCbEsv3oaQdhlZA+Cnp+xnQN7HMx8XU8hQIS1XlHI8Dt0LrmzFhPzSx268bp+xQv5H39jtDVNrCe7/AL0eWPsEAP5T80DY0AgHboxJFzgAqnn+l1CSMhG9KnobrdLw5naoPkj3rOg/mCwOWV8r+xbn5u821HD3Hk9gCugpGxaQGDBtYx36jDQMwoQQVIO6/s1dhTRkE8xzPGqwfRQ3jOPC0IBYiyeYL9/4s//Z",
                    "imageFileName": "HcssLogo.jpg"
                  },
                  {
                    "imageAsBase64": "",
                    "imageFileName": "MyAvatar.jpg"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMaintenanceRequestRead"
                },
                "example": {
                  "id": "94a4f6d3-1679-40ab-ba58-94c80a32056a",
                  "requestedDate": "2019-01-21T00:00:00",
                  "priorityCode": "Low",
                  "status": "Added to work order",
                  "statusDate": "2019-01-21T00:00:00",
                  "workOrderId": 55,
                  "workOrderStatusCode": "Open",
                  "workOrderStatusChangedBy": "Will Smith",
                  "workOrderStatusDate": "2019-01-21T00:00:00",
                  "pointOfContact": "Jimmy John 281-123-4567",
                  "dismissedDescription": "",
                  "description": "It's broken",
                  "equipmentCode": "01-100",
                  "equipmentId": "69bd8de3-3d74-49a5-9965-421a2752d5e1",
                  "jobId": "9d16be7a-4dc7-47dd-9ee1-fed7a4d5b970",
                  "jobCode": "West Street",
                  "priorityId": "dc956f98-3d46-4085-ae57-090c2bb838ee",
                  "source": "Heavy Job",
                  "requestedBy": "Ricky Bobby"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/meterReading": {
      "post": {
        "tags": [
          "MeterReading"
        ],
        "summary": "Submits a meter reading for specified equipment.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiMeterReadingCreate"
              },
              "example": {
                "enteredBy": "John Doe",
                "equipmentCode": "EX-0003",
                "readingDate": "2019-03-01T12:05:05Z",
                "meterType": "hourMeter",
                "meterValue": 2932,
                "bypassValidation": false
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiMeterReadingCreate"
              },
              "example": {
                "enteredBy": "John Doe",
                "equipmentCode": "EX-0003",
                "readingDate": "2019-03-01T12:05:05Z",
                "meterType": "hourMeter",
                "meterValue": 2932,
                "bypassValidation": false
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiMeterReadingCreate"
              },
              "example": {
                "enteredBy": "John Doe",
                "equipmentCode": "EX-0003",
                "readingDate": "2019-03-01T12:05:05Z",
                "meterType": "hourMeter",
                "meterValue": 2932,
                "bypassValidation": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMeterReadingRead"
                },
                "example": {
                  "id": "03c479db-ecc2-495e-8a10-51de9ddc730a",
                  "enteredBy": "John Doe",
                  "equipmentCode": "EX-0003",
                  "readingDate": "2019-03-01T12:05:05Z",
                  "meterType": "hourMeter",
                  "meterValue": 2932,
                  "bypassValidation": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "get": {
        "tags": [
          "MeterReading"
        ],
        "summary": "Gets the latest meter reading.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "The optional e360 business unit id. If omitted, returns readings in all the business units.",
            "schema": {
              "type": "string",
              "description": "The optional e360 business unit id. If omitted, returns readings in all the business units.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "equipmentCode",
            "in": "query",
            "description": "The optional equipment code. If omitted, returns reading for all the equipment in the specified business unit.",
            "schema": {
              "type": "string",
              "description": "The optional equipment code. If omitted, returns reading for all the equipment in the specified business unit.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiMeterReadingGet"
                  }
                },
                "example": [
                  {
                    "businessUnitId": "12c7e9ea-6d67-4f43-9d67-bbf3117d07bd",
                    "equipmentCode": "EX-0003",
                    "hourMeterId": "03c479db-ecc2-495e-8a10-51de9ddc730a",
                    "hourMeterValue": 2,
                    "hourMeterDate": "2019-03-01T12:05:05Z",
                    "hourMeterEnteredBy": "John Doe",
                    "odometerId": "cb4f28b4-96cf-4572-b6d8-f22b813e769a",
                    "odometerValue": 235,
                    "odometerDate": "2019-04-01T12:05:05Z",
                    "odometerEnteredBy": "Mark James"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/parts": {
      "post": {
        "tags": [
          "Part"
        ],
        "summary": "Create a new part.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPartRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "get": {
        "tags": [
          "Part"
        ],
        "summary": "Get all parts.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "partNumber",
            "in": "query",
            "description": "The optional part number. If omitted, returns the list of all parts.",
            "schema": {
              "type": "string",
              "description": "The optional part number. If omitted, returns the list of all parts.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiPartRead"
                  }
                },
                "example": [
                  {
                    "id": "824c68f1-f553-4841-81f4-2e5982603f55",
                    "isDeleted": false,
                    "partNumber": "OF-2321",
                    "oemPartNumber": "2321-O",
                    "description": "Peterbilt OEM Filter",
                    "name": "Oil Filter",
                    "barCode": "0101110323",
                    "category": "Filters",
                    "categoryId": "e2b0d954-570f-4370-81b4-d6447c5b01e1",
                    "stockUnitOfMeasure": "EA",
                    "stockUnitOfMeasureId": "e341a583-2c6a-4523-8b17-4662cec8c2ca",
                    "purchaseUnitOfMeasure": "EA",
                    "purchaseUnitOfMeasureId": "1f09bc9a-9c16-47ad-88ba-7a765c14c4df",
                    "preferredVendor": ""
                  },
                  {
                    "id": "77cb997d-e425-4c0a-b47e-cb549d1ab69b",
                    "isDeleted": false,
                    "partNumber": "WB-633",
                    "oemPartNumber": "W633",
                    "description": "20inch Blades",
                    "name": "Wiper Blades",
                    "barCode": "0101110343",
                    "category": "Windshield",
                    "categoryId": "382d1a74-ce4e-456d-ab89-ba49a2c1c509",
                    "stockUnitOfMeasure": "EA",
                    "stockUnitOfMeasureId": "8ba86ae3-65d5-45b6-b94b-7082d47ebf6a",
                    "purchaseUnitOfMeasure": "EA",
                    "purchaseUnitOfMeasureId": "a4229f9a-d71d-413b-a2cf-8dcce25f481c",
                    "preferredVendor": ""
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/parts/{id}": {
      "put": {
        "tags": [
          "Part"
        ],
        "summary": "Update an existing part.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the part to update.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Id of the part to update.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPartRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/partLocations": {
      "get": {
        "tags": [
          "Part"
        ],
        "summary": "Gets part locations.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "The optional business unit id. If omitted, returns the list of part locations for all the business units.",
            "schema": {
              "type": "string",
              "description": "The optional business unit id. If omitted, returns the list of part locations for all the business units.",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiPartLocationRead"
                  }
                },
                "example": [
                  {
                    "id": "fa60eabb-2ee6-4159-895b-c092a7a08167",
                    "businessUnitId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                    "code": "EAST",
                    "description": "East location.",
                    "isDefault": true,
                    "isDeleted": false
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/partCostEntry": {
      "post": {
        "tags": [
          "PartCostEntry"
        ],
        "summary": "Creates a new part cost entry.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartCostEntryCreate"
              },
              "example": {
                "workOrderNumber": 1,
                "entryDate": "2019-03-01T12:05:05Z",
                "amount": 1015.55,
                "estimatedCost": 1000,
                "referenceNumber": "DZ-105:1032",
                "description": "Replacement of CC"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartCostEntryCreate"
              },
              "example": {
                "workOrderNumber": 1,
                "entryDate": "2019-03-01T12:05:05Z",
                "amount": 1015.55,
                "estimatedCost": 1000,
                "referenceNumber": "DZ-105:1032",
                "description": "Replacement of CC"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartCostEntryCreate"
              },
              "example": {
                "workOrderNumber": 1,
                "entryDate": "2019-03-01T12:05:05Z",
                "amount": 1015.55,
                "estimatedCost": 1000,
                "referenceNumber": "DZ-105:1032",
                "description": "Replacement of CC"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPartCostEntryRead"
                },
                "example": {
                  "id": "8c6d9fa3-ea77-48bb-9c42-cca589ee030e",
                  "workOrderNumber": 1,
                  "entryDate": "2019-03-01T12:05:05Z",
                  "amount": 1015.55,
                  "estimatedCost": 1000,
                  "referenceNumber": "DZ-105:1032",
                  "description": "Replacement of CC"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/partCostEntries/{partCostEntryId}/details": {
      "post": {
        "tags": [
          "PartCostEntry"
        ],
        "summary": "Adds a detail to the part cost entry.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "partCostEntryId",
            "in": "path",
            "description": "Part Cost Entry Id for the detail being created.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Part Cost Entry Id for the detail being created.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Details about the part cost entry to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartCostEntryDetailCreate"
              },
              "example": {
                "vendorId": "309dcd94-2c42-43b8-9d71-ed61560a6d2e",
                "vendorCode": "Joseph's Body Shop",
                "partId": "03c479db-ecc2-495e-8a10-51de9ddc730a",
                "partNum": "CC-1250",
                "itemCodeId": 123,
                "amount": 1015.55,
                "estimatedCost": 1000,
                "description": "Catalytic converter assembly"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartCostEntryDetailCreate"
              },
              "example": {
                "vendorId": "309dcd94-2c42-43b8-9d71-ed61560a6d2e",
                "vendorCode": "Joseph's Body Shop",
                "partId": "03c479db-ecc2-495e-8a10-51de9ddc730a",
                "partNum": "CC-1250",
                "itemCodeId": 123,
                "amount": 1015.55,
                "estimatedCost": 1000,
                "description": "Catalytic converter assembly"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartCostEntryDetailCreate"
              },
              "example": {
                "vendorId": "309dcd94-2c42-43b8-9d71-ed61560a6d2e",
                "vendorCode": "Joseph's Body Shop",
                "partId": "03c479db-ecc2-495e-8a10-51de9ddc730a",
                "partNum": "CC-1250",
                "itemCodeId": 123,
                "amount": 1015.55,
                "estimatedCost": 1000,
                "description": "Catalytic converter assembly"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPartCostEntryDetailRead"
                },
                "example": {
                  "id": "d1128e75-34c6-4877-b168-9d84a914f275",
                  "vendorId": "309dcd94-2c42-43b8-9d71-ed61560a6d2e",
                  "vendorCode": "Joseph's Body Shop",
                  "partId": "03c479db-ecc2-495e-8a10-51de9ddc730a",
                  "partNum": "CC-1250",
                  "itemCodeId": 123,
                  "amount": 1015.55,
                  "estimatedCost": 1000,
                  "description": "Catalytic converter assembly"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/partInventory": {
      "get": {
        "tags": [
          "PartInventory"
        ],
        "summary": "Gets inventory for a specific part.",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "The business unit guid. Required",
            "schema": {
              "type": "string",
              "description": "The business unit guid. Required",
              "format": "uuid"
            }
          },
          {
            "name": "partNum",
            "in": "query",
            "description": "The part number. Required",
            "schema": {
              "type": "string",
              "description": "The part number. Required",
              "nullable": true
            }
          },
          {
            "name": "partLocationCode",
            "in": "query",
            "description": "The part location code. If no part location is provided, returns quantities for the entire business unit",
            "schema": {
              "type": "string",
              "description": "The part location code. If no part location is provided, returns quantities for the entire business unit",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPartInventoryReadApiPagedResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartInventory"
        ],
        "summary": "Sets on hand quantity for part at part location to specified quantity.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartInventoryCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartInventoryCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPartInventoryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPartInventoryReadApiPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/purchaseOrders": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get all purchase orders.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "approvalStatus",
            "in": "query",
            "description": "The approval status to filter purchase orders by.",
            "schema": {
              "$ref": "#/components/schemas/PurchaseOrderApprovalStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiPurchaseOrderRead"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/purchaseOrder": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Creates a new purchase order.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPurchaseOrderCreate"
              },
              "example": {
                "businessUnitId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                "dateIssued": "2019-01-21",
                "vendorId": "9431a6b9-959e-4e59-b3d7-cbd9b3786f73",
                "referenceNumber": "ref123",
                "taxRatePercent": 8.25,
                "estimatedTotal": 1000.5,
                "notes": [
                  {
                    "note": "PO Note."
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPurchaseOrderCreate"
              },
              "example": {
                "businessUnitId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                "dateIssued": "2019-01-21",
                "vendorId": "9431a6b9-959e-4e59-b3d7-cbd9b3786f73",
                "referenceNumber": "ref123",
                "taxRatePercent": 8.25,
                "estimatedTotal": 1000.5,
                "notes": [
                  {
                    "note": "PO Note."
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPurchaseOrderCreate"
              },
              "example": {
                "businessUnitId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                "dateIssued": "2019-01-21",
                "vendorId": "9431a6b9-959e-4e59-b3d7-cbd9b3786f73",
                "referenceNumber": "ref123",
                "taxRatePercent": 8.25,
                "estimatedTotal": 1000.5,
                "notes": [
                  {
                    "note": "PO Note."
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPurchaseOrderRead"
                },
                "example": {
                  "id": "03de8151-cbe4-4cc8-83b5-87c0d9837377",
                  "businessUnitID": "42686835-dd20-4187-8429-39bcea2b1cfc",
                  "purchaseOrderNumber": 28,
                  "dateIssued": "2019-01-21T00:00:00Z",
                  "vendorId": "d21e0cfc-94c6-42db-9d34-0d1713acaacb",
                  "referenceNumber": "ref123",
                  "taxRatePercent": 8.25,
                  "estimatedTotal": 1000.5,
                  "approvalStatus": "unreviewed",
                  "notes": [
                    {
                      "id": "4a5a7654-7cd4-4ac9-928a-ce80093557f4",
                      "createdBy": "Timothy Smalls",
                      "createdDate": "2019-01-21T00:00:00Z",
                      "modifiedBy": "Bill Simmons",
                      "modifiedDate": "2020-03-14T00:00:00Z",
                      "note": "PO Note."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/purchaseOrders/{purchaseOrderId}/details": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Gets purchase order details by purchase order id.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "description": "The purchase order id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The purchase order id.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiPurchaseOrderDetailRead"
                  }
                },
                "example": [
                  {
                    "id": "a40b69d5-a8f7-4985-8ba5-8523b72f73e6",
                    "purchaseOrderId": "96394b59-c55c-4c1c-b058-57df85eef9f1",
                    "orderQuantityReceived": 0,
                    "taxAmount": 0,
                    "totalCost": 50,
                    "type": "details",
                    "approvalStatus": "unreviewed",
                    "partId": "bf671cfe-0e0d-406f-a96c-bf055319e754",
                    "vendorPartNumber": "EPW-19",
                    "purchaseUnitOfMeasureId": "e5f4d716-7ce4-4f38-bef3-8d10704e901f",
                    "partLocationId": "42686835-dd20-4187-8429-39bcea2b1cfc",
                    "quantity": 5,
                    "unitPrice": 10,
                    "isTaxable": false,
                    "chargeItem": ""
                  },
                  {
                    "id": "45d87f09-0174-4654-9acf-9585fe7138b9",
                    "purchaseOrderId": "96394b59-c55c-4c1c-b058-57df85eef9f1",
                    "orderQuantityReceived": 0,
                    "taxAmount": 0,
                    "totalCost": 15,
                    "type": "details",
                    "approvalStatus": "unreviewed",
                    "partId": "09abcb66-cf94-4932-a156-bba0951c4c25",
                    "vendorPartNumber": "XAEA-12",
                    "purchaseUnitOfMeasureId": "cdace59a-e7c3-491e-aabd-0fbfc85e697b",
                    "quantity": 5,
                    "unitPrice": 3,
                    "isTaxable": false,
                    "chargeItem": ""
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Adds a detail to the purchase order.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "description": "Purchase Order Id for the detail being created.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Purchase Order Id for the detail being created.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Details about the purchase order to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPurchaseOrderDetailCreate"
              },
              "example": {
                "partId": "7982a4cd-242c-47a1-82ba-47f5d2c8be99",
                "vendorPartNumber": "QW-32X",
                "purchaseUnitOfMeasureId": "b1109c99-da34-4f66-9c44-036c2f958bf6",
                "partLocationId": "f3227c9d-d482-4faa-bd9e-34aeb7baef2e",
                "quantity": 3,
                "unitPrice": 9.25,
                "isTaxable": true,
                "chargeItem": "CHARGE_ITEM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPurchaseOrderDetailCreate"
              },
              "example": {
                "partId": "7982a4cd-242c-47a1-82ba-47f5d2c8be99",
                "vendorPartNumber": "QW-32X",
                "purchaseUnitOfMeasureId": "b1109c99-da34-4f66-9c44-036c2f958bf6",
                "partLocationId": "f3227c9d-d482-4faa-bd9e-34aeb7baef2e",
                "quantity": 3,
                "unitPrice": 9.25,
                "isTaxable": true,
                "chargeItem": "CHARGE_ITEM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPurchaseOrderDetailCreate"
              },
              "example": {
                "partId": "7982a4cd-242c-47a1-82ba-47f5d2c8be99",
                "vendorPartNumber": "QW-32X",
                "purchaseUnitOfMeasureId": "b1109c99-da34-4f66-9c44-036c2f958bf6",
                "partLocationId": "f3227c9d-d482-4faa-bd9e-34aeb7baef2e",
                "quantity": 3,
                "unitPrice": 9.25,
                "isTaxable": true,
                "chargeItem": "CHARGE_ITEM"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPurchaseOrderDetailRead"
                },
                "example": {
                  "id": "96a03ce9-c24e-4b47-b90f-84fde8c88233",
                  "purchaseOrderId": "96a03ce9-c24e-4b47-b90f-84fde8c88233",
                  "orderQuantityReceived": 2,
                  "taxAmount": 15.55,
                  "totalCost": 59.1,
                  "type": "details",
                  "approvalStatus": "unreviewed",
                  "partId": "138bc3da-efda-4c33-9416-66bfe44b6f87",
                  "vendorPartNumber": "abc",
                  "purchaseUnitOfMeasureId": "e341a583-2c6a-4523-8b17-4662cec8c2ca",
                  "partLocationId": "96a03ce9-c24e-4b47-b90f-84fde8c88233",
                  "quantity": 2,
                  "unitPrice": 29.55,
                  "isTaxable": true,
                  "chargeItem": "Charge item"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/purchaseOrders/{purchaseOrderId}/notes": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Creates a new purchase order note.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "description": "The purchase order id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The purchase order id.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiNoteCreate"
              },
              "example": {
                "note": "All service recalls completed."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiNoteCreate"
              },
              "example": {
                "note": "All service recalls completed."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiNoteCreate"
              },
              "example": {
                "note": "All service recalls completed."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiNoteRead"
                },
                "example": {
                  "id": "47827b28-008a-46f2-88e1-bf286df33842",
                  "createdBy": "John Collins",
                  "createdDate": "2020-04-20T00:00:00Z",
                  "modifiedBy": "Sam Johnson",
                  "modifiedDate": "2020-05-20T00:00:00Z",
                  "note": "All service recalls completed."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/subletVendorCostEntry": {
      "post": {
        "tags": [
          "SubletVendorCostEntry"
        ],
        "summary": "Creates a new sublet vendor cost entry.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSubletVendorCostEntryCreate"
              },
              "example": {
                "workOrderNumber": 1,
                "entryDate": "2019-03-01T12:05:05Z",
                "amount": 1000.5,
                "estimatedCost": 1000.5,
                "referenceNumber": "DZ-101:F2123",
                "description": "Outsourcing the labor to Dave at Acme Auto Repair."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSubletVendorCostEntryCreate"
              },
              "example": {
                "workOrderNumber": 1,
                "entryDate": "2019-03-01T12:05:05Z",
                "amount": 1000.5,
                "estimatedCost": 1000.5,
                "referenceNumber": "DZ-101:F2123",
                "description": "Outsourcing the labor to Dave at Acme Auto Repair."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSubletVendorCostEntryCreate"
              },
              "example": {
                "workOrderNumber": 1,
                "entryDate": "2019-03-01T12:05:05Z",
                "amount": 1000.5,
                "estimatedCost": 1000.5,
                "referenceNumber": "DZ-101:F2123",
                "description": "Outsourcing the labor to Dave at Acme Auto Repair."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSubletVendorCostEntryRead"
                },
                "example": {
                  "id": "d65a1bc3-2363-4c43-97e9-286131830f5c",
                  "workOrderNumber": 1,
                  "entryDate": "2019-03-01T12:05:05Z",
                  "amount": 1000.5,
                  "estimatedCost": 1000.5,
                  "referenceNumber": "DZ-101:F2123",
                  "description": "Outsourcing the labor to Dave at Acme Auto Repair."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/subletVendorCostEntries/{subletVendorCostEntryId}/details": {
      "post": {
        "tags": [
          "SubletVendorCostEntry"
        ],
        "summary": "Adds a detail to the sublet vendor cost entry.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "subletVendorCostEntryId",
            "in": "path",
            "description": "Sublet Vendor Cost Entry Id for the detail being created.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sublet Vendor Cost Entry Id for the detail being created.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Details about the sublet vendor cost entry to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSubletVendorCostEntryDetailCreate"
              },
              "example": {
                "vendorId": "309dcd94-2c42-43b8-9d71-ed61560a6d2e",
                "amount": 375.9,
                "estimatedCost": 400,
                "description": "Catalytic converter replacement labor."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSubletVendorCostEntryDetailCreate"
              },
              "example": {
                "vendorId": "309dcd94-2c42-43b8-9d71-ed61560a6d2e",
                "amount": 375.9,
                "estimatedCost": 400,
                "description": "Catalytic converter replacement labor."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSubletVendorCostEntryDetailCreate"
              },
              "example": {
                "vendorId": "309dcd94-2c42-43b8-9d71-ed61560a6d2e",
                "amount": 375.9,
                "estimatedCost": 400,
                "description": "Catalytic converter replacement labor."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSubletVendorCostEntryDetailRead"
                },
                "example": {
                  "id": "286e9aea-2c04-40cd-aa01-289defc73a65",
                  "vendorId": "309dcd94-2c42-43b8-9d71-ed61560a6d2e",
                  "amount": 375.9,
                  "estimatedCost": 400,
                  "description": "Catalytic converter replacement labor."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/tags": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Returns all tags.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiTagRead"
                  }
                },
                "example": [
                  {
                    "id": "12c7e9ea-6d67-4f43-9d67-bbf3117d07bd",
                    "code": "Damage / Repair"
                  },
                  {
                    "id": "e71683d7-44e7-41ec-9876-faff956c1ebc",
                    "code": "Rental"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/timeCards": {
      "get": {
        "tags": [
          "TimeCard"
        ],
        "summary": "Retrieve timecard information for one or all employees.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Optional. Filter time cards based on status.",
            "schema": {
              "$ref": "#/components/schemas/TimeCardStatus"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Optional. The number of results to return. Maximum count is 1000 records. Defaults to 100.",
            "schema": {
              "type": "integer",
              "description": "Optional. The number of results to return. Maximum count is 1000 records. Defaults to 100.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Optional. The point at which to start pagination. Defaults to 1.",
            "schema": {
              "type": "integer",
              "description": "Optional. The point at which to start pagination. Defaults to 1.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Optional. Specifies starting date for time card results.",
            "schema": {
              "type": "string",
              "description": "Optional. Specifies starting date for time card results.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Optional. Specifies end date for time card results.",
            "schema": {
              "type": "string",
              "description": "Optional. Specifies end date for time card results.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "mechanicId",
            "in": "query",
            "description": "Optional. Filter out all time cards except the specified mechanic.",
            "schema": {
              "type": "string",
              "description": "Optional. Filter out all time cards except the specified mechanic.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "includeShiftDetails",
            "in": "query",
            "description": "Optional. Include additional shift details (if available) for each time card. Defaults to false.",
            "schema": {
              "type": "boolean",
              "description": "Optional. Include additional shift details (if available) for each time card. Defaults to false.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTimeCardReadApiPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/unitOfMeasure": {
      "get": {
        "tags": [
          "UnitOfMeasure"
        ],
        "summary": "Get all units of measure.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiStockUnitOfMeasureRead"
                  }
                },
                "example": [
                  {
                    "id": "8eb48e5a-ae9c-4a15-b331-32255184ff15",
                    "code": "EA",
                    "description": "Each",
                    "isPartDefault": true,
                    "isFluidDefault": false,
                    "isDeleted": false,
                    "purchaseUnitsOfMeasure": [
                      {
                        "id": "c6db0f19-be79-4df8-b915-cfb2cb9e5af8",
                        "code": "EA",
                        "description": "Each",
                        "stockQuantity": 1,
                        "isPartDefault": true,
                        "isFluidDefault": false,
                        "isDeleted": false
                      }
                    ]
                  },
                  {
                    "id": "dc845d27-3e26-4852-ac22-1af5b024dfcd",
                    "code": "GAL",
                    "description": "Gallons",
                    "isPartDefault": false,
                    "isFluidDefault": false,
                    "isDeleted": false,
                    "purchaseUnitsOfMeasure": [
                      {
                        "id": "274e663b-dce7-4b68-b34d-f872543ab539",
                        "code": "GAL",
                        "description": "Gallon",
                        "stockQuantity": 2.5,
                        "isPartDefault": true,
                        "isFluidDefault": false,
                        "isDeleted": false
                      },
                      {
                        "id": "2e0f0f55-d435-4e14-9488-322efb5337c7",
                        "code": "LIT",
                        "description": "Liter",
                        "stockQuantity": 3.7,
                        "isPartDefault": false,
                        "isFluidDefault": true,
                        "isDeleted": false
                      }
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/vendors": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Returns all vendors.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiVendorRead"
                  }
                },
                "example": [
                  {
                    "id": "309dcd94-2c42-43b8-9d71-ed61560a6d2e",
                    "vendorType": "Fuel, Parts",
                    "name": "Home Depot",
                    "vendorNum": "CAT-01",
                    "isDeleted": false,
                    "taxRate": 8.25,
                    "isFuel": true,
                    "isParts": true,
                    "isSublet": true,
                    "isRental": true
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Create a new vendor.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiVendorWrite"
              },
              "example": {
                "name": "Home Depot",
                "vendorNum": "CAT-01",
                "isDeleted": false,
                "taxRate": 8.25,
                "isFuel": true,
                "isParts": true,
                "isSublet": true,
                "isRental": true
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiVendorWrite"
              },
              "example": {
                "name": "Home Depot",
                "vendorNum": "CAT-01",
                "isDeleted": false,
                "taxRate": 8.25,
                "isFuel": true,
                "isParts": true,
                "isSublet": true,
                "isRental": true
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiVendorWrite"
              },
              "example": {
                "name": "Home Depot",
                "vendorNum": "CAT-01",
                "isDeleted": false,
                "taxRate": 8.25,
                "isFuel": true,
                "isParts": true,
                "isSublet": true,
                "isRental": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiVendorRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/vendors/{id}": {
      "put": {
        "tags": [
          "Vendor"
        ],
        "summary": "Update an existing vendor.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The vendor guid.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vendor guid.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiVendorUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiVendorUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiVendorUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiVendorRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/workOrders": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Returns all work orders.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Optionally filter the returned list of work orders by business unit",
            "schema": {
              "type": "string",
              "description": "Optionally filter the returned list of work orders by business unit",
              "format": "uuid"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The total number of records to return. Default: 100. Limit: 1000.",
            "schema": {
              "type": "integer",
              "description": "The total number of records to return. Default: 100. Limit: 1000.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The point at which to start pagination.",
            "schema": {
              "type": "integer",
              "description": "The point at which to start pagination.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "\"workOrderNumber\" or \"statusDate\". Default: workOrderNumber.",
            "schema": {
              "type": "string",
              "description": "\"workOrderNumber\" or \"statusDate\". Default: workOrderNumber.",
              "nullable": true
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "\"asc\" or \"desc\". Default: asc.",
            "schema": {
              "type": "string",
              "description": "\"asc\" or \"desc\". Default: asc.",
              "nullable": true
            }
          },
          {
            "name": "equipmentCode",
            "in": "query",
            "description": "Filters work orders by equipment code.",
            "schema": {
              "type": "string",
              "description": "Filters work orders by equipment code.",
              "nullable": true
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filters work orders by status.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Filters work orders by status.",
              "nullable": true
            }
          },
          {
            "name": "isPreventiveMaintenance",
            "in": "query",
            "description": "Set to true to filter to PM work orders, false to filter to non-PM work orders, and null for all work orders.",
            "schema": {
              "type": "boolean",
              "description": "Set to true to filter to PM work orders, false to filter to non-PM work orders, and null for all work orders.",
              "nullable": true
            }
          },
          {
            "name": "includeNotes",
            "in": "query",
            "description": "If true, the returned ApiWorkOrderRead object will include a list of the work order's notes. Default is false.",
            "schema": {
              "type": "boolean",
              "description": "If true, the returned ApiWorkOrderRead object will include a list of the work order's notes. Default is false.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderReadApiPagedResponse"
                },
                "example": {
                  "count": 2,
                  "prev": 318,
                  "next": 322,
                  "timestamp": 1590769189,
                  "data": [
                    {
                      "id": "e71683d7-44e7-41ec-9876-faff956c1ebc",
                      "businessUnitId": "f4997dc6-a4a0-4d6c-81eb-e15deba9d8a2",
                      "workOrderNumber": 320,
                      "equipmentJobId": "054e9d78-1ca8-4da4-b3fe-bd721d48a1af",
                      "tags": [],
                      "notes": [
                        {
                          "id": "47827b28-008a-46f2-88e1-bf286df33842",
                          "createdBy": "John Collins",
                          "createdDate": "2020-04-20T00:00:00Z",
                          "modifiedBy": "Sam Johnson",
                          "modifiedDate": "2020-05-20T00:00:00Z",
                          "note": "All service recalls completed."
                        }
                      ],
                      "statusDate": "2019-01-21T00:00:00",
                      "isPreventiveMaintenance": true,
                      "equipmentId": "283e5d0a-b4b2-4dc0-b1c5-46b3c5642780",
                      "description": "Replacement treads needed for Jim's excavator.",
                      "status": "Work Complete",
                      "priority": "Low"
                    },
                    {
                      "id": "712b78b5-b10e-4df9-a6ee-1747754abb7b",
                      "businessUnitId": "f4997dc6-a4a0-4d6c-81eb-e15deba9d8a2",
                      "workOrderNumber": 321,
                      "tags": [
                        "Battery"
                      ],
                      "notes": [
                        {
                          "id": "173e4a56-8b1a-4bb3-b508-6a126d9435a4",
                          "createdBy": "Bill Summers",
                          "createdDate": "2019-01-21T00:00:00Z",
                          "modifiedBy": "Hank Crenshaw",
                          "modifiedDate": "2020-01-21T00:00:00Z",
                          "note": "Looks like the batteries need replacing!"
                        }
                      ],
                      "statusDate": "2017-01-21T00:00:00",
                      "isPreventiveMaintenance": false,
                      "jobId": "054e9d78-1ca8-4da4-b3fe-bd721d48a1af",
                      "description": "The batteries have drained on all of the scissor lifts.",
                      "status": "Open",
                      "priority": "High"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Creates a Work Order.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "Optional. If not specified, will create the work order in the authenticated HCSS Apps user's business unit.",
            "schema": {
              "type": "string",
              "description": "Optional. If not specified, will create the work order in the authenticated HCSS Apps user's business unit.",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiWorkOrderCreate"
              },
              "example": {
                "equipmentId": "109381e4-da01-43df-83a9-c6a3f3291e3b",
                "description": "Catalytic converter was stolen.",
                "status": "Open",
                "priority": "Normal",
                "dueDate": "2022-01-15"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiWorkOrderCreate"
              },
              "example": {
                "equipmentId": "109381e4-da01-43df-83a9-c6a3f3291e3b",
                "description": "Catalytic converter was stolen.",
                "status": "Open",
                "priority": "Normal",
                "dueDate": "2022-01-15"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiWorkOrderCreate"
              },
              "example": {
                "equipmentId": "109381e4-da01-43df-83a9-c6a3f3291e3b",
                "description": "Catalytic converter was stolen.",
                "status": "Open",
                "priority": "Normal",
                "dueDate": "2022-01-15"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderRead"
                },
                "example": {
                  "id": "47827b28-008a-46f2-88e1-bf286df33842",
                  "businessUnitId": "f4997dc6-a4a0-4d6c-81eb-e15deba9d8a2",
                  "workOrderNumber": 320,
                  "tags": [
                    "Maintenance"
                  ],
                  "notes": [
                    {
                      "id": "47827b28-008a-46f2-88e1-bf286df33842",
                      "createdBy": "John Collins",
                      "createdDate": "2020-04-20T00:00:00Z",
                      "modifiedBy": "Sam Johnson",
                      "modifiedDate": "2020-05-20T00:00:00Z",
                      "note": "All service recalls completed."
                    }
                  ],
                  "statusDate": "2019-01-21T00:00:00",
                  "isPreventiveMaintenance": true,
                  "shopId": "109381e4-da01-43df-83a9-c6a3f3291e3b",
                  "description": "Clean the west half of the shop.",
                  "status": "Closed",
                  "priority": "High",
                  "dueDate": "2020-04-20"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/workOrders/{id}": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Returns a single work order, based on its Id.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the work order to return.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Id of the work order to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderRead"
                },
                "example": {
                  "id": "47827b28-008a-46f2-88e1-bf286df33842",
                  "businessUnitId": "f4997dc6-a4a0-4d6c-81eb-e15deba9d8a2",
                  "workOrderNumber": 320,
                  "tags": [
                    "Maintenance"
                  ],
                  "notes": [
                    {
                      "id": "47827b28-008a-46f2-88e1-bf286df33842",
                      "createdBy": "John Collins",
                      "createdDate": "2020-04-20T00:00:00Z",
                      "modifiedBy": "Sam Johnson",
                      "modifiedDate": "2020-05-20T00:00:00Z",
                      "note": "All service recalls completed."
                    }
                  ],
                  "statusDate": "2019-01-21T00:00:00",
                  "isPreventiveMaintenance": true,
                  "shopId": "109381e4-da01-43df-83a9-c6a3f3291e3b",
                  "description": "Clean the west half of the shop.",
                  "status": "Closed",
                  "priority": "High",
                  "dueDate": "2020-04-20"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/workOrder/{id}": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Updates a work order by id.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the work order to update and return.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Id of the work order to update and return.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated fields for the work order.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiWorkOrderUpdate"
              },
              "example": {
                "equipmentJobId": "21bea700-39c4-45e6-bd24-cde7bd6997ae",
                "statusID": "c2010820-9bc7-4ba4-9fb3-16ea072086ff"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiWorkOrderUpdate"
              },
              "example": {
                "equipmentJobId": "21bea700-39c4-45e6-bd24-cde7bd6997ae",
                "statusID": "c2010820-9bc7-4ba4-9fb3-16ea072086ff"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiWorkOrderUpdate"
              },
              "example": {
                "equipmentJobId": "21bea700-39c4-45e6-bd24-cde7bd6997ae",
                "statusID": "c2010820-9bc7-4ba4-9fb3-16ea072086ff"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderRead"
                },
                "example": {
                  "id": "47827b28-008a-46f2-88e1-bf286df33842",
                  "businessUnitId": "f4997dc6-a4a0-4d6c-81eb-e15deba9d8a2",
                  "workOrderNumber": 320,
                  "tags": [
                    "Maintenance"
                  ],
                  "notes": [
                    {
                      "id": "47827b28-008a-46f2-88e1-bf286df33842",
                      "createdBy": "John Collins",
                      "createdDate": "2020-04-20T00:00:00Z",
                      "modifiedBy": "Sam Johnson",
                      "modifiedDate": "2020-05-20T00:00:00Z",
                      "note": "All service recalls completed."
                    }
                  ],
                  "statusDate": "2019-01-21T00:00:00",
                  "isPreventiveMaintenance": true,
                  "shopId": "109381e4-da01-43df-83a9-c6a3f3291e3b",
                  "description": "Clean the west half of the shop.",
                  "status": "Closed",
                  "priority": "High",
                  "dueDate": "2020-04-20"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/workOrders/{workOrderId}/notes": {
      "post": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Creates a new work order note.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "description": "The work order id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The work order id.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiNoteCreate"
              },
              "example": {
                "note": "All service recalls completed."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiNoteCreate"
              },
              "example": {
                "note": "All service recalls completed."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiNoteCreate"
              },
              "example": {
                "note": "All service recalls completed."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiNoteRead"
                },
                "example": {
                  "id": "47827b28-008a-46f2-88e1-bf286df33842",
                  "createdBy": "John Collins",
                  "createdDate": "2020-04-20T00:00:00Z",
                  "modifiedBy": "Sam Johnson",
                  "modifiedDate": "2020-05-20T00:00:00Z",
                  "note": "All service recalls completed."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    },
    "/api/v1/workOrderPurchases": {
      "get": {
        "tags": [
          "WorkOrderPurchase"
        ],
        "summary": "Gets work order purchases.",
        "parameters": [
          {
            "name": "workOrderNumber",
            "in": "query",
            "description": "Filter by work order number",
            "schema": {
              "type": "integer",
              "description": "Filter by work order number",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The total number of records to return. Default: 100. Limit: 1000.",
            "schema": {
              "type": "integer",
              "description": "The total number of records to return. Default: 100. Limit: 1000.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The point at which to start pagination. Returned as \"next\" or \"prev\" in the response.",
            "schema": {
              "type": "integer",
              "description": "The point at which to start pagination. Returned as \"next\" or \"prev\" in the response.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "minModifiedTimestamp",
            "in": "query",
            "description": "Only include purchases that have been modified after the specified datetime",
            "schema": {
              "type": "string",
              "description": "Only include purchases that have been modified after the specified datetime",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "minPurchaseDate",
            "in": "query",
            "description": "Only include purchases with a purchase date greater than the specified datetime",
            "schema": {
              "type": "string",
              "description": "Only include purchases with a purchase date greater than the specified datetime",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "isReconciled",
            "in": "query",
            "description": "Filter to purchases that are either reconciled or have not yet been reconciled.",
            "schema": {
              "type": "boolean",
              "description": "Filter to purchases that are either reconciled or have not yet been reconciled.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderPurchaseReadApiPagedResponse"
                },
                "example": {
                  "count": 1,
                  "prev": 6,
                  "next": 10,
                  "timestamp": 1590769189,
                  "data": [
                    {
                      "id": "936b3d1c-627b-4996-8477-50bb73af7a01",
                      "workOrderNumber": 123,
                      "vendorCode": "Autozone",
                      "referenceNumber": "Invoice #875",
                      "partNumber": "PH9372",
                      "partDescription": "Oil Filter 9372",
                      "vendorPartNumber": "PH9372",
                      "itemCode": "Engine:Filters",
                      "unitOfMeasure": "Ea",
                      "qtyOrdered": 56,
                      "qtyUsed": 1,
                      "purchaseDate": "2021-06-07T00:00:00Z",
                      "equipmentCode": "10-100",
                      "modifiedTimestamp": "2021-06-07T05:42:32Z",
                      "isReconciled": true,
                      "inventoryLocation": "SHOP 1"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderSchedules": {
      "get": {
        "tags": [
          "WorkOrderSchedule"
        ],
        "summary": "Gets work order schedules.",
        "description": "For help with authorization, see https://developer.hcssapps.com/getting-started/request-tokens",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "The total number of records to return. Default: 100. Limit: 1000.",
            "schema": {
              "type": "integer",
              "description": "The total number of records to return. Default: 100. Limit: 1000.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The point at which to start pagination. Returned as \"next\" or \"prev\" in the response.",
            "schema": {
              "type": "integer",
              "description": "The point at which to start pagination. Returned as \"next\" or \"prev\" in the response.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "workOrderNumber",
            "in": "query",
            "description": "Filter by work order number",
            "schema": {
              "type": "integer",
              "description": "Filter by work order number",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "mechanic_Id",
            "in": "query",
            "description": "Filter by mechanic id",
            "schema": {
              "type": "string",
              "description": "Filter by mechanic id",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "subletVendor_Id",
            "in": "query",
            "description": "Filter by sublet vendor id",
            "schema": {
              "type": "string",
              "description": "Filter by sublet vendor id",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "minimum_ScheduledDate",
            "in": "query",
            "description": "Minimum scheduled date filter",
            "schema": {
              "type": "string",
              "description": "Minimum scheduled date filter",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "maximum_ScheduledDate",
            "in": "query",
            "description": "Maximum scheduled date filter",
            "schema": {
              "type": "string",
              "description": "Maximum scheduled date filter",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiWorkOrderScheduleReadApiPagedResponse"
                },
                "example": {
                  "count": 2,
                  "prev": 6,
                  "next": 10,
                  "timestamp": 1590769189,
                  "data": [
                    {
                      "id": "936b3d1c-627b-4996-8477-50bb73af7a01",
                      "workOrderNumber": 123,
                      "workOrder_ID": "5a472e1f-d1fe-4152-93d4-4fb1983d2419",
                      "scheduledDate": "2019-06-07T00:00:00Z",
                      "workComplete": false,
                      "mechanic_ID": "358bfb7d-f425-4c7d-84ac-f5fce7a69f9c",
                      "mechanic_FirstName": "William",
                      "mechanic_LastName": "Wallace",
                      "vendor_ID": "bc45b3ba-acc9-45ef-8662-6200d55e4b89",
                      "vendor_Name": "The Good Vendor"
                    },
                    {
                      "id": "c756afb1-0492-4c21-9b8f-2dcc9e2b893d",
                      "workOrderNumber": 124,
                      "workOrder_ID": "94d2f230-db08-447f-810a-b1b9951e2116",
                      "scheduledDate": "2019-06-07T00:00:00Z",
                      "workComplete": false,
                      "mechanic_ID": "f7c1d6c3-aeb1-4185-96f2-5cd791ff5ae6",
                      "mechanic_FirstName": "Jackie",
                      "mechanic_LastName": "Chan",
                      "vendor_ID": "bc45b3ba-acc9-45ef-8662-6200d55e4b89",
                      "vendor_Name": "The Good Vendor"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. See https://developer.hcssapps.com/getting-started/troubleshoot-unauthorized for more information."
          },
          "403": {
            "description": "Forbidden. See https://developer.hcssapps.com/getting-started/troubleshoot-forbidden for more information."
          },
          "404": {
            "description": "Endpoint Not Found. This response may occur if the on-premises E360 service does not exist or is not currently running."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiBusinessUnitRead": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The business unit id.",
            "format": "uuid",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The code.",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "An optional description.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a Business Unit object returned by the API."
      },
      "ApiFuelCostRead": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "The job id. Returns as empty guid for costs where a job isn't specified.",
            "format": "uuid",
            "readOnly": true
          },
          "jobCode": {
            "type": "string",
            "description": "The job code.",
            "nullable": true,
            "readOnly": true
          },
          "totalFuelCost": {
            "type": "number",
            "description": "Total fuel cost, including both Dispenses and Direct Fluid Purchases.",
            "format": "double",
            "readOnly": true
          }
        },
        "description": "A representation of a Fuel Cost object returned by the API."
      },
      "ApiWorkOrderCostRead": {
        "type": "object",
        "properties": {
          "jobCode": {
            "type": "string",
            "description": "The job to which the work order costs belong.",
            "nullable": true,
            "readOnly": true
          },
          "laborCost": {
            "type": "number",
            "description": "The total labor cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "estimatedLaborCost": {
            "type": "number",
            "description": "The total estimated labor cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "partCost": {
            "type": "number",
            "description": "The total parts cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "estimatedPartCost": {
            "type": "number",
            "description": "The total estimated parts cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "otherCost": {
            "type": "number",
            "description": "The total sublet vendor cost and other cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "estimatedOtherCost": {
            "type": "number",
            "description": "The total estimated sublet vendor and other cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "totalCost": {
            "type": "number",
            "description": "The sum of labor, part, and sublet vendor and other costs across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "estimatedTotalCost": {
            "type": "number",
            "description": "The sum of estimated labor, part, sublet vendor and other costs across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          }
        },
        "description": "A representation of a Work Order Cost object returned by the API."
      },
      "ApiWorkOrderCostExtendedRead": {
        "type": "object",
        "properties": {
          "workOrderNumber": {
            "type": "integer",
            "description": "The work order number to which the work order costs belong.",
            "format": "int32",
            "readOnly": true
          },
          "workOrderDescription": {
            "type": "string",
            "description": "The request description to which the work order costs belong.",
            "nullable": true,
            "readOnly": true
          },
          "workOrderCreatedDate": {
            "type": "string",
            "description": "The work order creation date to which the work order costs belong.",
            "format": "date-time",
            "readOnly": true
          },
          "workOrderStatusCode": {
            "type": "string",
            "description": "The work order status to which the work order costs belong.",
            "nullable": true,
            "readOnly": true
          },
          "hasWorkOrderDamageTag": {
            "type": "boolean",
            "description": "The value indicating if work order has damage tag to which the work order costs belong.",
            "readOnly": true
          },
          "jobCode": {
            "type": "string",
            "description": "The job to which the work order costs belong.",
            "nullable": true,
            "readOnly": true
          },
          "laborCost": {
            "type": "number",
            "description": "The total labor cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "partCost": {
            "type": "number",
            "description": "The total parts cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "otherCost": {
            "type": "number",
            "description": "The total sublet vendor and other cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "totalCost": {
            "type": "number",
            "description": "The sum of labor, part, and sublet vendor and other costs across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "estimatedLaborCost": {
            "type": "number",
            "description": "The total estimated labor cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "estimatedPartCost": {
            "type": "number",
            "description": "The total estimated parts cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "estimatedOtherCost": {
            "type": "number",
            "description": "The total estimated sublet vendor and other cost across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          },
          "estimatedTotalCost": {
            "type": "number",
            "description": "The sum of estimated labor, part, and sublet vendor and other costs across all work orders filtered by the given jobCode, equipmentId, or tag.",
            "format": "double",
            "readOnly": true
          }
        },
        "description": "A representation of a Work Order Cost Extended object returned by the API."
      },
      "ApiWorkOrderCostExtendedReadApiPagedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of records within the returned dataset.",
            "format": "int32",
            "readOnly": true
          },
          "prev": {
            "type": "integer",
            "description": "The integer value that will return the previous {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "next": {
            "type": "integer",
            "description": "The integer value that will return the next {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "integer",
            "description": "A UTC, unix timestamp of the time of the request.",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiWorkOrderCostExtendedRead"
            },
            "description": "The returned IEnumerable<typeparamref name=\"T\" /> results.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a cursor paginated object returned by the API."
      },
      "ApiCustomFieldRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID associated with the custom field record.",
            "format": "uuid",
            "readOnly": true
          },
          "customFieldType": {
            "type": "string",
            "description": "The type of custom field record (e.g. Equipment, Employee, Location, etc.).",
            "nullable": true,
            "readOnly": true
          },
          "customFieldName": {
            "type": "string",
            "description": "The custom field category name associated with the custom field record.",
            "nullable": true,
            "readOnly": true
          },
          "customFieldCategoryId": {
            "type": "integer",
            "description": "The unique integer associated with the custom field category.",
            "format": "int32",
            "readOnly": true
          },
          "entityId": {
            "type": "integer",
            "description": "The integer key associated with the target.",
            "format": "int32"
          },
          "entityGuid": {
            "type": "string",
            "description": "The ID associated with the target.",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The value assigned to the custom field record.",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ApiCustomFieldCreate": {
        "required": [
          "customFieldCategoryId",
          "entityGuid",
          "value"
        ],
        "type": "object",
        "properties": {
          "customFieldCategoryId": {
            "type": "integer",
            "description": "The custom field category ID the custom field record is being created for.",
            "format": "int32"
          },
          "entityGuid": {
            "type": "string",
            "description": "The ID of the target the custom field record is being created for.",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "description": "The value being assigned to the custom field record."
          }
        }
      },
      "CustomFieldCategoryTypeEnum": {
        "enum": [
          "equipment",
          "part",
          "vendor",
          "workOrder",
          "purchasing",
          "receiving",
          "employee",
          "fluidContainer",
          "fluid",
          "job",
          "shop",
          "location",
          "payClass"
        ],
        "type": "string"
      },
      "ApiCustomFieldCategoriesRead": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "fieldName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "entityName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dataType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ApiCustomFieldListRead": {
        "type": "object",
        "properties": {
          "customFieldType": {
            "type": "string",
            "description": "The type of custom field record (e.g. Equipment, Employee, Location, etc.).",
            "nullable": true,
            "readOnly": true
          },
          "customFieldName": {
            "type": "string",
            "description": "The custom field category name associated with the custom field record.",
            "nullable": true,
            "readOnly": true
          },
          "customFieldCategoryId": {
            "type": "integer",
            "description": "The unique integer associated with the custom field category.",
            "format": "int32",
            "readOnly": true
          },
          "listOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available options for custom field record of type List.",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ApiAddressCreate": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "description": "Address line 1.",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "description": "Address line 2.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Address City.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Address State.",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "description": "Address Zip Code.",
            "nullable": true
          }
        }
      },
      "ApiEmployeeRead": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The guid of the employee record.",
            "format": "uuid",
            "readOnly": true
          },
          "employeeId": {
            "type": "integer",
            "description": "The integer ID (or \"Legacy Key\") of the employee record.",
            "format": "int32",
            "readOnly": true
          },
          "businessUnitId": {
            "type": "string",
            "description": "The employee's business unit ID. Omitting this field will default to the business unit associated with the user performing the call.",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "description": "The employee's Code.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The employee's first name."
          },
          "lastName": {
            "type": "string",
            "description": "The employee's last name."
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of assigned employee type(s).",
            "nullable": true
          },
          "payclass": {
            "type": "string",
            "description": "The employee's payclass.",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/ApiAddressCreate"
          },
          "hireDate": {
            "type": "string",
            "description": "The employeees hire date\r\nvalue is the server time.",
            "format": "date-time",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "description": "The employee's mobile phone number.",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "description": "The employee's home phone number.",
            "nullable": true
          },
          "officePhone": {
            "type": "string",
            "description": "The employee's office phone number.",
            "nullable": true
          },
          "homeEmail": {
            "type": "string",
            "description": "The employee's home email.",
            "nullable": true
          },
          "officeEmail": {
            "type": "string",
            "description": "The employee's office email.",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "The employee's region code.",
            "nullable": true
          },
          "division": {
            "type": "string",
            "description": "The employee's division code.",
            "nullable": true
          },
          "accountingCode": {
            "type": "string",
            "description": "The employee's accounting code.",
            "nullable": true
          },
          "onLoanBusinessUnitId": {
            "type": "string",
            "description": "The ID associated with the business unit the employee is currently on-loan to.",
            "format": "uuid",
            "nullable": true
          }
        },
        "description": "A representation of an Employee object returned by the API."
      },
      "ApiEmployeeCreate": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "businessUnitId": {
            "type": "string",
            "description": "The employee's business unit ID. Omitting this field will default to the business unit associated with the user performing the call.",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "description": "The employee's Code.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The employee's first name."
          },
          "lastName": {
            "type": "string",
            "description": "The employee's last name."
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of assigned employee type(s).",
            "nullable": true
          },
          "payclass": {
            "type": "string",
            "description": "The employee's payclass.",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/ApiAddressCreate"
          },
          "hireDate": {
            "type": "string",
            "description": "The employeees hire date\r\nvalue is the server time.",
            "format": "date-time",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "description": "The employee's mobile phone number.",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "description": "The employee's home phone number.",
            "nullable": true
          },
          "officePhone": {
            "type": "string",
            "description": "The employee's office phone number.",
            "nullable": true
          },
          "homeEmail": {
            "type": "string",
            "description": "The employee's home email.",
            "nullable": true
          },
          "officeEmail": {
            "type": "string",
            "description": "The employee's office email.",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "The employee's region code.",
            "nullable": true
          },
          "division": {
            "type": "string",
            "description": "The employee's division code.",
            "nullable": true
          },
          "accountingCode": {
            "type": "string",
            "description": "The employee's accounting code.",
            "nullable": true
          },
          "onLoanBusinessUnitId": {
            "type": "string",
            "description": "The ID associated with the business unit the employee is currently on-loan to.",
            "format": "uuid",
            "nullable": true
          }
        },
        "description": "A representation of an Employee object to be created by the API."
      },
      "ApiEmployeeUpdate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The employee's Code.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The employee's first name.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The employee's last name.",
            "nullable": true
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of assigned employee type(s).",
            "nullable": true
          },
          "payclass": {
            "type": "string",
            "description": "The employee's payclass.",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/ApiAddressCreate"
          },
          "hireDate": {
            "type": "string",
            "description": "The employeees hire date\r\nvalue is the server time.",
            "format": "date-time",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "description": "The employee's mobile phone number.",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "description": "The employee's home phone number.",
            "nullable": true
          },
          "officePhone": {
            "type": "string",
            "description": "The employee's office phone number.",
            "nullable": true
          },
          "homeEmail": {
            "type": "string",
            "description": "The employee's home email.",
            "nullable": true
          },
          "officeEmail": {
            "type": "string",
            "description": "The employee's office email.",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "The employee's region code.",
            "nullable": true
          },
          "division": {
            "type": "string",
            "description": "The employee's division code.",
            "nullable": true
          },
          "accountingCode": {
            "type": "string",
            "description": "The employee's accounting code.",
            "nullable": true
          },
          "onLoanBusinessUnitId": {
            "type": "string",
            "description": "The ID associated with the business unit the employee is currently on-loan to.",
            "format": "uuid",
            "nullable": true
          }
        },
        "description": "A representation of an Employee object to be updated by the API."
      },
      "ApiEquipmentRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The guid of the equipment record.",
            "format": "uuid",
            "readOnly": true
          },
          "equipmentId": {
            "type": "integer",
            "description": "The integer id of the equipment record.",
            "format": "int32",
            "readOnly": true
          },
          "businessUnitId": {
            "type": "string",
            "description": "The equipment's business unit guid.",
            "format": "uuid",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The equipment's code.",
            "nullable": true,
            "readOnly": true
          },
          "equipmentType": {
            "type": "string",
            "description": "The equipment's type name.",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "A description of the equipment.",
            "nullable": true,
            "readOnly": true
          },
          "accountingCode": {
            "type": "string",
            "description": "Equipment Accounting Code",
            "nullable": true
          },
          "make": {
            "type": "string",
            "description": "The equipment's make.",
            "nullable": true,
            "readOnly": true
          },
          "model": {
            "type": "string",
            "description": "The equipment's model.",
            "nullable": true,
            "readOnly": true
          },
          "year": {
            "type": "integer",
            "description": "The equipment's year.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "vin": {
            "type": "string",
            "description": "The equipment's VIN.",
            "nullable": true,
            "readOnly": true
          },
          "serialNo": {
            "type": "string",
            "description": "The equipment's serial number.",
            "nullable": true,
            "readOnly": true
          },
          "hourMeter": {
            "type": "integer",
            "description": "If initialized, the most recent hour reading.",
            "format": "int32",
            "readOnly": true
          },
          "hourMeterDate": {
            "type": "string",
            "description": "If initialized, the most recent hour reading date.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "odometer": {
            "type": "integer",
            "description": "If initialized, the most recent odometer reading .",
            "format": "int32",
            "readOnly": true
          },
          "odometerDate": {
            "type": "string",
            "description": "If initialized, the most recent odometer reading date.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "imageUrl": {
            "type": "string",
            "description": "The full URL of the equipment's image at Equipment360's document storage endpoint. Can be retrieved with a valid HCSS Apps access token.",
            "nullable": true,
            "readOnly": true
          },
          "region": {
            "type": "string",
            "description": "The equipment's current region.",
            "nullable": true,
            "readOnly": true
          },
          "division": {
            "type": "string",
            "description": "The equipment's current division.",
            "nullable": true,
            "readOnly": true
          },
          "weight": {
            "type": "number",
            "description": "The equipment's unloaded weight.",
            "format": "double",
            "readOnly": true
          },
          "length": {
            "type": "number",
            "description": "The equipment's length.",
            "format": "double",
            "readOnly": true
          },
          "width": {
            "type": "number",
            "description": "The equipment's length.",
            "format": "double",
            "readOnly": true
          },
          "height": {
            "type": "number",
            "description": "The equipment's height.",
            "format": "double",
            "readOnly": true
          },
          "numberAxles": {
            "type": "integer",
            "description": "Number of axles on the equipment.",
            "format": "int32",
            "readOnly": true
          },
          "tireSize": {
            "type": "string",
            "description": "Tire Size Front / Rear",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Status",
            "nullable": true,
            "readOnly": true
          },
          "enabled": {
            "type": "string",
            "description": "Enabled? (Y/N)",
            "nullable": true,
            "readOnly": true
          },
          "jobCode": {
            "type": "string",
            "description": "Job code associated with the equipment.",
            "nullable": true
          },
          "locationName": {
            "type": "string",
            "description": "Location associated with the equipment.",
            "nullable": true
          },
          "onLoanBusinessUnitID": {
            "type": "string",
            "description": "The ID associated with the Business Unit that the equipment is currently on-loan to.",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": "A representation of an Equipment object returned by the API."
      },
      "ApiEquipmentReadApiPagedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of records within the returned dataset.",
            "format": "int32",
            "readOnly": true
          },
          "prev": {
            "type": "integer",
            "description": "The integer value that will return the previous {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "next": {
            "type": "integer",
            "description": "The integer value that will return the next {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "integer",
            "description": "A UTC, unix timestamp of the time of the request.",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiEquipmentRead"
            },
            "description": "The returned IEnumerable<typeparamref name=\"T\" /> results.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a cursor paginated object returned by the API."
      },
      "ApiEquipmentCreate": {
        "required": [
          "businessUnitId",
          "code"
        ],
        "type": "object",
        "properties": {
          "businessUnitId": {
            "type": "string",
            "description": "The equipment's business unit guid.",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "description": "The equipment's code."
          },
          "equipmentType": {
            "type": "string",
            "description": "The equipment's type name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A description of the equipment.",
            "nullable": true
          },
          "accountingCode": {
            "type": "string",
            "description": "Equipment Accounting Code",
            "nullable": true
          },
          "make": {
            "type": "string",
            "description": "The equipment's make.",
            "nullable": true
          },
          "model": {
            "type": "string",
            "description": "The equipment's model.",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "description": "The equipment's year.",
            "format": "int32",
            "nullable": true
          },
          "vin": {
            "type": "string",
            "description": "The equipment's VIN.",
            "nullable": true
          },
          "serialNo": {
            "type": "string",
            "description": "The equipment's serial number.",
            "nullable": true
          },
          "hourMeter": {
            "type": "integer",
            "description": "If initialized, the most recent hour reading.",
            "format": "int32"
          },
          "hourMeterDate": {
            "type": "string",
            "description": "If initialized, the most recent hour reading date.",
            "format": "date-time",
            "nullable": true
          },
          "odometer": {
            "type": "integer",
            "description": "If initialized, the most recent odometer reading .",
            "format": "int32"
          },
          "odometerDate": {
            "type": "string",
            "description": "If initialized, the most recent odometer reading date.",
            "format": "date-time",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "The full URL of the equipment's image at Equipment360's document storage endpoint. Can be retrieved with a valid HCSS Apps access token.",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "The equipment's current region.",
            "nullable": true
          },
          "division": {
            "type": "string",
            "description": "The equipment's current division.",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "The equipment's unloaded weight.",
            "format": "double"
          },
          "length": {
            "type": "number",
            "description": "The equipment's length.",
            "format": "double"
          },
          "width": {
            "type": "number",
            "description": "The equipment's length.",
            "format": "double"
          },
          "height": {
            "type": "number",
            "description": "The equipment's height.",
            "format": "double"
          },
          "numberAxles": {
            "type": "integer",
            "description": "Number of axles on the equipment.",
            "format": "int32"
          },
          "tireSize": {
            "type": "string",
            "description": "Tire Size Front / Rear",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status",
            "nullable": true
          },
          "enabled": {
            "type": "string",
            "description": "Enabled? (Y/N)",
            "nullable": true
          },
          "rentalFlag": {
            "type": "boolean",
            "description": "Rental/Owned"
          },
          "ratedPowerHP": {
            "type": "integer",
            "description": "Rated Power (HP)",
            "format": "int32"
          },
          "ratedPowerKW": {
            "type": "integer",
            "description": "Rated Power (KW)",
            "format": "int32"
          },
          "defaultFuel": {
            "type": "string",
            "description": "Default Fuel",
            "nullable": true
          },
          "purchaseDate": {
            "type": "string",
            "description": "Purchase Date",
            "format": "date-time"
          },
          "purchasePrice": {
            "type": "number",
            "description": "Purchase Value",
            "format": "double"
          },
          "resalePrice": {
            "type": "number",
            "description": "Resale Value",
            "format": "double"
          },
          "depreciationMethod": {
            "type": "integer",
            "description": "Depreciation Method (0 = Declining Balance, 1 = Straight Line)",
            "format": "int32"
          },
          "depreciationYears": {
            "type": "integer",
            "description": "Depreciation Years",
            "format": "int32"
          },
          "depreciationMonths": {
            "type": "integer",
            "description": "Depreciation Months",
            "format": "int32"
          },
          "replacementCycleYears": {
            "type": "number",
            "description": "Replacement Cycle Years",
            "format": "double"
          },
          "utilizedHoursPerYear": {
            "type": "integer",
            "description": "Utilized Hours Per Year",
            "format": "int32"
          },
          "utilizedMilesPerYear": {
            "type": "integer",
            "description": "Utilized Miles Per Year",
            "format": "int32"
          },
          "budget": {
            "type": "number",
            "description": "Budget Value",
            "format": "double"
          },
          "jobCode": {
            "type": "string",
            "description": "Job code associated with the equipment.",
            "nullable": true
          },
          "locationName": {
            "type": "string",
            "description": "Location associated with the equipment.",
            "nullable": true
          },
          "onLoanBusinessUnitID": {
            "type": "string",
            "description": "The ID associated with the Business Unit that the equipment is currently on-loan to.",
            "format": "uuid",
            "nullable": true
          }
        },
        "description": "A representation of an Equipment object to be created by the API."
      },
      "ApiEquipmentUpdate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The equipment's code.",
            "nullable": true
          },
          "equipmentType": {
            "type": "string",
            "description": "The equipment's type name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A description of the equipment.",
            "nullable": true
          },
          "accountingCode": {
            "type": "string",
            "description": "Equipment Accounting Code",
            "nullable": true
          },
          "make": {
            "type": "string",
            "description": "The equipment's make.",
            "nullable": true
          },
          "model": {
            "type": "string",
            "description": "The equipment's model.",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "description": "The equipment's year.",
            "format": "int32",
            "nullable": true
          },
          "vin": {
            "type": "string",
            "description": "The equipment's VIN.",
            "nullable": true
          },
          "serialNo": {
            "type": "string",
            "description": "The equipment's serial number.",
            "nullable": true
          },
          "hourMeter": {
            "type": "integer",
            "description": "If initialized, the most recent hour reading.",
            "format": "int32"
          },
          "hourMeterDate": {
            "type": "string",
            "description": "If initialized, the most recent hour reading date.",
            "format": "date-time",
            "nullable": true
          },
          "odometer": {
            "type": "integer",
            "description": "If initialized, the most recent odometer reading .",
            "format": "int32"
          },
          "odometerDate": {
            "type": "string",
            "description": "If initialized, the most recent odometer reading date.",
            "format": "date-time",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "The full URL of the equipment's image at Equipment360's document storage endpoint. Can be retrieved with a valid HCSS Apps access token.",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "The equipment's current region.",
            "nullable": true
          },
          "division": {
            "type": "string",
            "description": "The equipment's current division.",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "The equipment's unloaded weight.",
            "format": "double"
          },
          "length": {
            "type": "number",
            "description": "The equipment's length.",
            "format": "double"
          },
          "width": {
            "type": "number",
            "description": "The equipment's length.",
            "format": "double"
          },
          "height": {
            "type": "number",
            "description": "The equipment's height.",
            "format": "double"
          },
          "numberAxles": {
            "type": "integer",
            "description": "Number of axles on the equipment.",
            "format": "int32"
          },
          "tireSize": {
            "type": "string",
            "description": "Tire Size Front / Rear",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status",
            "nullable": true
          },
          "enabled": {
            "type": "string",
            "description": "Enabled? (Y/N)",
            "nullable": true
          },
          "rentalFlag": {
            "type": "boolean",
            "description": "Rental/Owned"
          },
          "ratedPowerHP": {
            "type": "integer",
            "description": "Rated Power (HP)",
            "format": "int32"
          },
          "ratedPowerKW": {
            "type": "integer",
            "description": "Rated Power (KW)",
            "format": "int32"
          },
          "defaultFuel": {
            "type": "string",
            "description": "Default Fuel",
            "nullable": true
          },
          "purchaseDate": {
            "type": "string",
            "description": "Purchase Date",
            "format": "date-time"
          },
          "purchasePrice": {
            "type": "number",
            "description": "Purchase Value",
            "format": "double"
          },
          "resalePrice": {
            "type": "number",
            "description": "Resale Value",
            "format": "double"
          },
          "depreciationMethod": {
            "type": "integer",
            "description": "Depreciation Method (0 = Declining Balance, 1 = Straight Line)",
            "format": "int32"
          },
          "depreciationYears": {
            "type": "integer",
            "description": "Depreciation Years",
            "format": "int32"
          },
          "depreciationMonths": {
            "type": "integer",
            "description": "Depreciation Months",
            "format": "int32"
          },
          "replacementCycleYears": {
            "type": "number",
            "description": "Replacement Cycle Years",
            "format": "double"
          },
          "utilizedHoursPerYear": {
            "type": "integer",
            "description": "Utilized Hours Per Year",
            "format": "int32"
          },
          "utilizedMilesPerYear": {
            "type": "integer",
            "description": "Utilized Miles Per Year",
            "format": "int32"
          },
          "budget": {
            "type": "number",
            "description": "Budget Value",
            "format": "double"
          },
          "locationName": {
            "type": "string",
            "description": "Location associated with the equipment.",
            "nullable": true
          },
          "jobCode": {
            "type": "string",
            "description": "Job code associated with the equipment.",
            "nullable": true
          },
          "onLoanBusinessUnitID": {
            "type": "string",
            "description": "The ID associated with the Business Unit that the equipment is currently on-loan to.",
            "format": "uuid",
            "nullable": true
          }
        },
        "description": "A representation of an Equipment object to be updated by the API."
      },
      "ApiEquipmentTransferCreate": {
        "type": "object",
        "properties": {
          "equipmentId": {
            "type": "string",
            "description": "The ID of the equipment being transfered",
            "format": "uuid"
          },
          "currentBusinessUnitId": {
            "type": "string",
            "description": "The business unit currently associated with the equipment being transfered",
            "format": "uuid"
          },
          "newBusinessUnitId": {
            "type": "string",
            "description": "The business unit that the equipment should be moved to",
            "format": "uuid"
          }
        },
        "description": "Details needed to facilitate the transferal of equipment between business units."
      },
      "ApiEquipmentTransferRead": {
        "type": "object",
        "properties": {
          "equipmentId": {
            "type": "integer",
            "description": "Transfered equipment ID",
            "format": "int32",
            "readOnly": true
          },
          "equipmentName": {
            "type": "string",
            "description": "Transfered equipment name",
            "nullable": true,
            "readOnly": true
          },
          "oldBusinessUnit": {
            "type": "string",
            "description": "Equipment previous business unit name",
            "nullable": true,
            "readOnly": true
          },
          "newBusinessUnit": {
            "type": "string",
            "description": "Equipment new business unit name",
            "nullable": true,
            "readOnly": true
          },
          "transferDateTime": {
            "type": "string",
            "description": "DateTime when the transfer occurred",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Details associated with an equipment transfer."
      },
      "ApiEquipmentTypeRead": {
        "type": "object",
        "properties": {
          "equipmentTypeID": {
            "type": "integer",
            "description": "The equipment type integer ID.",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The equipment type name.",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "The equipment type description.",
            "nullable": true,
            "readOnly": true
          },
          "longDescription": {
            "type": "string",
            "description": "The equipment type long description.",
            "nullable": true,
            "readOnly": true
          },
          "budget": {
            "type": "number",
            "description": "The equipment type budget.",
            "format": "double",
            "readOnly": true
          },
          "utilizedHoursPerYear": {
            "type": "integer",
            "description": "The equipment type utilized hours per year.",
            "format": "int32",
            "readOnly": true
          },
          "utilizedMilesPerYear": {
            "type": "integer",
            "description": "The equipment type utilized miles per year.",
            "format": "int32",
            "readOnly": true
          },
          "replacementCycleYears": {
            "type": "number",
            "description": "The equipment type replacement cycle years.",
            "format": "double",
            "readOnly": true
          },
          "sweetSpotK": {
            "type": "number",
            "description": "The equipment type sweet spot K.",
            "format": "double",
            "readOnly": true
          },
          "sweetSpotEx": {
            "type": "number",
            "description": "The equipment type sweet spot ex.",
            "format": "double",
            "readOnly": true
          },
          "billingRate": {
            "type": "number",
            "description": "The equipment type billing rate.",
            "format": "double",
            "readOnly": true
          },
          "avgOperationCostPerHour": {
            "type": "number",
            "description": "The equipment type average operating cost per hour",
            "format": "double",
            "readOnly": true
          },
          "avgOperationgCostPerOdometer": {
            "type": "number",
            "description": "The equipment type replacement cycle years.",
            "format": "double",
            "readOnly": true
          }
        },
        "description": "A representation of an Equipment type object to be returned by the API."
      },
      "ApiEquipmentTypeCreate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The equipment type name."
          },
          "description": {
            "type": "string",
            "description": "The equipment type description.",
            "nullable": true
          },
          "ParentType": {
            "type": "string",
            "description": "The equipment type long description. This will determine the parent (Example: 'Excavator:Mini'), default to All type",
            "nullable": true
          },
          "budget": {
            "type": "number",
            "description": "The equipment type budget.",
            "format": "double"
          },
          "utilizedHoursPerYear": {
            "type": "integer",
            "description": "The equipment type utilized hours per year.",
            "format": "int32"
          },
          "utilizedMilesPerYear": {
            "type": "integer",
            "description": "The equipment type utilized miles per year.",
            "format": "int32"
          },
          "replacementCycleYears": {
            "type": "number",
            "description": "The equipment type replacement cycle years.",
            "format": "double"
          },
          "sweetSpotK": {
            "type": "number",
            "description": "The equipment type sweet spot K.",
            "format": "double"
          },
          "sweetSpotEx": {
            "type": "number",
            "description": "The equipment type sweet spot ex.",
            "format": "double"
          },
          "billingRate": {
            "type": "number",
            "description": "The equipment type billing rate.",
            "format": "double"
          },
          "avgOperationCostPerHour": {
            "type": "number",
            "description": "The equipment type average operating cost per hour",
            "format": "double"
          },
          "avgOperationgCostPerOdometer": {
            "type": "number",
            "description": "The equipment type replacement cycle years.",
            "format": "double"
          }
        },
        "description": "A representation of an Equipment type object to be created by the API."
      },
      "ApiInvoiceDetailRead": {
        "required": [
          "id",
          "partNum",
          "qtyOrdered",
          "qtyReceived",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The purchase order detail id.",
            "format": "uuid",
            "readOnly": true
          },
          "partNum": {
            "type": "string",
            "description": "The part # (code)."
          },
          "vendorPartNumber": {
            "type": "string",
            "description": "Vendor part number.",
            "nullable": true
          },
          "purchaseUnitOfMeasureId": {
            "type": "string",
            "description": "The purchase unit of measure id.",
            "format": "uuid",
            "nullable": true
          },
          "partLocationId": {
            "type": "string",
            "description": "The inventory location id.",
            "format": "uuid",
            "nullable": true
          },
          "qtyOrdered": {
            "type": "integer",
            "description": "The quantity ordered of the item.",
            "format": "int32"
          },
          "qtyReceived": {
            "type": "integer",
            "description": "The quantity received of the item.",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "The unit price of the item.",
            "format": "double"
          },
          "isTaxable": {
            "type": "boolean",
            "description": "Whether the item is taxable.",
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "description": "The tax rate of the item.",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "description": "The tax amount.",
            "format": "double"
          },
          "totalCost": {
            "type": "number",
            "description": "Total cost for this line item",
            "format": "double"
          }
        },
        "description": "Represents invoice detail state returned by the API."
      },
      "ApiInvoiceRead": {
        "required": [
          "id",
          "vendorCode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The invoice id.",
            "format": "uuid",
            "readOnly": true
          },
          "modifiedDateTime": {
            "type": "string",
            "description": "The invoice last modified date time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "total": {
            "type": "number",
            "description": "The total amount of the invoice (in dollars).",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "The invoice number to be used on the invoice.",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "description": "The reference number to be used on the invoice.",
            "nullable": true
          },
          "receivalDate": {
            "type": "string",
            "description": "The date invoice was issued. If not specified, the default\r\nvalue is the server time.",
            "format": "date-time",
            "nullable": true
          },
          "vendorCode": {
            "type": "string",
            "description": "The vendor code for the invoice."
          },
          "status": {
            "type": "string",
            "description": "The purchasing status for the invoice (Open/Closed).",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiInvoiceDetailRead"
            },
            "description": "The notes for the purchase order.",
            "nullable": true
          }
        },
        "description": "A representation of an Invoice object returned by the API."
      },
      "ApiInvoiceCreate": {
        "required": [
          "vendorCode"
        ],
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string",
            "description": "The invoice number to be used on the invoice.",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "description": "The reference number to be used on the invoice.",
            "nullable": true
          },
          "receivalDate": {
            "type": "string",
            "description": "The date invoice was issued. If not specified, the default\r\nvalue is the server time.",
            "format": "date-time",
            "nullable": true
          },
          "vendorCode": {
            "type": "string",
            "description": "The vendor code for the invoice."
          },
          "status": {
            "type": "string",
            "description": "The purchasing status for the invoice (Open/Closed).",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiInvoiceDetailRead"
            },
            "description": "The notes for the purchase order.",
            "nullable": true
          }
        },
        "description": "A representation of an Invoice object to be created by the API."
      },
      "ApiAddressRead": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "description": "Address line 1.",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "description": "Address line 2.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Address City.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Address State.",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "description": "Address Zip Code.",
            "nullable": true
          }
        },
        "description": "A representation of an Address object returned by the API."
      },
      "ApiJobRead": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The job id.",
            "format": "uuid",
            "readOnly": true
          },
          "businessUnitId": {
            "type": "string",
            "description": "The business unit ID associated with the Job.",
            "format": "uuid",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The code.",
            "nullable": true,
            "readOnly": true
          },
          "altCode": {
            "type": "string",
            "description": "The alt code.",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "An optional description.",
            "nullable": true,
            "readOnly": true
          },
          "enabled": {
            "type": "string",
            "description": "Enabled? (Y/N)",
            "nullable": true,
            "readOnly": true
          },
          "regionCode": {
            "type": "string",
            "description": "An optional region.",
            "nullable": true,
            "readOnly": true
          },
          "divisionCode": {
            "type": "string",
            "description": "An optional division.",
            "nullable": true,
            "readOnly": true
          },
          "address": {
            "$ref": "#/components/schemas/ApiAddressRead"
          },
          "status": {
            "type": "string",
            "description": "The current status of the job.",
            "nullable": true
          }
        },
        "description": "A representation of a Job object returned by the API."
      },
      "ApiJobCreate": {
        "required": [
          "businessUnitId",
          "code"
        ],
        "type": "object",
        "properties": {
          "businessUnitId": {
            "type": "string",
            "description": "The business unit ID associated with the Job.",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "description": "The code."
          },
          "altCode": {
            "type": "string",
            "description": "The alt code.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional description.",
            "nullable": true
          },
          "enabled": {
            "type": "string",
            "description": "Enabled? (Y/N)",
            "nullable": true
          },
          "regionCode": {
            "type": "string",
            "description": "An optional region.",
            "nullable": true
          },
          "divisionCode": {
            "type": "string",
            "description": "An optional division.",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/ApiAddressRead"
          },
          "status": {
            "type": "string",
            "description": "The current status of the job.",
            "nullable": true
          }
        },
        "description": "A representation of a Job object to be created by the API."
      },
      "ApiJobUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The job id.",
            "format": "uuid",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The code.",
            "nullable": true
          },
          "altCode": {
            "type": "string",
            "description": "The alt code.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional description.",
            "nullable": true
          },
          "enabled": {
            "type": "string",
            "description": "Enabled? (Y/N)",
            "nullable": true
          },
          "regionCode": {
            "type": "string",
            "description": "An optional region.",
            "nullable": true
          },
          "divisionCode": {
            "type": "string",
            "description": "An optional division.",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/ApiAddressRead"
          },
          "status": {
            "type": "string",
            "description": "The current status of the job.",
            "nullable": true
          }
        },
        "description": "A representation of a Job object to be updated by the API."
      },
      "ApiLocationRead": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The location id.",
            "format": "uuid",
            "readOnly": true
          },
          "businessUnitId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The code.",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "An optional description.",
            "nullable": true,
            "readOnly": true
          },
          "enabled": {
            "type": "string",
            "description": "Enabled? (Y/N)",
            "nullable": true,
            "readOnly": true
          },
          "address": {
            "$ref": "#/components/schemas/ApiAddressRead"
          }
        },
        "description": "A representation of a Location object returned by the API."
      },
      "ApiLocationCreate": {
        "required": [
          "businessUnitId",
          "code"
        ],
        "type": "object",
        "properties": {
          "businessUnitId": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "description": "The code."
          },
          "description": {
            "type": "string",
            "description": "An optional description.",
            "nullable": true
          },
          "enabled": {
            "type": "string",
            "description": "Enabled? (Y/N)",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/ApiAddressRead"
          }
        },
        "description": "A representation of a Location object to be created by the API."
      },
      "ApiLocationUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The location id.",
            "format": "uuid",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The code.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional description.",
            "nullable": true
          },
          "enabled": {
            "type": "string",
            "description": "Enabled? (Y/N)",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/ApiAddressRead"
          }
        },
        "description": "A representation of a Location object to be updated by the API."
      },
      "AttachmentCreate": {
        "type": "object",
        "properties": {
          "imageAsBase64": {
            "type": "string",
            "description": "Base64 conversion of the image data (required)",
            "nullable": true
          },
          "imageFileName": {
            "type": "string",
            "description": "The file name of the attachment (optional)",
            "nullable": true
          },
          "blobName": {
            "type": "string",
            "description": "The blob name of the image blob",
            "nullable": true
          },
          "blobUri": {
            "type": "string",
            "description": "The blob url of the image blob",
            "nullable": true
          },
          "thumbnailName": {
            "type": "string",
            "description": "The thumbnail name of the image blob",
            "nullable": true
          },
          "thumbnailUri": {
            "type": "string",
            "description": "The thumbnail url of the image blob",
            "nullable": true
          }
        },
        "description": "A representation of the photo attachment body to be submitted in a Maintenance Request POST."
      },
      "ApiMaintenanceRequestRead": {
        "required": [
          "description",
          "id",
          "source"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "format": "uuid"
          },
          "requestedDate": {
            "type": "string",
            "description": "Date the Maintenance Request was submitted",
            "format": "date-time",
            "nullable": true
          },
          "priorityCode": {
            "type": "string",
            "description": "Priority of the Maintenance Request",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the Maintenance Request",
            "nullable": true
          },
          "statusDate": {
            "type": "string",
            "description": "Status Date of the Maintenance Request",
            "format": "date-time",
            "nullable": true
          },
          "workOrderId": {
            "type": "integer",
            "description": "Work Order Id that the Maintenance Request is added to",
            "format": "int32",
            "nullable": true
          },
          "workOrderStatusCode": {
            "type": "string",
            "description": "Status of the Work Order that the Maintenance Request is added to",
            "nullable": true
          },
          "workOrderStatusChangedBy": {
            "type": "string",
            "description": "Person set the current Work Order Status",
            "nullable": true
          },
          "workOrderStatusDate": {
            "type": "string",
            "description": "Status Date of Work Request",
            "format": "date-time",
            "nullable": true
          },
          "pointOfContact": {
            "type": "string",
            "description": "Point of Contact for the Maintenance Request",
            "nullable": true
          },
          "dismissedDescription": {
            "type": "string",
            "description": "Dismissed Description for the Maintenance Request",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the Maintenance Request"
          },
          "equipmentCode": {
            "type": "string",
            "description": "The unique equipment code (required if there is no equipment id)",
            "nullable": true
          },
          "equipmentId": {
            "type": "string",
            "description": "The equipment id (required if there is no equipment code)",
            "format": "uuid",
            "nullable": true
          },
          "jobId": {
            "type": "string",
            "description": "(optional) Job Id",
            "format": "uuid",
            "nullable": true
          },
          "jobCode": {
            "type": "string",
            "description": "(optional) Job Code(will use job code only if job id is not provided).",
            "nullable": true
          },
          "priorityId": {
            "type": "string",
            "description": "(optional) Priority Id",
            "format": "uuid",
            "nullable": true
          },
          "pointOfContactName": {
            "type": "string",
            "description": "(optional) Point of contact name",
            "nullable": true
          },
          "pointOfContactPhoneNumber": {
            "type": "string",
            "description": "(optional) Point of contact phone number",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "Client app submitting the maintenance request"
          },
          "requestedBy": {
            "type": "string",
            "description": "Person that made the request",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentCreate"
            },
            "description": "Photo attachments (maximum of 3 files, 10MB each)",
            "nullable": true
          }
        },
        "description": "A representation of a Maintenance Request object returned by the API."
      },
      "ApiMaintenanceRequestReadApiPagedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of records within the returned dataset.",
            "format": "int32",
            "readOnly": true
          },
          "prev": {
            "type": "integer",
            "description": "The integer value that will return the previous {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "next": {
            "type": "integer",
            "description": "The integer value that will return the next {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "integer",
            "description": "A UTC, unix timestamp of the time of the request.",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMaintenanceRequestRead"
            },
            "description": "The returned IEnumerable<typeparamref name=\"T\" /> results.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a cursor paginated object returned by the API."
      },
      "ApiMaintenanceRequestCreate": {
        "required": [
          "description",
          "source"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the Maintenance Request"
          },
          "equipmentCode": {
            "type": "string",
            "description": "The unique equipment code (required if there is no equipment id)",
            "nullable": true
          },
          "equipmentId": {
            "type": "string",
            "description": "The equipment id (required if there is no equipment code)",
            "format": "uuid",
            "nullable": true
          },
          "jobId": {
            "type": "string",
            "description": "(optional) Job Id",
            "format": "uuid",
            "nullable": true
          },
          "jobCode": {
            "type": "string",
            "description": "(optional) Job Code(will use job code only if job id is not provided).",
            "nullable": true
          },
          "priorityId": {
            "type": "string",
            "description": "(optional) Priority Id",
            "format": "uuid",
            "nullable": true
          },
          "pointOfContactName": {
            "type": "string",
            "description": "(optional) Point of contact name",
            "nullable": true
          },
          "pointOfContactPhoneNumber": {
            "type": "string",
            "description": "(optional) Point of contact phone number",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "Client app submitting the maintenance request"
          },
          "requestedBy": {
            "type": "string",
            "description": "Person that made the request",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentCreate"
            },
            "description": "Photo attachments (maximum of 3 files, 10MB each)",
            "nullable": true
          }
        },
        "description": "A representation of the object body to be submitted in a Maintenance Request POST."
      },
      "MeterReadingType": {
        "enum": [
          "hourMeter",
          "odometer"
        ],
        "type": "string",
        "description": "Specifies which type of meter reading is being uses."
      },
      "ApiMeterReadingCreate": {
        "required": [
          "equipmentCode",
          "meterType",
          "meterValue",
          "readingDate"
        ],
        "type": "object",
        "properties": {
          "enteredBy": {
            "type": "string",
            "description": "The name of the person or entity who recorded the reading.",
            "nullable": true
          },
          "equipmentCode": {
            "type": "string",
            "description": "The unique equipment code."
          },
          "readingDate": {
            "type": "string",
            "description": "The effective date of the meter reading.",
            "format": "date-time"
          },
          "meterType": {
            "$ref": "#/components/schemas/MeterReadingType"
          },
          "meterValue": {
            "type": "integer",
            "description": "The value of the meter.",
            "format": "int32"
          },
          "bypassValidation": {
            "type": "boolean",
            "description": "If true, will bypass certain validation rules such as odometer threshold and hour meter time-elapsed validation."
          }
        },
        "description": "A representation of the object body to be submitted in a Meter Reading POST."
      },
      "ApiMeterReadingRead": {
        "required": [
          "equipmentCode",
          "meterType",
          "meterValue",
          "readingDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The meter reading id.",
            "format": "uuid",
            "readOnly": true
          },
          "enteredBy": {
            "type": "string",
            "description": "The name of the person or entity who recorded the reading.",
            "nullable": true
          },
          "equipmentCode": {
            "type": "string",
            "description": "The unique equipment code."
          },
          "readingDate": {
            "type": "string",
            "description": "The effective date of the meter reading.",
            "format": "date-time"
          },
          "meterType": {
            "$ref": "#/components/schemas/MeterReadingType"
          },
          "meterValue": {
            "type": "integer",
            "description": "The value of the meter.",
            "format": "int32"
          },
          "bypassValidation": {
            "type": "boolean",
            "description": "If true, will bypass certain validation rules such as odometer threshold and hour meter time-elapsed validation."
          }
        },
        "description": "A representation of the Equipment360 Server response to a Meter Reading POST."
      },
      "ApiMeterReadingGet": {
        "required": [
          "equipmentCode",
          "hourMeterId",
          "odometerId",
          "odometerValue"
        ],
        "type": "object",
        "properties": {
          "businessUnitId": {
            "type": "string",
            "description": "The business unit id.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "equipmentCode": {
            "type": "string",
            "description": "The unique equipment code.",
            "readOnly": true
          },
          "hourMeterId": {
            "type": "string",
            "description": "The hour meter reading id.",
            "format": "uuid",
            "readOnly": true
          },
          "hourMeterValue": {
            "type": "integer",
            "description": "The value of the hour meter.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "hourMeterDate": {
            "type": "string",
            "description": "The effective date of the hour meter reading.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "hourMeterEnteredBy": {
            "type": "string",
            "description": "The name of the person or entity who recorded the hour meter reading.",
            "nullable": true,
            "readOnly": true
          },
          "odometerId": {
            "type": "string",
            "description": "The odometer reading id.",
            "format": "uuid",
            "readOnly": true
          },
          "odometerValue": {
            "type": "integer",
            "description": "The value of the odometer.",
            "format": "int32",
            "readOnly": true
          },
          "odometerDate": {
            "type": "string",
            "description": "The effective date of the odometer reading.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "odometerEnteredBy": {
            "type": "string",
            "description": "The name of the person or entity who recorded the odometer reading.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a Meter Reading object returned by the API."
      },
      "ApiPartCreate": {
        "required": [
          "partNumber",
          "purchaseUnitOfMeasure",
          "stockUnitOfMeasure"
        ],
        "type": "object",
        "properties": {
          "partNumber": {
            "type": "string",
            "description": "The Part's number."
          },
          "oemPartNumber": {
            "type": "string",
            "description": "The original equipment manufacturer part number.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the Part.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the part.",
            "nullable": true
          },
          "barCode": {
            "type": "string",
            "description": "The part's bar code.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The part category.",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": "The id of the part category.",
            "format": "uuid",
            "nullable": true
          },
          "stockUnitOfMeasure": {
            "type": "string",
            "description": "The Unit of Measure for this part (e.g. \"EA\")."
          },
          "stockUnitOfMeasureId": {
            "type": "string",
            "description": "The stock Unit of Measure's ID. (e.g. \"EA\").",
            "format": "uuid",
            "nullable": true
          },
          "purchaseUnitOfMeasure": {
            "type": "string",
            "description": "The Unit of Measure used by default for purchases of this part. (e.g. \"EA\")."
          },
          "purchaseUnitOfMeasureId": {
            "type": "string",
            "description": "The purchase Unit of Measure's ID. (e.g. \"EA\").",
            "format": "uuid",
            "nullable": true
          },
          "preferredVendor": {
            "type": "string",
            "description": "The Preferred Vendor for this part.",
            "nullable": true
          },
          "preferredVendorId": {
            "type": "integer",
            "description": "The id of the Preferred Vendor for this part.",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "A representation of a Part object body to be submitted in a Part API POST."
      },
      "ApiPartRead": {
        "required": [
          "id",
          "partNumber",
          "purchaseUnitOfMeasure",
          "stockUnitOfMeasure"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Part id.",
            "format": "uuid",
            "readOnly": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates if the part has been disabled."
          },
          "partNumber": {
            "type": "string",
            "description": "The Part's number."
          },
          "oemPartNumber": {
            "type": "string",
            "description": "The original equipment manufacturer part number.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the Part.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the part.",
            "nullable": true
          },
          "barCode": {
            "type": "string",
            "description": "The part's bar code.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The part category.",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": "The id of the part category.",
            "format": "uuid",
            "nullable": true
          },
          "stockUnitOfMeasure": {
            "type": "string",
            "description": "The Unit of Measure for this part (e.g. \"EA\")."
          },
          "stockUnitOfMeasureId": {
            "type": "string",
            "description": "The stock Unit of Measure's ID. (e.g. \"EA\").",
            "format": "uuid",
            "nullable": true
          },
          "purchaseUnitOfMeasure": {
            "type": "string",
            "description": "The Unit of Measure used by default for purchases of this part. (e.g. \"EA\")."
          },
          "purchaseUnitOfMeasureId": {
            "type": "string",
            "description": "The purchase Unit of Measure's ID. (e.g. \"EA\").",
            "format": "uuid",
            "nullable": true
          },
          "preferredVendor": {
            "type": "string",
            "description": "The Preferred Vendor for this part.",
            "nullable": true
          },
          "preferredVendorId": {
            "type": "integer",
            "description": "The id of the Preferred Vendor for this part.",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "A representation of a Part object returned by the API."
      },
      "ApiPartUpdate": {
        "type": "object",
        "properties": {
          "partNumber": {
            "type": "string",
            "description": "The Part's number.",
            "nullable": true
          },
          "oemPartNumber": {
            "type": "string",
            "description": "The original equipment manufacturer part number.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the Part.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the part.",
            "nullable": true
          },
          "barCode": {
            "type": "string",
            "description": "The part's bar code.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The part category.",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": "The id of the part category.",
            "format": "uuid",
            "nullable": true
          },
          "stockUnitOfMeasure": {
            "type": "string",
            "description": "The Unit of Measure for this part (e.g. \"EA\").",
            "nullable": true
          },
          "stockUnitOfMeasureId": {
            "type": "string",
            "description": "The stock Unit of Measure's ID. (e.g. \"EA\").",
            "format": "uuid",
            "nullable": true
          },
          "purchaseUnitOfMeasure": {
            "type": "string",
            "description": "The Unit of Measure used by default for purchases of this part. (e.g. \"EA\").",
            "nullable": true
          },
          "purchaseUnitOfMeasureId": {
            "type": "string",
            "description": "The purchase Unit of Measure's ID. (e.g. \"EA\").",
            "format": "uuid",
            "nullable": true
          },
          "preferredVendor": {
            "type": "string",
            "description": "The Preferred Vendor for this part.",
            "nullable": true
          },
          "preferredVendorId": {
            "type": "integer",
            "description": "The id of the Preferred Vendor for this part.",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "A representation of a Part object body to be updated in a Part API PUT."
      },
      "ApiPartLocationRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The part location id.",
            "format": "uuid",
            "readOnly": true
          },
          "businessUnitId": {
            "type": "string",
            "description": "The part location's Business Unit id.",
            "format": "uuid",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The location code.",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "The location description.",
            "nullable": true,
            "readOnly": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "Indicates whether this location is the default location for received parts.",
            "readOnly": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates whether this location has been soft deleted.",
            "readOnly": true
          }
        },
        "description": "A representation of a Part Location object returned by the API."
      },
      "ApiPartCostEntryCreate": {
        "required": [
          "workOrderNumber"
        ],
        "type": "object",
        "properties": {
          "workOrderNumber": {
            "type": "integer",
            "description": "The work order number.",
            "format": "int32"
          },
          "entryDate": {
            "type": "string",
            "description": "The effective date of the sublet vendor cost entry, given in UTC. If left null, will default to current date/time.",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "description": "The value of the amount. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "estimatedCost": {
            "type": "number",
            "description": "The value of the estimated cost. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "referenceNumber": {
            "type": "string",
            "description": "The reference number. (Optional. May be auto-generated depending on system preference. Discard if they post one while they have preference turned on.)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the cost entry. (Optional.)",
            "nullable": true
          }
        },
        "description": "A representation of the object body to be submitted in a Part Cost Entry POST."
      },
      "ApiPartCostEntryRead": {
        "required": [
          "id",
          "workOrderNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The part cost entry id.",
            "format": "uuid",
            "readOnly": true
          },
          "workOrderNumber": {
            "type": "integer",
            "description": "The work order number.",
            "format": "int32"
          },
          "entryDate": {
            "type": "string",
            "description": "The effective date of the sublet vendor cost entry, given in UTC. If left null, will default to current date/time.",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "description": "The value of the amount. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "estimatedCost": {
            "type": "number",
            "description": "The value of the estimated cost. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "referenceNumber": {
            "type": "string",
            "description": "The reference number. (Optional. May be auto-generated depending on system preference. Discard if they post one while they have preference turned on.)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the cost entry. (Optional.)",
            "nullable": true
          }
        },
        "description": "A representation of a Part Cost Entry object returned by the API."
      },
      "ApiPartCostEntryDetailCreate": {
        "type": "object",
        "properties": {
          "vendorId": {
            "type": "string",
            "description": "The vendor id for the cost entry. (Optional. If there are details this will be replaced)",
            "format": "uuid",
            "nullable": true
          },
          "vendorCode": {
            "type": "string",
            "description": "The vendor code for the cost entry. (Optional. If there are details this will be replaced)",
            "nullable": true
          },
          "partId": {
            "type": "string",
            "description": "The part id for the cost entry. (Optional. If empty, lookup part by partNum instead.)",
            "format": "uuid",
            "nullable": true
          },
          "partNum": {
            "type": "string",
            "description": "The part num for the cost entry. (Optional. Not required if part id has value.)",
            "nullable": true
          },
          "itemCodeId": {
            "type": "integer",
            "description": "The value of the item code id.",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "description": "The value of the amount. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "estimatedCost": {
            "type": "number",
            "description": "The value of the estimated cost. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "The description of the cost entry. (Optional.)",
            "nullable": true
          }
        },
        "description": "Represents a part cost entry detail to be created by the API."
      },
      "ApiPartCostEntryDetailRead": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The part cost entry detail id.",
            "format": "uuid",
            "readOnly": true
          },
          "vendorId": {
            "type": "string",
            "description": "The vendor id for the cost entry. (Optional. If there are details this will be replaced)",
            "format": "uuid",
            "nullable": true
          },
          "vendorCode": {
            "type": "string",
            "description": "The vendor code for the cost entry. (Optional. If there are details this will be replaced)",
            "nullable": true
          },
          "partId": {
            "type": "string",
            "description": "The part id for the cost entry. (Optional. If empty, lookup part by partNum instead.)",
            "format": "uuid",
            "nullable": true
          },
          "partNum": {
            "type": "string",
            "description": "The part num for the cost entry. (Optional. Not required if part id has value.)",
            "nullable": true
          },
          "itemCodeId": {
            "type": "integer",
            "description": "The value of the item code id.",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "description": "The value of the amount. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "estimatedCost": {
            "type": "number",
            "description": "The value of the estimated cost. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "The description of the cost entry. (Optional.)",
            "nullable": true
          }
        },
        "description": "A representation of the Equipment360 Server response to a Part Cost Entry POST."
      },
      "ApiPartInventoryRead": {
        "required": [
          "partID"
        ],
        "type": "object",
        "properties": {
          "partID": {
            "type": "string",
            "description": "The part id.",
            "format": "uuid",
            "readOnly": true
          },
          "partNum": {
            "type": "string",
            "description": "The part number.",
            "nullable": true,
            "readOnly": true
          },
          "oemPartNum": {
            "type": "string",
            "description": "The OEM part number.",
            "nullable": true,
            "readOnly": true
          },
          "partLocationID": {
            "type": "string",
            "description": "The part location ID.",
            "format": "uuid",
            "readOnly": true
          },
          "partLocationCode": {
            "type": "string",
            "description": "The part location code.",
            "nullable": true,
            "readOnly": true
          },
          "onHandQty": {
            "type": "integer",
            "description": "The on hand quantity.",
            "format": "int32",
            "readOnly": true
          },
          "onOrderQty": {
            "type": "integer",
            "description": "The on order quantity.",
            "format": "int32",
            "readOnly": true
          },
          "neededQuantity": {
            "type": "integer",
            "description": "The requested quantity.",
            "format": "int32",
            "readOnly": true
          },
          "bin": {
            "type": "string",
            "description": "The bin for the part.",
            "nullable": true,
            "readOnly": true
          },
          "lot": {
            "type": "string",
            "description": "The lot for the part.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a part inventory object returned by the API."
      },
      "ApiPartInventoryReadApiPagedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of records within the returned dataset.",
            "format": "int32",
            "readOnly": true
          },
          "prev": {
            "type": "integer",
            "description": "The integer value that will return the previous {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "next": {
            "type": "integer",
            "description": "The integer value that will return the next {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "integer",
            "description": "A UTC, unix timestamp of the time of the request.",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPartInventoryRead"
            },
            "description": "The returned IEnumerable<typeparamref name=\"T\" /> results.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a cursor paginated object returned by the API."
      },
      "ApiPartInventoryCreate": {
        "required": [
          "onHandQty",
          "partLocationCode",
          "partNum",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "partNum": {
            "type": "string",
            "description": "The part number."
          },
          "partLocationCode": {
            "type": "string",
            "description": "The part location code."
          },
          "onHandQty": {
            "type": "integer",
            "description": "The on hand quantity for the part at part location. This will set the current quantity to this value",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "The unit price of the item.",
            "format": "double"
          },
          "note": {
            "type": "string",
            "description": "The note for inventory adjustment.",
            "nullable": true
          }
        }
      },
      "PurchaseOrderApprovalStatusEnum": {
        "enum": [
          "unreviewed",
          "approved",
          "denied"
        ],
        "type": "string"
      },
      "ApiNoteRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The note id.",
            "format": "uuid",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the note.",
            "nullable": true,
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "description": "The date on which the note was created.",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "The last user who modified the note.",
            "nullable": true,
            "readOnly": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "The most recent date on which the note was modified",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "note": {
            "type": "string",
            "description": "The note.",
            "nullable": true
          }
        },
        "description": "A representation of a Note object returned by the API."
      },
      "ApiPurchaseOrderRead": {
        "required": [
          "id",
          "purchaseOrderNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The purchase order id.",
            "format": "uuid",
            "readOnly": true
          },
          "businessUnitId": {
            "type": "string",
            "description": "The business unit ID associated with the purchase order.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "purchaseOrderNumber": {
            "type": "integer",
            "description": "The purchase order's integer id, generated upon creation.",
            "format": "int32"
          },
          "dateIssued": {
            "type": "string",
            "description": "The date when the purchase order was created.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "vendorId": {
            "type": "string",
            "description": "The vendor id for the purchase order.",
            "format": "uuid",
            "readOnly": true
          },
          "referenceNumber": {
            "type": "string",
            "description": "The reference number used on the invoice.",
            "nullable": true,
            "readOnly": true
          },
          "taxRatePercent": {
            "type": "number",
            "description": "The tax rate, expressed as a percent (e.g., 8 means 8% tax).",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "estimatedTotal": {
            "type": "number",
            "description": "The estimated total amount of the purchase order (in dollars).",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "approvalStatus": {
            "$ref": "#/components/schemas/PurchaseOrderApprovalStatusEnum"
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiNoteRead"
            },
            "description": "The notes for the purchase order.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a Purchase Order object returned by the API."
      },
      "ApiNoteCreate": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "description": "The note.",
            "nullable": true
          }
        },
        "description": "A representation of the object body to be submitted in a Note POST."
      },
      "ApiPurchaseOrderCreate": {
        "required": [
          "dateIssued",
          "vendorId"
        ],
        "type": "object",
        "properties": {
          "businessUnitId": {
            "type": "string",
            "description": "The business unit id.",
            "format": "uuid",
            "nullable": true
          },
          "dateIssued": {
            "type": "string",
            "description": "The date purchase order was issued. If not specified, the default\r\nvalue is the server time.",
            "format": "date-time"
          },
          "vendorId": {
            "type": "string",
            "description": "The vendor id for the purchase order.",
            "format": "uuid"
          },
          "referenceNumber": {
            "type": "string",
            "description": "The reference number to be used on the invoice.",
            "nullable": true
          },
          "taxRatePercent": {
            "type": "number",
            "description": "The tax rate, expressed as a percent (e.g., 8 means 8% tax).\r\nDefaults to vendor's default tax rate if not provided.",
            "format": "double",
            "nullable": true
          },
          "estimatedTotal": {
            "type": "number",
            "description": "The estimated total amount of the purchase order (in dollars).",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiNoteCreate"
            },
            "description": "The notes for the purchase order.",
            "nullable": true
          }
        },
        "description": "A representation of a purchase order object to be created by the API."
      },
      "PurchaseOrderDetailType": {
        "enum": [
          "details",
          "miscellaneous"
        ],
        "type": "string",
        "description": "Purchase order detail type."
      },
      "ApiPurchaseOrderDetailRead": {
        "required": [
          "id",
          "purchaseOrderId",
          "quantity",
          "type",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The purchase order detail id.",
            "format": "uuid",
            "readOnly": true
          },
          "purchaseOrderId": {
            "type": "string",
            "description": "Purchase Order Id",
            "format": "uuid",
            "readOnly": true
          },
          "orderQuantityReceived": {
            "type": "integer",
            "description": "Order quantity received",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "taxAmount": {
            "type": "number",
            "description": "The tax amount.",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "totalCost": {
            "type": "number",
            "description": "Total cost for this line item",
            "format": "double",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/PurchaseOrderDetailType"
          },
          "approvalStatus": {
            "$ref": "#/components/schemas/PurchaseOrderApprovalStatusEnum"
          },
          "partId": {
            "type": "string",
            "description": "The part id (not required if there's a charge item).",
            "format": "uuid",
            "nullable": true
          },
          "vendorPartNumber": {
            "type": "string",
            "description": "Vendor part number.",
            "nullable": true
          },
          "purchaseUnitOfMeasureId": {
            "type": "string",
            "description": "The purchase unit of measure id (not required if there's a charge item).",
            "format": "uuid",
            "nullable": true
          },
          "partLocationId": {
            "type": "string",
            "description": "The inventory location id (to pre-populate inventory location on the invoice).",
            "format": "uuid",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the item.",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "The unit price of the item.",
            "format": "double"
          },
          "isTaxable": {
            "type": "boolean",
            "description": "Whether the item is taxable.",
            "nullable": true
          },
          "chargeItem": {
            "type": "string",
            "description": "A miscellaneous charge item (there will be no partId when this is on the detail).",
            "nullable": true
          }
        },
        "description": "Represents purchase order detail state returned by the API."
      },
      "ApiPurchaseOrderDetailCreate": {
        "required": [
          "quantity",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "partId": {
            "type": "string",
            "description": "The part id (not required if there's a charge item).",
            "format": "uuid",
            "nullable": true
          },
          "vendorPartNumber": {
            "type": "string",
            "description": "Vendor part number.",
            "nullable": true
          },
          "purchaseUnitOfMeasureId": {
            "type": "string",
            "description": "The purchase unit of measure id (not required if there's a charge item).",
            "format": "uuid",
            "nullable": true
          },
          "partLocationId": {
            "type": "string",
            "description": "The inventory location id (to pre-populate inventory location on the invoice).",
            "format": "uuid",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the item.",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "The unit price of the item.",
            "format": "double"
          },
          "isTaxable": {
            "type": "boolean",
            "description": "Whether the item is taxable.",
            "nullable": true
          },
          "chargeItem": {
            "type": "string",
            "description": "A miscellaneous charge item (there will be no partId when this is on the detail).",
            "nullable": true
          }
        },
        "description": "Represents a purchase order detail to be created by the API."
      },
      "ApiSubletVendorCostEntryCreate": {
        "required": [
          "workOrderNumber"
        ],
        "type": "object",
        "properties": {
          "workOrderNumber": {
            "type": "integer",
            "description": "The work order number.",
            "format": "int32"
          },
          "entryDate": {
            "type": "string",
            "description": "The effective date of the sublet vendor cost entry, given in UTC. If left null, will default to current date/time.",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "description": "The value of the amount. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "estimatedCost": {
            "type": "number",
            "description": "The value of the estimated cost. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "referenceNumber": {
            "type": "string",
            "description": "The reference number. (Optional. May be auto-generated depending on system preference. Discard if they post one while they have preference turned on.)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the cost entry. (Optional.)",
            "nullable": true
          }
        },
        "description": "A representation of the object body to be submitted in a Sublet Vendor Cost Entry POST."
      },
      "ApiSubletVendorCostEntryRead": {
        "required": [
          "id",
          "workOrderNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The sublet vendor cost entry id.",
            "format": "uuid",
            "readOnly": true
          },
          "workOrderNumber": {
            "type": "integer",
            "description": "The work order number.",
            "format": "int32"
          },
          "entryDate": {
            "type": "string",
            "description": "The effective date of the sublet vendor cost entry, given in UTC. If left null, will default to current date/time.",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "description": "The value of the amount. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "estimatedCost": {
            "type": "number",
            "description": "The value of the estimated cost. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "referenceNumber": {
            "type": "string",
            "description": "The reference number. (Optional. May be auto-generated depending on system preference. Discard if they post one while they have preference turned on.)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the cost entry. (Optional.)",
            "nullable": true
          }
        },
        "description": "A representation of a Sublet Vendor Cost Entry object returned by the API."
      },
      "ApiSubletVendorCostEntryDetailCreate": {
        "required": [
          "vendorId"
        ],
        "type": "object",
        "properties": {
          "vendorId": {
            "type": "string",
            "description": "The vendor id for the cost entry.",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "description": "The value of the amount. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "estimatedCost": {
            "type": "number",
            "description": "The value of the estimated cost. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "The description of the cost entry. (Optional.)",
            "nullable": true
          }
        },
        "description": "Represents a sublet vendor cost entry detail to be created by the API."
      },
      "ApiSubletVendorCostEntryDetailRead": {
        "required": [
          "id",
          "vendorId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The sublet vendor cost entry detail id.",
            "format": "uuid",
            "readOnly": true
          },
          "vendorId": {
            "type": "string",
            "description": "The vendor id for the cost entry.",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "description": "The value of the amount. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "estimatedCost": {
            "type": "number",
            "description": "The value of the estimated cost. (Optional. If there are details this will be replaced)",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "The description of the cost entry. (Optional.)",
            "nullable": true
          }
        },
        "description": "A representation of the Equipment360 Server response to a Sublet Vendor Cost Entry POST."
      },
      "ApiTagRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The guid of the tag entity.",
            "format": "uuid",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The tag's code.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a Tag object returned by the API."
      },
      "TimeCardStatus": {
        "enum": [
          "none",
          "entered",
          "review",
          "approved",
          "rejected",
          "exported"
        ],
        "type": "string",
        "description": "Timecard Statuses"
      },
      "ApiTimeCardShiftRead": {
        "type": "object",
        "properties": {
          "shiftName": {
            "type": "string",
            "description": "Shift name",
            "nullable": true,
            "readOnly": true
          },
          "shiftStartTime": {
            "type": "string",
            "description": "When the shift began.",
            "nullable": true,
            "readOnly": true
          },
          "shiftEndTime": {
            "type": "string",
            "description": "When the shift ended.",
            "nullable": true,
            "readOnly": true
          },
          "break1": {
            "type": "string",
            "description": "Flag denoting if break 1 was taken.",
            "nullable": true,
            "readOnly": true
          },
          "break2": {
            "type": "string",
            "description": "Flag denoting if break 2 was taken.",
            "nullable": true,
            "readOnly": true
          },
          "break3": {
            "type": "string",
            "description": "Flag denoting if break 3 was taken.",
            "nullable": true,
            "readOnly": true
          },
          "meal1Start": {
            "type": "string",
            "description": "Starting time of Meal 1",
            "nullable": true,
            "readOnly": true
          },
          "meal1End": {
            "type": "string",
            "description": "Ending time of Meal 1",
            "nullable": true,
            "readOnly": true
          },
          "meal2Start": {
            "type": "string",
            "description": "Starting time of Meal 2",
            "nullable": true,
            "readOnly": true
          },
          "meal2End": {
            "type": "string",
            "description": "Ending time of Meal 2",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a timecard shift details object to be returned by the API."
      },
      "ApiTimeCardRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID associated with the time card.",
            "format": "uuid",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "The status of the time card (Either: None, Entered, Review, Approved, Rejected, or Exported).",
            "nullable": true,
            "readOnly": true
          },
          "timeCardDate": {
            "type": "string",
            "description": "The date and time when the time card was created.",
            "format": "date-time",
            "readOnly": true
          },
          "workOrderNumber": {
            "type": "integer",
            "description": "The work order number associated with the work performed on the time card.",
            "format": "int32",
            "readOnly": true
          },
          "workType": {
            "type": "string",
            "description": "The type of work order the work was performed on (Equipment, Job, or Shop).",
            "nullable": true,
            "readOnly": true
          },
          "equipmentId": {
            "type": "string",
            "description": "The ID associated with the equipment the work was performed on (if applicable).",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "equipmentAccountingCode": {
            "type": "string",
            "description": "The accounting code associated with the equipment.",
            "nullable": true,
            "readOnly": true
          },
          "workOrderJobId": {
            "type": "string",
            "description": "The ID associated with the job the work was performed on (if applicable).",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "jobAltCode": {
            "type": "string",
            "description": "Job alt code.",
            "nullable": true,
            "readOnly": true
          },
          "mechanicCode": {
            "type": "string",
            "description": "The mechanic code associated with the employee creating the time card record.",
            "nullable": true,
            "readOnly": true
          },
          "mechanicAccountingCode": {
            "type": "string",
            "description": "Mechanic accounting code.",
            "nullable": true,
            "readOnly": true
          },
          "payclass": {
            "type": "string",
            "description": "Pay class of the employee performing the work.",
            "nullable": true,
            "readOnly": true
          },
          "payclassAccountingCode": {
            "type": "string",
            "description": "Pay class accounting code.",
            "nullable": true,
            "readOnly": true
          },
          "workCode": {
            "type": "string",
            "description": "The work code associated with the work being performed.",
            "nullable": true,
            "readOnly": true
          },
          "workCodeCostCode": {
            "type": "string",
            "description": "Work code cost code.",
            "nullable": true,
            "readOnly": true
          },
          "itemCode": {
            "type": "string",
            "description": "The item code associated with the work being performed.",
            "nullable": true,
            "readOnly": true
          },
          "itemCodeCostCode": {
            "type": "string",
            "description": "Item code cost code.",
            "nullable": true,
            "readOnly": true
          },
          "billingType": {
            "type": "string",
            "description": "Billing type (Equipment, Job, or Shop).",
            "nullable": true,
            "readOnly": true
          },
          "billingId": {
            "type": "string",
            "description": "Billing ID",
            "nullable": true,
            "readOnly": true
          },
          "serviceEquipmentCode": {
            "type": "string",
            "description": "Service equipment associated with the work being performed (if applicable).",
            "nullable": true,
            "readOnly": true
          },
          "serviceEquipmentAccountingCode": {
            "type": "string",
            "description": "Service equipment accounting code.",
            "nullable": true,
            "readOnly": true
          },
          "overrideCostCode": {
            "type": "string",
            "description": "Override cost code",
            "nullable": true,
            "readOnly": true
          },
          "damage": {
            "type": "boolean",
            "description": "Flag if work was performed on damaged equipment",
            "readOnly": true
          },
          "onSite": {
            "type": "boolean",
            "description": "Flag if work was performed on site.",
            "readOnly": true
          },
          "hours": {
            "type": "number",
            "description": "Total normal hours.",
            "format": "double",
            "readOnly": true
          },
          "overtime": {
            "type": "number",
            "description": "Total overtime hours.",
            "format": "double",
            "readOnly": true
          },
          "doubleTime": {
            "type": "number",
            "description": "Total double time hours.",
            "format": "double",
            "readOnly": true
          },
          "approvalLevel1": {
            "type": "string",
            "description": "Flag indicating if approved on level 1",
            "nullable": true,
            "readOnly": true
          },
          "approvalLevel2": {
            "type": "string",
            "description": "Flag indicating if approved on level 2",
            "nullable": true,
            "readOnly": true
          },
          "approvalLevel3": {
            "type": "string",
            "description": "Flag indicating if approved on level 3",
            "nullable": true,
            "readOnly": true
          },
          "shiftDetails": {
            "$ref": "#/components/schemas/ApiTimeCardShiftRead"
          }
        },
        "description": "A representation of a timecard object being returned by the API."
      },
      "ApiTimeCardReadApiPagedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of records within the returned dataset.",
            "format": "int32",
            "readOnly": true
          },
          "prev": {
            "type": "integer",
            "description": "The integer value that will return the previous {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "next": {
            "type": "integer",
            "description": "The integer value that will return the next {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "integer",
            "description": "A UTC, unix timestamp of the time of the request.",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiTimeCardRead"
            },
            "description": "The returned IEnumerable<typeparamref name=\"T\" /> results.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a cursor paginated object returned by the API."
      },
      "ApiPurchaseUnitOfMeasureRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Unit of Measure id.",
            "format": "uuid",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The Unit of Measure's Code (i.e. \"EA\").",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "The description of the Unit of Measure (i.e. \"Each\").",
            "nullable": true,
            "readOnly": true
          },
          "stockQuantity": {
            "type": "number",
            "description": "The quantity to be added to stock per one purchase unit.",
            "format": "double",
            "readOnly": true
          },
          "isPartDefault": {
            "type": "boolean",
            "description": "Indicates whether this UoM should be applied by default.",
            "readOnly": true
          },
          "isFluidDefault": {
            "type": "boolean",
            "description": "Indicates whether this UoM should be applied by default to Fluids.",
            "readOnly": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates whether the record is soft deleted.",
            "readOnly": true
          }
        },
        "description": "A representation of a Purchase Unit of Measure object returned by the API."
      },
      "ApiStockUnitOfMeasureRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Unit of Measure id.",
            "format": "uuid",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The Unit of Measure's Code (i.e. \"EA\").",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "The description of the Unit of Measure (i.e. \"Each\").",
            "nullable": true,
            "readOnly": true
          },
          "isPartDefault": {
            "type": "boolean",
            "description": "Indicates whether this UoM should be applied by default.",
            "readOnly": true
          },
          "isFluidDefault": {
            "type": "boolean",
            "description": "Indicates whether this UoM should be applied by default for fluids.",
            "readOnly": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates whether the record is soft deleted.",
            "readOnly": true
          },
          "purchaseUnitsOfMeasure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPurchaseUnitOfMeasureRead"
            },
            "description": "List of associated purchase units of measure.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a Stock Unit of Measure object returned by the API."
      },
      "ApiVendorRead": {
        "required": [
          "id",
          "name",
          "vendorNum"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The vendor id.",
            "format": "uuid",
            "readOnly": true
          },
          "vendorType": {
            "type": "string",
            "description": "The type/s of the vendor (e.g. Fuel, Parts).",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The vendor name."
          },
          "vendorNum": {
            "type": "string",
            "description": "The vendor number."
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Whether the vendor is marked as deleted."
          },
          "taxRate": {
            "type": "number",
            "description": "The vendor tax rate.",
            "format": "double",
            "nullable": true
          },
          "isFuel": {
            "type": "boolean",
            "description": "The vendor is fuel.",
            "nullable": true
          },
          "isParts": {
            "type": "boolean",
            "description": "The vendor is parts.",
            "nullable": true
          },
          "isSublet": {
            "type": "boolean",
            "description": "The vendor is sublet.",
            "nullable": true
          },
          "isRental": {
            "type": "boolean",
            "description": "The vendor is rental.",
            "nullable": true
          }
        },
        "description": "A representation of a Vendor object returned by the API."
      },
      "ApiVendorWrite": {
        "required": [
          "name",
          "vendorNum"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The vendor name."
          },
          "vendorNum": {
            "type": "string",
            "description": "The vendor number."
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Whether the vendor is marked as deleted."
          },
          "taxRate": {
            "type": "number",
            "description": "The vendor tax rate.",
            "format": "double",
            "nullable": true
          },
          "isFuel": {
            "type": "boolean",
            "description": "The vendor is fuel.",
            "nullable": true
          },
          "isParts": {
            "type": "boolean",
            "description": "The vendor is parts.",
            "nullable": true
          },
          "isSublet": {
            "type": "boolean",
            "description": "The vendor is sublet.",
            "nullable": true
          },
          "isRental": {
            "type": "boolean",
            "description": "The vendor is rental.",
            "nullable": true
          }
        },
        "description": "A representation of a Vendor object."
      },
      "ApiVendorUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The vendor name.",
            "nullable": true
          },
          "vendorNum": {
            "type": "string",
            "description": "The vendor number.",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Whether the vendor is marked as deleted."
          },
          "taxRate": {
            "type": "number",
            "description": "The vendor tax rate.",
            "format": "double",
            "nullable": true
          },
          "isFuel": {
            "type": "boolean",
            "description": "The vendor is fuel.",
            "nullable": true
          },
          "isParts": {
            "type": "boolean",
            "description": "The vendor is parts.",
            "nullable": true
          },
          "isSublet": {
            "type": "boolean",
            "description": "The vendor is sublet.",
            "nullable": true
          },
          "isRental": {
            "type": "boolean",
            "description": "The vendor is rental.",
            "nullable": true
          }
        },
        "description": "A representation of a Vendor object."
      },
      "ApiWorkOrderRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The guid of the work order.",
            "format": "uuid",
            "readOnly": true
          },
          "businessUnitId": {
            "type": "string",
            "description": "The Id of the business unit to which the work order belongs.",
            "format": "uuid",
            "readOnly": true
          },
          "workOrderNumber": {
            "type": "integer",
            "description": "The integer id of the work order.",
            "format": "int32",
            "readOnly": true
          },
          "equipmentJobId": {
            "type": "string",
            "description": "If the work order is an equipment work order, this is the Id of the associated Job.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of tags that have been applied to the work order.",
            "nullable": true,
            "readOnly": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiNoteRead"
            },
            "description": "The notes for the work order.",
            "nullable": true,
            "readOnly": true
          },
          "statusDate": {
            "type": "string",
            "description": "The date of the most recent status change.",
            "format": "date-time"
          },
          "isPreventiveMaintenance": {
            "type": "boolean",
            "description": "Indicates whether a work order contains one or more Preventive Maintenance setup."
          },
          "jobId": {
            "type": "string",
            "description": "The Id of the job (if any) to which the work order applies. May only specify equipment, job, or shop upon creation.",
            "format": "uuid",
            "nullable": true
          },
          "equipmentId": {
            "type": "string",
            "description": "The Id of the equipment (if any) to which the work order applies. May only specify equipment, job, or shop upon creation.",
            "format": "uuid",
            "nullable": true
          },
          "shopId": {
            "type": "string",
            "description": "The Id of the shop (if any) to which the work order applies. May only specify equipment, job, or shop upon creation.",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The work order's problem description.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "The current status of the work order.",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "description": "The current priority of the work order.",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "The date, if specified, on which the work order is due.",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "A representation of a work order object returned by the API."
      },
      "ApiWorkOrderReadApiPagedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of records within the returned dataset.",
            "format": "int32",
            "readOnly": true
          },
          "prev": {
            "type": "integer",
            "description": "The integer value that will return the previous {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "next": {
            "type": "integer",
            "description": "The integer value that will return the next {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "integer",
            "description": "A UTC, unix timestamp of the time of the request.",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiWorkOrderRead"
            },
            "description": "The returned IEnumerable<typeparamref name=\"T\" /> results.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a cursor paginated object returned by the API."
      },
      "ApiWorkOrderCreate": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "The Id of the job (if any) to which the work order applies. May only specify equipment, job, or shop upon creation.",
            "format": "uuid",
            "nullable": true
          },
          "equipmentId": {
            "type": "string",
            "description": "The Id of the equipment (if any) to which the work order applies. May only specify equipment, job, or shop upon creation.",
            "format": "uuid",
            "nullable": true
          },
          "shopId": {
            "type": "string",
            "description": "The Id of the shop (if any) to which the work order applies. May only specify equipment, job, or shop upon creation.",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The work order's problem description.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "The current status of the work order.",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "description": "The current priority of the work order.",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "The date, if specified, on which the work order is due.",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "A representation of a work order object to be created by the API."
      },
      "ApiWorkOrderUpdate": {
        "type": "object",
        "properties": {
          "equipmentId": {
            "type": "string",
            "description": "Equipment Id (can only be used for equipment type work orders)",
            "format": "uuid",
            "nullable": true
          },
          "equipmentJobId": {
            "type": "string",
            "description": "Equipment Job Id (can only be used for equipment type work orders)",
            "format": "uuid",
            "nullable": true
          },
          "jobId": {
            "type": "string",
            "description": "Job Id (can only be used for job type work orders)",
            "format": "uuid",
            "nullable": true
          },
          "shopId": {
            "type": "string",
            "description": "Shop Id (can only be used for shop type work orders)",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The work order description",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "description": "Work order Status Id",
            "format": "uuid",
            "nullable": true
          },
          "priorityId": {
            "type": "string",
            "description": "Work order Priority Id",
            "format": "uuid",
            "nullable": true
          }
        },
        "description": "A representation of the object body to be submitted in a Work Order PUT."
      },
      "ApiWorkOrderPurchaseRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Work order purchase id",
            "format": "uuid",
            "readOnly": true
          },
          "workOrderNumber": {
            "type": "integer",
            "description": "Work order number",
            "format": "int32",
            "readOnly": true
          },
          "vendorCode": {
            "type": "string",
            "description": "Vendor code",
            "nullable": true,
            "readOnly": true
          },
          "referenceNumber": {
            "type": "string",
            "description": "Reference #",
            "nullable": true,
            "readOnly": true
          },
          "partNumber": {
            "type": "string",
            "description": "Part #",
            "nullable": true,
            "readOnly": true
          },
          "partDescription": {
            "type": "string",
            "description": "Part description",
            "nullable": true,
            "readOnly": true
          },
          "vendorPartNumber": {
            "type": "string",
            "description": "Vendor part number",
            "nullable": true,
            "readOnly": true
          },
          "itemCode": {
            "type": "string",
            "description": "Item code",
            "nullable": true,
            "readOnly": true
          },
          "unitOfMeasure": {
            "type": "string",
            "description": "Purchase unit of measure",
            "nullable": true,
            "readOnly": true
          },
          "qtyOrdered": {
            "type": "integer",
            "description": "Quantity ordered",
            "format": "int32",
            "readOnly": true
          },
          "qtyUsed": {
            "type": "integer",
            "description": "Quantity used",
            "format": "int32",
            "readOnly": true
          },
          "purchaseDate": {
            "type": "string",
            "description": "Purchase date",
            "format": "date-time",
            "readOnly": true
          },
          "equipmentCode": {
            "type": "string",
            "description": "The equipment code if the work order type is for equipment",
            "nullable": true,
            "readOnly": true
          },
          "modifiedTimestamp": {
            "type": "string",
            "description": "The datetime at which the purchase was most recently modified",
            "format": "date-time",
            "readOnly": true
          },
          "isReconciled": {
            "type": "boolean",
            "description": "Indicates whether the purchase has been reconciled into an invoice.",
            "readOnly": true
          },
          "inventoryLocation": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a Work Order Purchase object returned by the API."
      },
      "ApiWorkOrderPurchaseReadApiPagedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of records within the returned dataset.",
            "format": "int32",
            "readOnly": true
          },
          "prev": {
            "type": "integer",
            "description": "The integer value that will return the previous {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "next": {
            "type": "integer",
            "description": "The integer value that will return the next {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "integer",
            "description": "A UTC, unix timestamp of the time of the request.",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiWorkOrderPurchaseRead"
            },
            "description": "The returned IEnumerable<typeparamref name=\"T\" /> results.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a cursor paginated object returned by the API."
      },
      "ApiWorkOrderScheduleRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Work order schedule id",
            "format": "uuid",
            "readOnly": true
          },
          "workOrderNumber": {
            "type": "integer",
            "description": "Work order number",
            "format": "int32",
            "readOnly": true
          },
          "workOrder_Id": {
            "type": "string",
            "description": "The work order id",
            "format": "uuid",
            "readOnly": true
          },
          "scheduledDate": {
            "type": "string",
            "description": "Scheduled date",
            "format": "date-time",
            "readOnly": true
          },
          "workComplete": {
            "type": "boolean",
            "description": "Indicates whether the scheduled work is complete",
            "readOnly": true
          },
          "mechanic_Id": {
            "type": "string",
            "description": "Id of the mechanic assigned to the work order",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "mechanic_FirstName": {
            "type": "string",
            "description": "Mechanic's first name",
            "nullable": true,
            "readOnly": true
          },
          "mechanic_LastName": {
            "type": "string",
            "description": "Mechanic's last name",
            "nullable": true,
            "readOnly": true
          },
          "vendor_ID": {
            "type": "string",
            "description": "Id of the vendor assigned to the work order",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "vendor_Name": {
            "type": "string",
            "description": "Name of the vendor",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a Work Order Schedule object returned by the API."
      },
      "ApiWorkOrderScheduleReadApiPagedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of records within the returned dataset.",
            "format": "int32",
            "readOnly": true
          },
          "prev": {
            "type": "integer",
            "description": "The integer value that will return the previous {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "next": {
            "type": "integer",
            "description": "The integer value that will return the next {count} of Data<typeparamref name=\"T\" /> if passed as a cursor param.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "integer",
            "description": "A UTC, unix timestamp of the time of the request.",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiWorkOrderScheduleRead"
            },
            "description": "The returned IEnumerable<typeparamref name=\"T\" /> results.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A representation of a cursor paginated object returned by the API."
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "oauth2",
        "description": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.hcssapps.com/identity/connect/token",
            "scopes": {
              "e360:read": "e360:read",
              "e360:write": "e360:write"
            }
          },
          "authorizationCode": {
            "tokenUrl": "https://api.hcssapps.com/identity/connect/token",
            "authorizationUrl": "https://api.hcssapps.com/identity/connect/authorize",
            "scopes": {
              "e360:read": "e360:read",
              "e360:write": "e360:write"
            }
          }
        }
      }
    }
  }
}